Search.setIndex({"alltitles": {"AVX CPP": [[8, null]], "AVX Math": [[13, null]], "About AVX CPP": [[0, null]], "Char256 specific metods": [[1, "char256-specific-metods"]], "Documented classes": [[8, "documented-classes"]], "Example of initializing avx::Char256": [[1, "example-of-initializing-avx-char256"]], "Examples": [[1, null], [4, null], [6, null], [9, null], [11, null], [15, null], [17, null], [19, null], [21, null], [23, null]], "Examples of initializing avx::Int256": [[9, "examples-of-initializing-avx-int256"]], "Features": [[0, "features"]], "Limitations": [[0, "limitations"]], "List of classes": [[0, "list-of-classes"]], "List of supported operators": [[1, "list-of-supported-operators"]], "Quickstart": [[14, null]], "Sample example": [[9, "sample-example"]], "Supported operators": [[10, "supported-operators"]], "Usage": [[9, "usage"]], "Using basic arithmetic operators": [[1, "using-basic-arithmetic-operators"]], "avx::Char256": [[2, null]], "avx::Double256": [[5, null]], "avx::Float256": [[7, null]], "avx::Int256": [[10, null]], "avx::Long256": [[12, null]], "avx::Short256": [[16, null]], "avx::UChar256": [[18, null]], "avx::UInt256": [[20, null]], "avx::ULong256": [[22, null]], "avx::UShort256": [[24, null]], "avx::constants": [[3, null]]}, "docnames": ["about", "char256/examples", "char256/index", "constants/index", "double256/examples", "double256/index", "float256/examples", "float256/index", "index", "int256/examples", "int256/index", "long256/examples", "long256/index", "math/index", "quickstart", "short256/examples", "short256/index", "uchar256/examples", "uchar256/index", "uint256/examples", "uint256/index", "ulong256/examples", "ulong256/index", "ushort256/examples", "ushort256/index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["about.rst", "char256/examples.rst", "char256/index.rst", "constants/index.rst", "double256/examples.rst", "double256/index.rst", "float256/examples.rst", "float256/index.rst", "index.rst", "int256/examples.rst", "int256/index.rst", "long256/examples.rst", "long256/index.rst", "math/index.rst", "quickstart.rst", "short256/examples.rst", "short256/index.rst", "uchar256/examples.rst", "uchar256/index.rst", "uint256/examples.rst", "uint256/index.rst", "ulong256/examples.rst", "ulong256/index.rst", "ushort256/examples.rst", "ushort256/index.rst"], "indexentries": {"avx (c++ type)": [[13, "_CPPv43avx", false]], "avx::abs (c++ function)": [[13, "_CPPv4N3avx3absERK6Int256", false], [13, "_CPPv4N3avx3absERK7Char256", false], [13, "_CPPv4N3avx3absERK7Long256", false], [13, "_CPPv4N3avx3absERK8Float256", false], [13, "_CPPv4N3avx3absERK8Short256", false], [13, "_CPPv4N3avx3absERK9Double256", false]], "avx::accumulate (c++ function)": [[13, "_CPPv4N3avx10accumulateERKNSt6vectorI7int64_tEE7int64_t", false], [13, "_CPPv4N3avx10accumulateERKNSt6vectorIdEEd", false], [13, "_CPPv4N3avx10accumulateERKNSt6vectorIfEEf", false], [13, "_CPPv4N3avx10accumulateERKNSt6vectorIiEEi", false]], "avx::char256 (c++ class)": [[2, "_CPPv4N3avx7Char256E", false]], "avx::char256::char256 (c++ function)": [[2, "_CPPv4N3avx7Char2567Char256EKc", false], [2, "_CPPv4N3avx7Char2567Char256ENSt16initializer_listIcEE", false], [2, "_CPPv4N3avx7Char2567Char256EPKc", false], [2, "_CPPv4N3avx7Char2567Char256EPKcj", false], [2, "_CPPv4N3avx7Char2567Char256ERK7Char256", false], [2, "_CPPv4N3avx7Char2567Char256ERK7__m256i", false], [2, "_CPPv4N3avx7Char2567Char256ERKNSt5arrayIcXL32EEEE", false], [2, "_CPPv4N3avx7Char2567Char256ERKNSt6stringE", false], [2, "_CPPv4N3avx7Char2567Char256Ev", false]], "avx::char256::get (c++ function)": [[2, "_CPPv4NK3avx7Char2563getEv", false]], "avx::char256::operator!= (c++ function)": [[2, "_CPPv4NK3avx7Char256neEKc", false], [2, "_CPPv4NK3avx7Char256neERK7Char256", false]], "avx::char256::operator% (c++ function)": [[2, "_CPPv4NK3avx7Char256rmERK7Char256", false], [2, "_CPPv4NK3avx7Char256rmERKc", false]], "avx::char256::operator%= (c++ function)": [[2, "_CPPv4N3avx7Char256rMERK7Char256", false], [2, "_CPPv4N3avx7Char256rMERKc", false]], "avx::char256::operator& (c++ function)": [[2, "_CPPv4NK3avx7Char256anERK7Char256", false], [2, "_CPPv4NK3avx7Char256anERKc", false]], "avx::char256::operator&= (c++ function)": [[2, "_CPPv4N3avx7Char256aNERK7Char256", false], [2, "_CPPv4N3avx7Char256aNERKc", false]], "avx::char256::operator* (c++ function)": [[2, "_CPPv4NK3avx7Char256mlERK7Char256", false], [2, "_CPPv4NK3avx7Char256mlERKc", false]], "avx::char256::operator*= (c++ function)": [[2, "_CPPv4N3avx7Char256mLERK7Char256", false], [2, "_CPPv4N3avx7Char256mLERKc", false]], "avx::char256::operator+ (c++ function)": [[2, "_CPPv4NK3avx7Char256plERK7Char256", false], [2, "_CPPv4NK3avx7Char256plERKc", false]], "avx::char256::operator+= (c++ function)": [[2, "_CPPv4N3avx7Char256pLERK7Char256", false], [2, "_CPPv4N3avx7Char256pLERKc", false]], "avx::char256::operator- (c++ function)": [[2, "_CPPv4NK3avx7Char256miERK7Char256", false], [2, "_CPPv4NK3avx7Char256miERKc", false]], "avx::char256::operator-= (c++ function)": [[2, "_CPPv4N3avx7Char256mIERK7Char256", false], [2, "_CPPv4N3avx7Char256mIERKc", false]], "avx::char256::operator/ (c++ function)": [[2, "_CPPv4NK3avx7Char256dvERK7Char256", false], [2, "_CPPv4NK3avx7Char256dvERKc", false]], "avx::char256::operator/= (c++ function)": [[2, "_CPPv4N3avx7Char256dVERK7Char256", false], [2, "_CPPv4N3avx7Char256dVERKc", false]], "avx::char256::operator<< (c++ function)": [[2, "_CPPv4N3avx7Char256lsERNSt7ostreamERK7Char256", false], [2, "_CPPv4NK3avx7Char256lsERK7Char256", false], [2, "_CPPv4NK3avx7Char256lsERKj", false]], "avx::char256::operator<<= (c++ function)": [[2, "_CPPv4N3avx7Char256lSERK7Char256", false], [2, "_CPPv4N3avx7Char256lSERKj", false]], "avx::char256::operator== (c++ function)": [[2, "_CPPv4NK3avx7Char256eqEKc", false], [2, "_CPPv4NK3avx7Char256eqERK7Char256", false]], "avx::char256::operator>> (c++ function)": [[2, "_CPPv4NK3avx7Char256rsERK7Char256", false], [2, "_CPPv4NK3avx7Char256rsERKj", false]], "avx::char256::operator>>= (c++ function)": [[2, "_CPPv4N3avx7Char256rSERK7Char256", false], [2, "_CPPv4N3avx7Char256rSERKj", false]], "avx::char256::operator[] (c++ function)": [[2, "_CPPv4NK3avx7Char256ixERKj", false]], "avx::char256::operator^ (c++ function)": [[2, "_CPPv4NK3avx7Char256eoERK7Char256", false], [2, "_CPPv4NK3avx7Char256eoERKc", false]], "avx::char256::operator^= (c++ function)": [[2, "_CPPv4N3avx7Char256eOERK7Char256", false], [2, "_CPPv4N3avx7Char256eOERKc", false]], "avx::char256::operator| (c++ function)": [[2, "_CPPv4NK3avx7Char256orERK7Char256", false], [2, "_CPPv4NK3avx7Char256orERKc", false]], "avx::char256::operator|= (c++ function)": [[2, "_CPPv4N3avx7Char256oRERK7Char256", false], [2, "_CPPv4N3avx7Char256oRERKc", false]], "avx::char256::operator~ (c++ function)": [[2, "_CPPv4NK3avx7Char256coEv", false]], "avx::char256::save (c++ function)": [[2, "_CPPv4NK3avx7Char2564saveERNSt5arrayIcXL32EEEE", false]], "avx::char256::set (c++ function)": [[2, "_CPPv4N3avx7Char2563setEK7__m256i", false]], "avx::char256::size (c++ member)": [[2, "_CPPv4N3avx7Char2564sizeE", false]], "avx::char256::storedtype (c++ type)": [[2, "_CPPv4N3avx7Char25610storedTypeE", false]], "avx::char256::str (c++ function)": [[2, "_CPPv4NK3avx7Char2563strEv", false]], "avx::char256::tostring (c++ function)": [[2, "_CPPv4NK3avx7Char2568toStringEv", false]], "avx::constants (c++ type)": [[3, "_CPPv4N3avx9constantsE", false]], "avx::constants::double_no_sign (c++ member)": [[3, "_CPPv4N3avx9constants14DOUBLE_NO_SIGNE", false]], "avx::constants::double_one (c++ member)": [[3, "_CPPv4N3avx9constants10DOUBLE_ONEE", false]], "avx::constants::epi16_crate_epi32 (c++ member)": [[3, "_CPPv4N3avx9constants17EPI16_CRATE_EPI32E", false]], "avx::constants::epi16_crate_epi32_inverse (c++ member)": [[3, "_CPPv4N3avx9constants25EPI16_CRATE_EPI32_INVERSEE", false]], "avx::constants::epi16_one (c++ member)": [[3, "_CPPv4N3avx9constants9EPI16_ONEE", false]], "avx::constants::epi32_crate_epi64 (c++ member)": [[3, "_CPPv4N3avx9constants17EPI32_CRATE_EPI64E", false]], "avx::constants::epi32_one (c++ member)": [[3, "_CPPv4N3avx9constants9EPI32_ONEE", false]], "avx::constants::epi32_sign (c++ member)": [[3, "_CPPv4N3avx9constants10EPI32_SIGNE", false]], "avx::constants::epi32_slowest (c++ member)": [[3, "_CPPv4N3avx9constants13EPI32_SLOWESTE", false]], "avx::constants::epi64_one (c++ member)": [[3, "_CPPv4N3avx9constants9EPI64_ONEE", false]], "avx::constants::epi64_sign (c++ member)": [[3, "_CPPv4N3avx9constants10EPI64_SIGNE", false]], "avx::constants::epi8_crate_epi16 (c++ member)": [[3, "_CPPv4N3avx9constants16EPI8_CRATE_EPI16E", false]], "avx::constants::epi8_crate_epi16_inverse (c++ member)": [[3, "_CPPv4N3avx9constants24EPI8_CRATE_EPI16_INVERSEE", false]], "avx::constants::epi8_crate_epi32 (c++ member)": [[3, "_CPPv4N3avx9constants16EPI8_CRATE_EPI32E", false]], "avx::constants::epi8_crate_epi32_shift_i (c++ member)": [[3, "_CPPv4N3avx9constants24EPI8_CRATE_EPI32_SHIFT_IE", false]], "avx::constants::epi8_crate_epi32_shift_ii (c++ member)": [[3, "_CPPv4N3avx9constants25EPI8_CRATE_EPI32_SHIFT_IIE", false]], "avx::constants::epi8_crate_epi32_shift_iii (c++ member)": [[3, "_CPPv4N3avx9constants26EPI8_CRATE_EPI32_SHIFT_IIIE", false]], "avx::constants::epi8_one (c++ member)": [[3, "_CPPv4N3avx9constants8EPI8_ONEE", false]], "avx::constants::float_limit (c++ member)": [[3, "_CPPv4N3avx9constants11FLOAT_LIMITE", false]], "avx::constants::float_no_sign (c++ member)": [[3, "_CPPv4N3avx9constants13FLOAT_NO_SIGNE", false]], "avx::constants::float_one (c++ member)": [[3, "_CPPv4N3avx9constants9FLOAT_ONEE", false]], "avx::constants::int2float_limit (c++ member)": [[3, "_CPPv4N3avx9constants15INT2FLOAT_LIMITE", false]], "avx::constants::ones (c++ member)": [[3, "_CPPv4N3avx9constants4ONESE", false]], "avx::cos (c++ function)": [[13, "_CPPv4N3avx3cosERK8Float256", false], [13, "_CPPv4N3avx3cosERK9Double256", false]], "avx::cosec (c++ function)": [[13, "_CPPv4N3avx5cosecERK8Float256", false], [13, "_CPPv4N3avx5cosecERK9Double256", false]], "avx::ctg (c++ function)": [[13, "_CPPv4N3avx3ctgERK8Float256", false], [13, "_CPPv4N3avx3ctgERK9Double256", false]], "avx::double256 (c++ class)": [[5, "_CPPv4N3avx9Double256E", false]], "avx::double256::double256 (c++ function)": [[5, "_CPPv4N3avx9Double2569Double256EK7__m256d", false], [5, "_CPPv4N3avx9Double2569Double256EKd", false], [5, "_CPPv4N3avx9Double2569Double256ENSt16initializer_listIdEE", false], [5, "_CPPv4N3avx9Double2569Double256ERK9Double256", false], [5, "_CPPv4N3avx9Double2569Double256ERKNSt5arrayIdXL4EEEE", false], [5, "_CPPv4N3avx9Double2569Double256Ev", false]], "avx::double256::get (c++ function)": [[5, "_CPPv4NK3avx9Double2563getEv", false]], "avx::double256::operator!= (c++ function)": [[5, "_CPPv4N3avx9Double256neEKd", false], [5, "_CPPv4N3avx9Double256neERK9Double256", false]], "avx::double256::operator* (c++ function)": [[5, "_CPPv4NK3avx9Double256mlEKd", false], [5, "_CPPv4NK3avx9Double256mlERK9Double256", false]], "avx::double256::operator*= (c++ function)": [[5, "_CPPv4N3avx9Double256mLEKd", false], [5, "_CPPv4N3avx9Double256mLERK9Double256", false]], "avx::double256::operator+ (c++ function)": [[5, "_CPPv4NK3avx9Double256plEKd", false], [5, "_CPPv4NK3avx9Double256plERK9Double256", false]], "avx::double256::operator+= (c++ function)": [[5, "_CPPv4N3avx9Double256pLEKd", false], [5, "_CPPv4N3avx9Double256pLERK9Double256", false]], "avx::double256::operator- (c++ function)": [[5, "_CPPv4NK3avx9Double256miEKd", false], [5, "_CPPv4NK3avx9Double256miERK9Double256", false]], "avx::double256::operator-= (c++ function)": [[5, "_CPPv4N3avx9Double256mIEKd", false], [5, "_CPPv4N3avx9Double256mIERK9Double256", false]], "avx::double256::operator/ (c++ function)": [[5, "_CPPv4NK3avx9Double256dvEKd", false], [5, "_CPPv4NK3avx9Double256dvERK9Double256", false]], "avx::double256::operator/= (c++ function)": [[5, "_CPPv4N3avx9Double256dVEKd", false], [5, "_CPPv4N3avx9Double256dVERK9Double256", false]], "avx::double256::operator== (c++ function)": [[5, "_CPPv4N3avx9Double256eqEKd", false], [5, "_CPPv4N3avx9Double256eqERK9Double256", false]], "avx::double256::operator[] (c++ function)": [[5, "_CPPv4NK3avx9Double256ixEKj", false]], "avx::double256::save (c++ function)": [[5, "_CPPv4NK3avx9Double2564saveERNSt5arrayIdXL4EEEE", false]], "avx::double256::set (c++ function)": [[5, "_CPPv4N3avx9Double2563setE7__m256d", false]], "avx::double256::size (c++ member)": [[5, "_CPPv4N3avx9Double2564sizeE", false]], "avx::double256::storedtype (c++ type)": [[5, "_CPPv4N3avx9Double25610storedTypeE", false]], "avx::double256::str (c++ function)": [[5, "_CPPv4NK3avx9Double2563strEv", false]], "avx::float256 (c++ class)": [[7, "_CPPv4N3avx8Float256E", false]], "avx::float256::float256 (c++ function)": [[7, "_CPPv4N3avx8Float2568Float256EK6__m256", false], [7, "_CPPv4N3avx8Float2568Float256EKf", false], [7, "_CPPv4N3avx8Float2568Float256ENSt16initializer_listIfEE", false], [7, "_CPPv4N3avx8Float2568Float256EPKf", false], [7, "_CPPv4N3avx8Float2568Float256ERK8Float256", false], [7, "_CPPv4N3avx8Float2568Float256ERKNSt5arrayIfXL8EEEE", false], [7, "_CPPv4N3avx8Float2568Float256Ev", false]], "avx::float256::get (c++ function)": [[7, "_CPPv4NK3avx8Float2563getEv", false]], "avx::float256::operator!= (c++ function)": [[7, "_CPPv4N3avx8Float256neEKf", false], [7, "_CPPv4N3avx8Float256neERK8Float256", false]], "avx::float256::operator* (c++ function)": [[7, "_CPPv4NK3avx8Float256mlEKf", false], [7, "_CPPv4NK3avx8Float256mlERK8Float256", false]], "avx::float256::operator*= (c++ function)": [[7, "_CPPv4N3avx8Float256mLEKf", false], [7, "_CPPv4N3avx8Float256mLERK8Float256", false]], "avx::float256::operator+ (c++ function)": [[7, "_CPPv4NK3avx8Float256plEKf", false], [7, "_CPPv4NK3avx8Float256plERK8Float256", false]], "avx::float256::operator+= (c++ function)": [[7, "_CPPv4N3avx8Float256pLEKf", false], [7, "_CPPv4N3avx8Float256pLERK8Float256", false]], "avx::float256::operator- (c++ function)": [[7, "_CPPv4NK3avx8Float256miEKf", false], [7, "_CPPv4NK3avx8Float256miERK8Float256", false]], "avx::float256::operator-= (c++ function)": [[7, "_CPPv4N3avx8Float256mIEKf", false], [7, "_CPPv4N3avx8Float256mIERK8Float256", false]], "avx::float256::operator/ (c++ function)": [[7, "_CPPv4NK3avx8Float256dvEKf", false], [7, "_CPPv4NK3avx8Float256dvERK8Float256", false]], "avx::float256::operator/= (c++ function)": [[7, "_CPPv4N3avx8Float256dVEKf", false], [7, "_CPPv4N3avx8Float256dVERK8Float256", false]], "avx::float256::operator== (c++ function)": [[7, "_CPPv4N3avx8Float256eqEKf", false], [7, "_CPPv4N3avx8Float256eqERK8Float256", false]], "avx::float256::operator[] (c++ function)": [[7, "_CPPv4NK3avx8Float256ixEKj", false]], "avx::float256::save (c++ function)": [[7, "_CPPv4NK3avx8Float2564saveERNSt5arrayIfXL8EEEE", false]], "avx::float256::set (c++ function)": [[7, "_CPPv4N3avx8Float2563setE6__m256", false]], "avx::float256::size (c++ member)": [[7, "_CPPv4N3avx8Float2564sizeE", false]], "avx::float256::storedtype (c++ type)": [[7, "_CPPv4N3avx8Float25610storedTypeE", false]], "avx::float256::str (c++ function)": [[7, "_CPPv4NK3avx8Float2563strEv", false]], "avx::int256 (c++ class)": [[10, "_CPPv4N3avx6Int256E", false]], "avx::int256::get (c++ function)": [[10, "_CPPv4NK3avx6Int2563getEv", false]], "avx::int256::int256 (c++ function)": [[10, "_CPPv4N3avx6Int2566Int256ENSt16initializer_listIiEE", false], [10, "_CPPv4N3avx6Int2566Int256EPKi", false], [10, "_CPPv4N3avx6Int2566Int256ERK6Int256", false], [10, "_CPPv4N3avx6Int2566Int256ERK7__m256i", false], [10, "_CPPv4N3avx6Int2566Int256ERKNSt5arrayIcXL8EEEE", false], [10, "_CPPv4N3avx6Int2566Int256ERKNSt5arrayIiXL8EEEE", false], [10, "_CPPv4N3avx6Int2566Int256ERKNSt5arrayIsXL8EEEE", false], [10, "_CPPv4N3avx6Int2566Int256ERKi", false], [10, "_CPPv4N3avx6Int2566Int256Ev", false]], "avx::int256::operator!= (c++ function)": [[10, "_CPPv4NK3avx6Int256neERK6Int256", false], [10, "_CPPv4NK3avx6Int256neERKi", false]], "avx::int256::operator% (c++ function)": [[10, "_CPPv4NK3avx6Int256rmERK6Int256", false], [10, "_CPPv4NK3avx6Int256rmERKi", false]], "avx::int256::operator%= (c++ function)": [[10, "_CPPv4N3avx6Int256rMERK6Int256", false], [10, "_CPPv4N3avx6Int256rMERKi", false]], "avx::int256::operator& (c++ function)": [[10, "_CPPv4NK3avx6Int256anERK6Int256", false], [10, "_CPPv4NK3avx6Int256anERKi", false]], "avx::int256::operator&= (c++ function)": [[10, "_CPPv4N3avx6Int256aNERK6Int256", false], [10, "_CPPv4N3avx6Int256aNERKi", false]], "avx::int256::operator* (c++ function)": [[10, "_CPPv4NK3avx6Int256mlERK6Int256", false], [10, "_CPPv4NK3avx6Int256mlERKi", false]], "avx::int256::operator*= (c++ function)": [[10, "_CPPv4N3avx6Int256mLERK6Int256", false], [10, "_CPPv4N3avx6Int256mLERKi", false]], "avx::int256::operator+ (c++ function)": [[10, "_CPPv4NK3avx6Int256plERK6Int256", false], [10, "_CPPv4NK3avx6Int256plERKi", false]], "avx::int256::operator+= (c++ function)": [[10, "_CPPv4N3avx6Int256pLERK6Int256", false], [10, "_CPPv4N3avx6Int256pLERKi", false]], "avx::int256::operator- (c++ function)": [[10, "_CPPv4NK3avx6Int256miERK6Int256", false], [10, "_CPPv4NK3avx6Int256miERKi", false]], "avx::int256::operator-= (c++ function)": [[10, "_CPPv4N3avx6Int256mIERK6Int256", false], [10, "_CPPv4N3avx6Int256mIERKi", false]], "avx::int256::operator/ (c++ function)": [[10, "_CPPv4NK3avx6Int256dvERK6Int256", false], [10, "_CPPv4NK3avx6Int256dvERKi", false]], "avx::int256::operator/= (c++ function)": [[10, "_CPPv4N3avx6Int256dVERK6Int256", false], [10, "_CPPv4N3avx6Int256dVERKi", false]], "avx::int256::operator<< (c++ function)": [[10, "_CPPv4NK3avx6Int256lsERK6Int256", false], [10, "_CPPv4NK3avx6Int256lsERKi", false]], "avx::int256::operator<<= (c++ function)": [[10, "_CPPv4N3avx6Int256lSERK6Int256", false], [10, "_CPPv4N3avx6Int256lSERKi", false]], "avx::int256::operator== (c++ function)": [[10, "_CPPv4NK3avx6Int256eqERK6Int256", false], [10, "_CPPv4NK3avx6Int256eqERKi", false]], "avx::int256::operator>> (c++ function)": [[10, "_CPPv4NK3avx6Int256rsERK6Int256", false], [10, "_CPPv4NK3avx6Int256rsERKi", false]], "avx::int256::operator>>= (c++ function)": [[10, "_CPPv4N3avx6Int256rSERK6Int256", false], [10, "_CPPv4N3avx6Int256rSERKi", false]], "avx::int256::operator[] (c++ function)": [[10, "_CPPv4NK3avx6Int256ixEKj", false]], "avx::int256::operator^ (c++ function)": [[10, "_CPPv4NK3avx6Int256eoERK6Int256", false], [10, "_CPPv4NK3avx6Int256eoERKi", false]], "avx::int256::operator^= (c++ function)": [[10, "_CPPv4N3avx6Int256eOERK6Int256", false], [10, "_CPPv4N3avx6Int256eOERKi", false]], "avx::int256::operator| (c++ function)": [[10, "_CPPv4NK3avx6Int256orERK6Int256", false], [10, "_CPPv4NK3avx6Int256orERKi", false]], "avx::int256::operator|= (c++ function)": [[10, "_CPPv4N3avx6Int256oRERK6Int256", false], [10, "_CPPv4N3avx6Int256oRERKi", false]], "avx::int256::operator~ (c++ function)": [[10, "_CPPv4NK3avx6Int256coEv", false]], "avx::int256::save (c++ function)": [[10, "_CPPv4NK3avx6Int2564saveERNSt5arrayIiXL8EEEE", false]], "avx::int256::set (c++ function)": [[10, "_CPPv4N3avx6Int2563setE7__m256i", false]], "avx::int256::size (c++ member)": [[10, "_CPPv4N3avx6Int2564sizeE", false]], "avx::int256::storedtype (c++ type)": [[10, "_CPPv4N3avx6Int25610storedTypeE", false]], "avx::int256::str (c++ function)": [[10, "_CPPv4NK3avx6Int2563strEv", false]], "avx::long256 (c++ class)": [[12, "_CPPv4N3avx7Long256E", false]], "avx::long256::get (c++ function)": [[12, "_CPPv4NK3avx7Long2563getEv", false]], "avx::long256::long256 (c++ function)": [[12, "_CPPv4N3avx7Long2567Long256E7__m256i", false], [12, "_CPPv4N3avx7Long2567Long256ENSt16initializer_listIxEE", false], [12, "_CPPv4N3avx7Long2567Long256EPKx", false], [12, "_CPPv4N3avx7Long2567Long256ER7Long256", false], [12, "_CPPv4N3avx7Long2567Long256ERK7Long256", false], [12, "_CPPv4N3avx7Long2567Long256ERKNSt5arrayIcXL4EEEE", false], [12, "_CPPv4N3avx7Long2567Long256ERKNSt5arrayIiXL4EEEE", false], [12, "_CPPv4N3avx7Long2567Long256ERKNSt5arrayIsXL4EEEE", false], [12, "_CPPv4N3avx7Long2567Long256ERKNSt5arrayIxXL4EEEE", false], [12, "_CPPv4N3avx7Long2567Long256ERKx", false], [12, "_CPPv4N3avx7Long2567Long256Ev", false]], "avx::long256::operator!= (c++ function)": [[12, "_CPPv4NK3avx7Long256neEKx", false], [12, "_CPPv4NK3avx7Long256neERK7Long256", false]], "avx::long256::operator% (c++ function)": [[12, "_CPPv4NK3avx7Long256rmERK7Long256", false], [12, "_CPPv4NK3avx7Long256rmERKx", false]], "avx::long256::operator%= (c++ function)": [[12, "_CPPv4N3avx7Long256rMERK7Long256", false], [12, "_CPPv4N3avx7Long256rMERKx", false]], "avx::long256::operator& (c++ function)": [[12, "_CPPv4NK3avx7Long256anERK7Long256", false], [12, "_CPPv4NK3avx7Long256anERKx", false]], "avx::long256::operator&= (c++ function)": [[12, "_CPPv4N3avx7Long256aNERK7Long256", false], [12, "_CPPv4N3avx7Long256aNERKx", false]], "avx::long256::operator* (c++ function)": [[12, "_CPPv4NK3avx7Long256mlERK7Long256", false], [12, "_CPPv4NK3avx7Long256mlERKx", false]], "avx::long256::operator*= (c++ function)": [[12, "_CPPv4N3avx7Long256mLERK7Long256", false], [12, "_CPPv4N3avx7Long256mLERKx", false]], "avx::long256::operator+ (c++ function)": [[12, "_CPPv4NK3avx7Long256plERK7Long256", false], [12, "_CPPv4NK3avx7Long256plERKx", false]], "avx::long256::operator+= (c++ function)": [[12, "_CPPv4N3avx7Long256pLERK7Long256", false], [12, "_CPPv4N3avx7Long256pLERKx", false]], "avx::long256::operator- (c++ function)": [[12, "_CPPv4NK3avx7Long256miERK7Long256", false], [12, "_CPPv4NK3avx7Long256miERKx", false]], "avx::long256::operator-= (c++ function)": [[12, "_CPPv4N3avx7Long256mIERK7Long256", false], [12, "_CPPv4N3avx7Long256mIERKx", false]], "avx::long256::operator/ (c++ function)": [[12, "_CPPv4NK3avx7Long256dvERK7Long256", false], [12, "_CPPv4NK3avx7Long256dvERKx", false]], "avx::long256::operator/= (c++ function)": [[12, "_CPPv4N3avx7Long256dVERK7Long256", false], [12, "_CPPv4N3avx7Long256dVERKx", false]], "avx::long256::operator<< (c++ function)": [[12, "_CPPv4NK3avx7Long256lsERK7Long256", false], [12, "_CPPv4NK3avx7Long256lsERKj", false]], "avx::long256::operator<<= (c++ function)": [[12, "_CPPv4N3avx7Long256lSERK7Long256", false], [12, "_CPPv4N3avx7Long256lSERKj", false]], "avx::long256::operator== (c++ function)": [[12, "_CPPv4NK3avx7Long256eqEKx", false], [12, "_CPPv4NK3avx7Long256eqERK7Long256", false]], "avx::long256::operator>> (c++ function)": [[12, "_CPPv4NK3avx7Long256rsERK7Long256", false], [12, "_CPPv4NK3avx7Long256rsERKj", false]], "avx::long256::operator>>= (c++ function)": [[12, "_CPPv4N3avx7Long256rSERK7Long256", false], [12, "_CPPv4N3avx7Long256rSERKj", false]], "avx::long256::operator[] (c++ function)": [[12, "_CPPv4NK3avx7Long256ixEj", false]], "avx::long256::operator^ (c++ function)": [[12, "_CPPv4NK3avx7Long256eoERK7Long256", false], [12, "_CPPv4NK3avx7Long256eoERKx", false]], "avx::long256::operator^= (c++ function)": [[12, "_CPPv4N3avx7Long256eOERK7Long256", false], [12, "_CPPv4N3avx7Long256eOERKx", false]], "avx::long256::operator| (c++ function)": [[12, "_CPPv4NK3avx7Long256orERK7Long256", false], [12, "_CPPv4NK3avx7Long256orERKx", false]], "avx::long256::operator|= (c++ function)": [[12, "_CPPv4N3avx7Long256oRERK7Long256", false], [12, "_CPPv4N3avx7Long256oRERKx", false]], "avx::long256::operator~ (c++ function)": [[12, "_CPPv4NK3avx7Long256coEv", false]], "avx::long256::save (c++ function)": [[12, "_CPPv4NK3avx7Long2564saveERNSt5arrayIxXL4EEEE", false]], "avx::long256::set (c++ function)": [[12, "_CPPv4N3avx7Long2563setE7__m256i", false]], "avx::long256::size (c++ member)": [[12, "_CPPv4N3avx7Long2564sizeE", false]], "avx::long256::storedtype (c++ type)": [[12, "_CPPv4N3avx7Long25610storedTypeE", false]], "avx::long256::str (c++ function)": [[12, "_CPPv4NK3avx7Long2563strEv", false]], "avx::sec (c++ function)": [[13, "_CPPv4N3avx3secERK8Float256", false], [13, "_CPPv4N3avx3secERK9Double256", false]], "avx::short256 (c++ class)": [[16, "_CPPv4N3avx8Short256E", false]], "avx::short256::get (c++ function)": [[16, "_CPPv4NK3avx8Short2563getEv", false]], "avx::short256::operator!= (c++ function)": [[16, "_CPPv4NK3avx8Short256neEKs", false], [16, "_CPPv4NK3avx8Short256neERK8Short256", false]], "avx::short256::operator% (c++ function)": [[16, "_CPPv4N3avx8Short256rmERKs", false], [16, "_CPPv4NK3avx8Short256rmERK8Short256", false]], "avx::short256::operator%= (c++ function)": [[16, "_CPPv4N3avx8Short256rMERK8Short256", false], [16, "_CPPv4N3avx8Short256rMERKs", false]], "avx::short256::operator& (c++ function)": [[16, "_CPPv4NK3avx8Short256anERK8Short256", false], [16, "_CPPv4NK3avx8Short256anERKs", false]], "avx::short256::operator&= (c++ function)": [[16, "_CPPv4N3avx8Short256aNERK8Short256", false], [16, "_CPPv4N3avx8Short256aNERKs", false]], "avx::short256::operator* (c++ function)": [[16, "_CPPv4NK3avx8Short256mlERK8Short256", false], [16, "_CPPv4NK3avx8Short256mlERKs", false]], "avx::short256::operator*= (c++ function)": [[16, "_CPPv4N3avx8Short256mLERK8Short256", false], [16, "_CPPv4N3avx8Short256mLERKs", false]], "avx::short256::operator+ (c++ function)": [[16, "_CPPv4NK3avx8Short256plERK8Short256", false], [16, "_CPPv4NK3avx8Short256plERKs", false]], "avx::short256::operator+= (c++ function)": [[16, "_CPPv4N3avx8Short256pLERK8Short256", false], [16, "_CPPv4N3avx8Short256pLERKs", false]], "avx::short256::operator- (c++ function)": [[16, "_CPPv4NK3avx8Short256miERK8Short256", false], [16, "_CPPv4NK3avx8Short256miERKs", false]], "avx::short256::operator-= (c++ function)": [[16, "_CPPv4N3avx8Short256mIERK8Short256", false], [16, "_CPPv4N3avx8Short256mIERKs", false]], "avx::short256::operator/ (c++ function)": [[16, "_CPPv4NK3avx8Short256dvERK8Short256", false], [16, "_CPPv4NK3avx8Short256dvERKs", false]], "avx::short256::operator/= (c++ function)": [[16, "_CPPv4N3avx8Short256dVERK8Short256", false], [16, "_CPPv4N3avx8Short256dVERKs", false]], "avx::short256::operator<< (c++ function)": [[16, "_CPPv4NK3avx8Short256lsERK8Short256", false], [16, "_CPPv4NK3avx8Short256lsERKj", false]], "avx::short256::operator<<= (c++ function)": [[16, "_CPPv4N3avx8Short256lSERK8Short256", false], [16, "_CPPv4N3avx8Short256lSERKj", false]], "avx::short256::operator== (c++ function)": [[16, "_CPPv4NK3avx8Short256eqEKs", false], [16, "_CPPv4NK3avx8Short256eqERK8Short256", false]], "avx::short256::operator>> (c++ function)": [[16, "_CPPv4NK3avx8Short256rsERK8Short256", false], [16, "_CPPv4NK3avx8Short256rsERKj", false]], "avx::short256::operator>>= (c++ function)": [[16, "_CPPv4N3avx8Short256rSERK8Short256", false], [16, "_CPPv4N3avx8Short256rSERKj", false]], "avx::short256::operator[] (c++ function)": [[16, "_CPPv4NK3avx8Short256ixERKj", false]], "avx::short256::operator^ (c++ function)": [[16, "_CPPv4NK3avx8Short256eoERK8Short256", false], [16, "_CPPv4NK3avx8Short256eoERKs", false]], "avx::short256::operator^= (c++ function)": [[16, "_CPPv4N3avx8Short256eOERK8Short256", false], [16, "_CPPv4N3avx8Short256eOERKs", false]], "avx::short256::operator| (c++ function)": [[16, "_CPPv4NK3avx8Short256orERK8Short256", false], [16, "_CPPv4NK3avx8Short256orERKs", false]], "avx::short256::operator|= (c++ function)": [[16, "_CPPv4N3avx8Short256oRERK8Short256", false], [16, "_CPPv4N3avx8Short256oRERKs", false]], "avx::short256::operator~ (c++ function)": [[16, "_CPPv4NK3avx8Short256coEv", false]], "avx::short256::save (c++ function)": [[16, "_CPPv4NK3avx8Short2564saveERNSt5arrayIsXL16EEEE", false]], "avx::short256::set (c++ function)": [[16, "_CPPv4N3avx8Short2563setEK7__m256i", false]], "avx::short256::short256 (c++ function)": [[16, "_CPPv4N3avx8Short2568Short256EKs", false], [16, "_CPPv4N3avx8Short2568Short256ENSt16initializer_listIsEE", false], [16, "_CPPv4N3avx8Short2568Short256ERK7__m256i", false], [16, "_CPPv4N3avx8Short2568Short256ERK8Short256", false], [16, "_CPPv4N3avx8Short2568Short256ERKNSt5arrayIsXL16EEEE", false], [16, "_CPPv4N3avx8Short2568Short256Ev", false]], "avx::short256::size (c++ member)": [[16, "_CPPv4N3avx8Short2564sizeE", false]], "avx::short256::storedtype (c++ type)": [[16, "_CPPv4N3avx8Short25610storedTypeE", false]], "avx::short256::str (c++ function)": [[16, "_CPPv4NK3avx8Short2563strEv", false]], "avx::sin (c++ function)": [[13, "_CPPv4N3avx3sinERK8Float256", false], [13, "_CPPv4N3avx3sinERK9Double256", false]], "avx::tan (c++ function)": [[13, "_CPPv4N3avx3tanERK8Float256", false], [13, "_CPPv4N3avx3tanERK9Double256", false]], "avx::uchar256 (c++ class)": [[18, "_CPPv4N3avx8UChar256E", false]], "avx::uchar256::get (c++ function)": [[18, "_CPPv4NK3avx8UChar2563getEv", false]], "avx::uchar256::operator!= (c++ function)": [[18, "_CPPv4NK3avx8UChar256neEKc", false], [18, "_CPPv4NK3avx8UChar256neERK8UChar256", false]], "avx::uchar256::operator% (c++ function)": [[18, "_CPPv4NK3avx8UChar256rmEKh", false], [18, "_CPPv4NK3avx8UChar256rmERK8UChar256", false]], "avx::uchar256::operator%= (c++ function)": [[18, "_CPPv4N3avx8UChar256rMEKh", false], [18, "_CPPv4N3avx8UChar256rMERK8UChar256", false]], "avx::uchar256::operator& (c++ function)": [[18, "_CPPv4NK3avx8UChar256anERK8UChar256", false], [18, "_CPPv4NK3avx8UChar256anERKh", false]], "avx::uchar256::operator&= (c++ function)": [[18, "_CPPv4N3avx8UChar256aNERK8UChar256", false], [18, "_CPPv4N3avx8UChar256aNERKh", false]], "avx::uchar256::operator* (c++ function)": [[18, "_CPPv4NK3avx8UChar256mlERK8UChar256", false], [18, "_CPPv4NK3avx8UChar256mlERKc", false]], "avx::uchar256::operator*= (c++ function)": [[18, "_CPPv4N3avx8UChar256mLERK8UChar256", false], [18, "_CPPv4N3avx8UChar256mLERKc", false]], "avx::uchar256::operator+ (c++ function)": [[18, "_CPPv4NK3avx8UChar256plERK8UChar256", false], [18, "_CPPv4NK3avx8UChar256plERKh", false]], "avx::uchar256::operator+= (c++ function)": [[18, "_CPPv4N3avx8UChar256pLERK8UChar256", false], [18, "_CPPv4N3avx8UChar256pLERKh", false]], "avx::uchar256::operator- (c++ function)": [[18, "_CPPv4NK3avx8UChar256miERK8UChar256", false], [18, "_CPPv4NK3avx8UChar256miERKh", false]], "avx::uchar256::operator-= (c++ function)": [[18, "_CPPv4N3avx8UChar256mIERK8UChar256", false], [18, "_CPPv4N3avx8UChar256mIERKh", false]], "avx::uchar256::operator/ (c++ function)": [[18, "_CPPv4NK3avx8UChar256dvEKh", false], [18, "_CPPv4NK3avx8UChar256dvERK8UChar256", false]], "avx::uchar256::operator/= (c++ function)": [[18, "_CPPv4N3avx8UChar256dVEKh", false], [18, "_CPPv4N3avx8UChar256dVERK8UChar256", false]], "avx::uchar256::operator<< (c++ function)": [[18, "_CPPv4N3avx8UChar256lsERNSt7ostreamERK8UChar256", false], [18, "_CPPv4NK3avx8UChar256lsERK8UChar256", false], [18, "_CPPv4NK3avx8UChar256lsERKj", false]], "avx::uchar256::operator<<= (c++ function)": [[18, "_CPPv4N3avx8UChar256lSERK8UChar256", false], [18, "_CPPv4N3avx8UChar256lSERKj", false]], "avx::uchar256::operator== (c++ function)": [[18, "_CPPv4NK3avx8UChar256eqEKc", false], [18, "_CPPv4NK3avx8UChar256eqERK8UChar256", false]], "avx::uchar256::operator>> (c++ function)": [[18, "_CPPv4NK3avx8UChar256rsERK8UChar256", false], [18, "_CPPv4NK3avx8UChar256rsERKj", false]], "avx::uchar256::operator>>= (c++ function)": [[18, "_CPPv4N3avx8UChar256rSERK8UChar256", false], [18, "_CPPv4N3avx8UChar256rSERKj", false]], "avx::uchar256::operator[] (c++ function)": [[18, "_CPPv4NK3avx8UChar256ixERKj", false]], "avx::uchar256::operator^ (c++ function)": [[18, "_CPPv4NK3avx8UChar256eoERK8UChar256", false], [18, "_CPPv4NK3avx8UChar256eoERKh", false]], "avx::uchar256::operator^= (c++ function)": [[18, "_CPPv4N3avx8UChar256eOERK8UChar256", false], [18, "_CPPv4N3avx8UChar256eOERKh", false]], "avx::uchar256::operator| (c++ function)": [[18, "_CPPv4NK3avx8UChar256orERK8UChar256", false], [18, "_CPPv4NK3avx8UChar256orERKh", false]], "avx::uchar256::operator|= (c++ function)": [[18, "_CPPv4N3avx8UChar256oRERK8UChar256", false], [18, "_CPPv4N3avx8UChar256oRERKh", false]], "avx::uchar256::operator~ (c++ function)": [[18, "_CPPv4NK3avx8UChar256coEv", false]], "avx::uchar256::save (c++ function)": [[18, "_CPPv4NK3avx8UChar2564saveERNSt5arrayIhXL32EEEE", false]], "avx::uchar256::set (c++ function)": [[18, "_CPPv4N3avx8UChar2563setEK7__m256i", false]], "avx::uchar256::size (c++ member)": [[18, "_CPPv4N3avx8UChar2564sizeE", false]], "avx::uchar256::storedtype (c++ type)": [[18, "_CPPv4N3avx8UChar25610storedTypeE", false]], "avx::uchar256::str (c++ function)": [[18, "_CPPv4NK3avx8UChar2563strEv", false]], "avx::uchar256::tostring (c++ function)": [[18, "_CPPv4NK3avx8UChar2568toStringEv", false]], "avx::uchar256::uchar256 (c++ function)": [[18, "_CPPv4N3avx8UChar2568UChar256EKh", false], [18, "_CPPv4N3avx8UChar2568UChar256ENSt16initializer_listIhEE", false], [18, "_CPPv4N3avx8UChar2568UChar256EPKh", false], [18, "_CPPv4N3avx8UChar2568UChar256ERK7__m256i", false], [18, "_CPPv4N3avx8UChar2568UChar256ERK8UChar256", false], [18, "_CPPv4N3avx8UChar2568UChar256ERKNSt5arrayIhXL32EEEE", false], [18, "_CPPv4N3avx8UChar2568UChar256ERKNSt6stringE", false], [18, "_CPPv4N3avx8UChar2568UChar256Ev", false]], "avx::uint256 (c++ class)": [[20, "_CPPv4N3avx7UInt256E", false]], "avx::uint256::get (c++ function)": [[20, "_CPPv4NK3avx7UInt2563getEv", false]], "avx::uint256::operator!= (c++ function)": [[20, "_CPPv4NK3avx7UInt256neEKi", false], [20, "_CPPv4NK3avx7UInt256neERK7UInt256", false]], "avx::uint256::operator% (c++ function)": [[20, "_CPPv4NK3avx7UInt256rmEKj", false], [20, "_CPPv4NK3avx7UInt256rmERK7UInt256", false]], "avx::uint256::operator%= (c++ function)": [[20, "_CPPv4N3avx7UInt256rMEKj", false], [20, "_CPPv4N3avx7UInt256rMERK7UInt256", false]], "avx::uint256::operator& (c++ function)": [[20, "_CPPv4NK3avx7UInt256anEKj", false], [20, "_CPPv4NK3avx7UInt256anERK7UInt256", false]], "avx::uint256::operator&= (c++ function)": [[20, "_CPPv4N3avx7UInt256aNEKj", false], [20, "_CPPv4N3avx7UInt256aNERK7UInt256", false]], "avx::uint256::operator* (c++ function)": [[20, "_CPPv4NK3avx7UInt256mlEKj", false], [20, "_CPPv4NK3avx7UInt256mlERK7UInt256", false]], "avx::uint256::operator*= (c++ function)": [[20, "_CPPv4N3avx7UInt256mLEKj", false], [20, "_CPPv4N3avx7UInt256mLERK7UInt256", false]], "avx::uint256::operator+ (c++ function)": [[20, "_CPPv4NK3avx7UInt256plEKj", false], [20, "_CPPv4NK3avx7UInt256plERK7UInt256", false]], "avx::uint256::operator+= (c++ function)": [[20, "_CPPv4N3avx7UInt256pLEKj", false], [20, "_CPPv4N3avx7UInt256pLERK7UInt256", false]], "avx::uint256::operator- (c++ function)": [[20, "_CPPv4NK3avx7UInt256miEKj", false], [20, "_CPPv4NK3avx7UInt256miERK7UInt256", false]], "avx::uint256::operator-= (c++ function)": [[20, "_CPPv4N3avx7UInt256mIEKj", false], [20, "_CPPv4N3avx7UInt256mIERK7UInt256", false]], "avx::uint256::operator/ (c++ function)": [[20, "_CPPv4NK3avx7UInt256dvEKj", false], [20, "_CPPv4NK3avx7UInt256dvERK7UInt256", false]], "avx::uint256::operator/= (c++ function)": [[20, "_CPPv4N3avx7UInt256dVEKj", false], [20, "_CPPv4N3avx7UInt256dVERK7UInt256", false]], "avx::uint256::operator<< (c++ function)": [[20, "_CPPv4NK3avx7UInt256lsEKj", false], [20, "_CPPv4NK3avx7UInt256lsERK7UInt256", false]], "avx::uint256::operator<<= (c++ function)": [[20, "_CPPv4N3avx7UInt256lSEKj", false], [20, "_CPPv4N3avx7UInt256lSERK7UInt256", false]], "avx::uint256::operator== (c++ function)": [[20, "_CPPv4NK3avx7UInt256eqEKi", false], [20, "_CPPv4NK3avx7UInt256eqERK7UInt256", false]], "avx::uint256::operator>> (c++ function)": [[20, "_CPPv4NK3avx7UInt256rsEKj", false], [20, "_CPPv4NK3avx7UInt256rsERK7UInt256", false]], "avx::uint256::operator>>= (c++ function)": [[20, "_CPPv4N3avx7UInt256rSEKj", false], [20, "_CPPv4N3avx7UInt256rSERK7UInt256", false]], "avx::uint256::operator[] (c++ function)": [[20, "_CPPv4NK3avx7UInt256ixEKj", false]], "avx::uint256::operator^ (c++ function)": [[20, "_CPPv4NK3avx7UInt256eoEKj", false], [20, "_CPPv4NK3avx7UInt256eoERK7UInt256", false]], "avx::uint256::operator^= (c++ function)": [[20, "_CPPv4N3avx7UInt256eOEKj", false], [20, "_CPPv4N3avx7UInt256eOERK7UInt256", false]], "avx::uint256::operator| (c++ function)": [[20, "_CPPv4NK3avx7UInt256orEKj", false], [20, "_CPPv4NK3avx7UInt256orERK7UInt256", false]], "avx::uint256::operator|= (c++ function)": [[20, "_CPPv4N3avx7UInt256oREKj", false], [20, "_CPPv4N3avx7UInt256oRERK7UInt256", false]], "avx::uint256::operator~ (c++ function)": [[20, "_CPPv4NK3avx7UInt256coEv", false]], "avx::uint256::save (c++ function)": [[20, "_CPPv4NK3avx7UInt2564saveERNSt5arrayIjXL8EEEE", false]], "avx::uint256::set (c++ function)": [[20, "_CPPv4N3avx7UInt2563setE7__m256i", false]], "avx::uint256::size (c++ member)": [[20, "_CPPv4N3avx7UInt2564sizeE", false]], "avx::uint256::storedtype (c++ type)": [[20, "_CPPv4N3avx7UInt25610storedTypeE", false]], "avx::uint256::str (c++ function)": [[20, "_CPPv4NK3avx7UInt2563strEv", false]], "avx::uint256::uint256 (c++ function)": [[20, "_CPPv4N3avx7UInt2567UInt256E7__m256i", false], [20, "_CPPv4N3avx7UInt2567UInt256EKj", false], [20, "_CPPv4N3avx7UInt2567UInt256ENSt16initializer_listIjEE", false], [20, "_CPPv4N3avx7UInt2567UInt256ENSt5arrayIhXL8EEEE", false], [20, "_CPPv4N3avx7UInt2567UInt256ENSt5arrayIjXL8EEEE", false], [20, "_CPPv4N3avx7UInt2567UInt256ENSt5arrayItXL8EEEE", false], [20, "_CPPv4N3avx7UInt2567UInt256EPKj", false], [20, "_CPPv4N3avx7UInt2567UInt256ER7UInt256", false], [20, "_CPPv4N3avx7UInt2567UInt256ERK7UInt256", false], [20, "_CPPv4N3avx7UInt2567UInt256Ev", false]], "avx::ulong256 (c++ class)": [[22, "_CPPv4N3avx8ULong256E", false]], "avx::ulong256::get (c++ function)": [[22, "_CPPv4NK3avx8ULong2563getEv", false]], "avx::ulong256::operator!= (c++ function)": [[22, "_CPPv4NK3avx8ULong256neEKy", false], [22, "_CPPv4NK3avx8ULong256neERK8ULong256", false]], "avx::ulong256::operator% (c++ function)": [[22, "_CPPv4NK3avx8ULong256rmERK8ULong256", false], [22, "_CPPv4NK3avx8ULong256rmERKy", false]], "avx::ulong256::operator%= (c++ function)": [[22, "_CPPv4N3avx8ULong256rMERK8ULong256", false], [22, "_CPPv4N3avx8ULong256rMERKy", false]], "avx::ulong256::operator& (c++ function)": [[22, "_CPPv4NK3avx8ULong256anERK8ULong256", false], [22, "_CPPv4NK3avx8ULong256anERKy", false]], "avx::ulong256::operator&= (c++ function)": [[22, "_CPPv4N3avx8ULong256aNERK8ULong256", false], [22, "_CPPv4N3avx8ULong256aNERKy", false]], "avx::ulong256::operator* (c++ function)": [[22, "_CPPv4NK3avx8ULong256mlERK8ULong256", false], [22, "_CPPv4NK3avx8ULong256mlERKy", false]], "avx::ulong256::operator*= (c++ function)": [[22, "_CPPv4N3avx8ULong256mLERK8ULong256", false], [22, "_CPPv4N3avx8ULong256mLERKy", false]], "avx::ulong256::operator+ (c++ function)": [[22, "_CPPv4NK3avx8ULong256plERK8ULong256", false], [22, "_CPPv4NK3avx8ULong256plERKy", false]], "avx::ulong256::operator+= (c++ function)": [[22, "_CPPv4N3avx8ULong256pLERK8ULong256", false], [22, "_CPPv4N3avx8ULong256pLERKy", false]], "avx::ulong256::operator- (c++ function)": [[22, "_CPPv4NK3avx8ULong256miERK8ULong256", false], [22, "_CPPv4NK3avx8ULong256miERKy", false]], "avx::ulong256::operator-= (c++ function)": [[22, "_CPPv4N3avx8ULong256mIERK8ULong256", false], [22, "_CPPv4N3avx8ULong256mIERKy", false]], "avx::ulong256::operator/ (c++ function)": [[22, "_CPPv4NK3avx8ULong256dvERK8ULong256", false], [22, "_CPPv4NK3avx8ULong256dvERKy", false]], "avx::ulong256::operator/= (c++ function)": [[22, "_CPPv4N3avx8ULong256dVERK8ULong256", false], [22, "_CPPv4N3avx8ULong256dVERKy", false]], "avx::ulong256::operator<< (c++ function)": [[22, "_CPPv4NK3avx8ULong256lsEKj", false], [22, "_CPPv4NK3avx8ULong256lsERK8ULong256", false]], "avx::ulong256::operator<<= (c++ function)": [[22, "_CPPv4N3avx8ULong256lSEKj", false], [22, "_CPPv4N3avx8ULong256lSERK8ULong256", false]], "avx::ulong256::operator== (c++ function)": [[22, "_CPPv4NK3avx8ULong256eqEKy", false], [22, "_CPPv4NK3avx8ULong256eqERK8ULong256", false]], "avx::ulong256::operator>> (c++ function)": [[22, "_CPPv4NK3avx8ULong256rsEKj", false], [22, "_CPPv4NK3avx8ULong256rsERK8ULong256", false]], "avx::ulong256::operator>>= (c++ function)": [[22, "_CPPv4N3avx8ULong256rSEKj", false], [22, "_CPPv4N3avx8ULong256rSERK8ULong256", false]], "avx::ulong256::operator[] (c++ function)": [[22, "_CPPv4NK3avx8ULong256ixEj", false]], "avx::ulong256::operator^ (c++ function)": [[22, "_CPPv4NK3avx8ULong256eoERK8ULong256", false], [22, "_CPPv4NK3avx8ULong256eoERKy", false]], "avx::ulong256::operator^= (c++ function)": [[22, "_CPPv4N3avx8ULong256eOERK8ULong256", false], [22, "_CPPv4N3avx8ULong256eOERKy", false]], "avx::ulong256::operator| (c++ function)": [[22, "_CPPv4NK3avx8ULong256orERK8ULong256", false], [22, "_CPPv4NK3avx8ULong256orERKy", false]], "avx::ulong256::operator|= (c++ function)": [[22, "_CPPv4N3avx8ULong256oRERK8ULong256", false], [22, "_CPPv4N3avx8ULong256oRERKy", false]], "avx::ulong256::operator~ (c++ function)": [[22, "_CPPv4NK3avx8ULong256coEv", false]], "avx::ulong256::save (c++ function)": [[22, "_CPPv4NK3avx8ULong2564saveERNSt5arrayIyXL4EEEE", false]], "avx::ulong256::set (c++ function)": [[22, "_CPPv4N3avx8ULong2563setE7__m256i", false]], "avx::ulong256::size (c++ member)": [[22, "_CPPv4N3avx8ULong2564sizeE", false]], "avx::ulong256::storedtype (c++ type)": [[22, "_CPPv4N3avx8ULong25610storedTypeE", false]], "avx::ulong256::str (c++ function)": [[22, "_CPPv4NK3avx8ULong2563strEv", false]], "avx::ulong256::ulong256 (c++ function)": [[22, "_CPPv4N3avx8ULong2568ULong256E7__m256i", false], [22, "_CPPv4N3avx8ULong2568ULong256ENSt16initializer_listIyEE", false], [22, "_CPPv4N3avx8ULong2568ULong256EPKy", false], [22, "_CPPv4N3avx8ULong2568ULong256ERK8ULong256", false], [22, "_CPPv4N3avx8ULong2568ULong256ERKNSt5arrayIhXL4EEEE", false], [22, "_CPPv4N3avx8ULong2568ULong256ERKNSt5arrayIjXL4EEEE", false], [22, "_CPPv4N3avx8ULong2568ULong256ERKNSt5arrayItXL4EEEE", false], [22, "_CPPv4N3avx8ULong2568ULong256ERKNSt5arrayIyXL4EEEE", false], [22, "_CPPv4N3avx8ULong2568ULong256ERKy", false], [22, "_CPPv4N3avx8ULong2568ULong256Ev", false]], "avx::ushort256 (c++ class)": [[24, "_CPPv4N3avx9UShort256E", false]], "avx::ushort256::get (c++ function)": [[24, "_CPPv4NK3avx9UShort2563getEv", false]], "avx::ushort256::operator!= (c++ function)": [[24, "_CPPv4NK3avx9UShort256neERK9UShort256", false], [24, "_CPPv4NK3avx9UShort256neERKt", false]], "avx::ushort256::operator% (c++ function)": [[24, "_CPPv4N3avx9UShort256rmERKt", false], [24, "_CPPv4NK3avx9UShort256rmERK9UShort256", false]], "avx::ushort256::operator%= (c++ function)": [[24, "_CPPv4N3avx9UShort256rMERK9UShort256", false], [24, "_CPPv4N3avx9UShort256rMERKt", false]], "avx::ushort256::operator& (c++ function)": [[24, "_CPPv4NK3avx9UShort256anERK9UShort256", false], [24, "_CPPv4NK3avx9UShort256anERKt", false]], "avx::ushort256::operator&= (c++ function)": [[24, "_CPPv4N3avx9UShort256aNERK9UShort256", false], [24, "_CPPv4N3avx9UShort256aNERKt", false]], "avx::ushort256::operator* (c++ function)": [[24, "_CPPv4NK3avx9UShort256mlERK9UShort256", false], [24, "_CPPv4NK3avx9UShort256mlERKt", false]], "avx::ushort256::operator*= (c++ function)": [[24, "_CPPv4N3avx9UShort256mLERK9UShort256", false], [24, "_CPPv4N3avx9UShort256mLERKt", false]], "avx::ushort256::operator+ (c++ function)": [[24, "_CPPv4NK3avx9UShort256plERK9UShort256", false], [24, "_CPPv4NK3avx9UShort256plERKt", false]], "avx::ushort256::operator+= (c++ function)": [[24, "_CPPv4N3avx9UShort256pLERK9UShort256", false], [24, "_CPPv4N3avx9UShort256pLERKt", false]], "avx::ushort256::operator- (c++ function)": [[24, "_CPPv4NK3avx9UShort256miERK9UShort256", false], [24, "_CPPv4NK3avx9UShort256miERKt", false]], "avx::ushort256::operator-= (c++ function)": [[24, "_CPPv4N3avx9UShort256mIERK9UShort256", false], [24, "_CPPv4N3avx9UShort256mIERKt", false]], "avx::ushort256::operator/ (c++ function)": [[24, "_CPPv4NK3avx9UShort256dvERK9UShort256", false], [24, "_CPPv4NK3avx9UShort256dvERKt", false]], "avx::ushort256::operator/= (c++ function)": [[24, "_CPPv4N3avx9UShort256dVERK9UShort256", false], [24, "_CPPv4N3avx9UShort256dVERKt", false]], "avx::ushort256::operator<< (c++ function)": [[24, "_CPPv4NK3avx9UShort256lsERK9UShort256", false], [24, "_CPPv4NK3avx9UShort256lsERKj", false]], "avx::ushort256::operator<<= (c++ function)": [[24, "_CPPv4N3avx9UShort256lSERK9UShort256", false], [24, "_CPPv4N3avx9UShort256lSERKj", false]], "avx::ushort256::operator== (c++ function)": [[24, "_CPPv4NK3avx9UShort256eqERK9UShort256", false], [24, "_CPPv4NK3avx9UShort256eqERKt", false]], "avx::ushort256::operator>> (c++ function)": [[24, "_CPPv4NK3avx9UShort256rsERK9UShort256", false], [24, "_CPPv4NK3avx9UShort256rsERKj", false]], "avx::ushort256::operator>>= (c++ function)": [[24, "_CPPv4N3avx9UShort256rSERK9UShort256", false], [24, "_CPPv4N3avx9UShort256rSERKj", false]], "avx::ushort256::operator[] (c++ function)": [[24, "_CPPv4NK3avx9UShort256ixERKj", false]], "avx::ushort256::operator^ (c++ function)": [[24, "_CPPv4NK3avx9UShort256eoERK9UShort256", false], [24, "_CPPv4NK3avx9UShort256eoERKt", false]], "avx::ushort256::operator^= (c++ function)": [[24, "_CPPv4N3avx9UShort256eOERK9UShort256", false], [24, "_CPPv4N3avx9UShort256eOERKt", false]], "avx::ushort256::operator| (c++ function)": [[24, "_CPPv4NK3avx9UShort256orERK9UShort256", false], [24, "_CPPv4NK3avx9UShort256orERKt", false]], "avx::ushort256::operator|= (c++ function)": [[24, "_CPPv4N3avx9UShort256oRERK9UShort256", false], [24, "_CPPv4N3avx9UShort256oRERKt", false]], "avx::ushort256::operator~ (c++ function)": [[24, "_CPPv4NK3avx9UShort256coEv", false]], "avx::ushort256::save (c++ function)": [[24, "_CPPv4NK3avx9UShort2564saveERNSt5arrayItXL16EEEE", false]], "avx::ushort256::set (c++ function)": [[24, "_CPPv4N3avx9UShort2563setEK7__m256i", false]], "avx::ushort256::size (c++ member)": [[24, "_CPPv4N3avx9UShort2564sizeE", false]], "avx::ushort256::storedtype (c++ type)": [[24, "_CPPv4N3avx9UShort25610storedTypeE", false]], "avx::ushort256::str (c++ function)": [[24, "_CPPv4NK3avx9UShort2563strEv", false]], "avx::ushort256::ushort256 (c++ function)": [[24, "_CPPv4N3avx9UShort2569UShort256EKt", false], [24, "_CPPv4N3avx9UShort2569UShort256ENSt16initializer_listItEE", false], [24, "_CPPv4N3avx9UShort2569UShort256EPKt", false], [24, "_CPPv4N3avx9UShort2569UShort256ERK7__m256i", false], [24, "_CPPv4N3avx9UShort2569UShort256ERK9UShort256", false], [24, "_CPPv4N3avx9UShort2569UShort256ERKNSt5arrayItXL16EEEE", false], [24, "_CPPv4N3avx9UShort2569UShort256Ev", false]]}, "objects": {"": [[13, 0, 1, "_CPPv43avx", "avx"], [2, 1, 1, "_CPPv4N3avx7Char256E", "avx::Char256"], [2, 2, 1, "_CPPv4N3avx7Char2567Char256EKc", "avx::Char256::Char256"], [2, 2, 1, "_CPPv4N3avx7Char2567Char256ENSt16initializer_listIcEE", "avx::Char256::Char256"], [2, 2, 1, "_CPPv4N3avx7Char2567Char256EPKc", "avx::Char256::Char256"], [2, 2, 1, "_CPPv4N3avx7Char2567Char256EPKcj", "avx::Char256::Char256"], [2, 2, 1, "_CPPv4N3avx7Char2567Char256ERK7Char256", "avx::Char256::Char256"], [2, 2, 1, "_CPPv4N3avx7Char2567Char256ERK7__m256i", "avx::Char256::Char256"], [2, 2, 1, "_CPPv4N3avx7Char2567Char256ERKNSt5arrayIcXL32EEEE", "avx::Char256::Char256"], [2, 2, 1, "_CPPv4N3avx7Char2567Char256ERKNSt6stringE", "avx::Char256::Char256"], [2, 2, 1, "_CPPv4N3avx7Char2567Char256Ev", "avx::Char256::Char256"], [2, 3, 1, "_CPPv4N3avx7Char2567Char256EPKcj", "avx::Char256::Char256::count"], [2, 3, 1, "_CPPv4N3avx7Char2567Char256EKc", "avx::Char256::Char256::init"], [2, 3, 1, "_CPPv4N3avx7Char2567Char256ENSt16initializer_listIcEE", "avx::Char256::Char256::init"], [2, 3, 1, "_CPPv4N3avx7Char2567Char256ERK7Char256", "avx::Char256::Char256::init"], [2, 3, 1, "_CPPv4N3avx7Char2567Char256ERK7__m256i", "avx::Char256::Char256::init"], [2, 3, 1, "_CPPv4N3avx7Char2567Char256ERKNSt5arrayIcXL32EEEE", "avx::Char256::Char256::init"], [2, 3, 1, "_CPPv4N3avx7Char2567Char256ERKNSt6stringE", "avx::Char256::Char256::init"], [2, 3, 1, "_CPPv4N3avx7Char2567Char256EPKc", "avx::Char256::Char256::pSrc"], [2, 3, 1, "_CPPv4N3avx7Char2567Char256EPKcj", "avx::Char256::Char256::pSrc"], [2, 2, 1, "_CPPv4NK3avx7Char2563getEv", "avx::Char256::get"], [2, 2, 1, "_CPPv4NK3avx7Char256neEKc", "avx::Char256::operator!="], [2, 2, 1, "_CPPv4NK3avx7Char256neERK7Char256", "avx::Char256::operator!="], [2, 3, 1, "_CPPv4NK3avx7Char256neEKc", "avx::Char256::operator!=::b"], [2, 3, 1, "_CPPv4NK3avx7Char256neERK7Char256", "avx::Char256::operator!=::bV"], [2, 2, 1, "_CPPv4NK3avx7Char256rmERK7Char256", "avx::Char256::operator%"], [2, 2, 1, "_CPPv4NK3avx7Char256rmERKc", "avx::Char256::operator%"], [2, 3, 1, "_CPPv4NK3avx7Char256rmERKc", "avx::Char256::operator%::b"], [2, 3, 1, "_CPPv4NK3avx7Char256rmERK7Char256", "avx::Char256::operator%::bV"], [2, 2, 1, "_CPPv4N3avx7Char256rMERK7Char256", "avx::Char256::operator%="], [2, 2, 1, "_CPPv4N3avx7Char256rMERKc", "avx::Char256::operator%="], [2, 3, 1, "_CPPv4N3avx7Char256rMERKc", "avx::Char256::operator%=::b"], [2, 3, 1, "_CPPv4N3avx7Char256rMERK7Char256", "avx::Char256::operator%=::bV"], [2, 2, 1, "_CPPv4NK3avx7Char256anERK7Char256", "avx::Char256::operator&amp;"], [2, 2, 1, "_CPPv4NK3avx7Char256anERKc", "avx::Char256::operator&amp;"], [2, 3, 1, "_CPPv4NK3avx7Char256anERKc", "avx::Char256::operator&amp;::b"], [2, 3, 1, "_CPPv4NK3avx7Char256anERK7Char256", "avx::Char256::operator&amp;::bV"], [2, 2, 1, "_CPPv4N3avx7Char256aNERK7Char256", "avx::Char256::operator&amp;="], [2, 2, 1, "_CPPv4N3avx7Char256aNERKc", "avx::Char256::operator&amp;="], [2, 3, 1, "_CPPv4N3avx7Char256aNERKc", "avx::Char256::operator&amp;=::b"], [2, 3, 1, "_CPPv4N3avx7Char256aNERK7Char256", "avx::Char256::operator&amp;=::bV"], [2, 2, 1, "_CPPv4NK3avx7Char256mlERK7Char256", "avx::Char256::operator*"], [2, 2, 1, "_CPPv4NK3avx7Char256mlERKc", "avx::Char256::operator*"], [2, 3, 1, "_CPPv4NK3avx7Char256mlERKc", "avx::Char256::operator*::b"], [2, 3, 1, "_CPPv4NK3avx7Char256mlERK7Char256", "avx::Char256::operator*::bV"], [2, 2, 1, "_CPPv4N3avx7Char256mLERK7Char256", "avx::Char256::operator*="], [2, 2, 1, "_CPPv4N3avx7Char256mLERKc", "avx::Char256::operator*="], [2, 3, 1, "_CPPv4N3avx7Char256mLERKc", "avx::Char256::operator*=::b"], [2, 3, 1, "_CPPv4N3avx7Char256mLERK7Char256", "avx::Char256::operator*=::bV"], [2, 2, 1, "_CPPv4NK3avx7Char256plERK7Char256", "avx::Char256::operator+"], [2, 2, 1, "_CPPv4NK3avx7Char256plERKc", "avx::Char256::operator+"], [2, 3, 1, "_CPPv4NK3avx7Char256plERKc", "avx::Char256::operator+::b"], [2, 3, 1, "_CPPv4NK3avx7Char256plERK7Char256", "avx::Char256::operator+::bV"], [2, 2, 1, "_CPPv4N3avx7Char256pLERK7Char256", "avx::Char256::operator+="], [2, 2, 1, "_CPPv4N3avx7Char256pLERKc", "avx::Char256::operator+="], [2, 3, 1, "_CPPv4N3avx7Char256pLERKc", "avx::Char256::operator+=::b"], [2, 3, 1, "_CPPv4N3avx7Char256pLERK7Char256", "avx::Char256::operator+=::bV"], [2, 2, 1, "_CPPv4NK3avx7Char256miERK7Char256", "avx::Char256::operator-"], [2, 2, 1, "_CPPv4NK3avx7Char256miERKc", "avx::Char256::operator-"], [2, 3, 1, "_CPPv4NK3avx7Char256miERKc", "avx::Char256::operator-::b"], [2, 3, 1, "_CPPv4NK3avx7Char256miERK7Char256", "avx::Char256::operator-::bV"], [2, 2, 1, "_CPPv4N3avx7Char256mIERK7Char256", "avx::Char256::operator-="], [2, 2, 1, "_CPPv4N3avx7Char256mIERKc", "avx::Char256::operator-="], [2, 3, 1, "_CPPv4N3avx7Char256mIERKc", "avx::Char256::operator-=::b"], [2, 3, 1, "_CPPv4N3avx7Char256mIERK7Char256", "avx::Char256::operator-=::bV"], [2, 2, 1, "_CPPv4NK3avx7Char256dvERK7Char256", "avx::Char256::operator/"], [2, 2, 1, "_CPPv4NK3avx7Char256dvERKc", "avx::Char256::operator/"], [2, 3, 1, "_CPPv4NK3avx7Char256dvERKc", "avx::Char256::operator/::b"], [2, 3, 1, "_CPPv4NK3avx7Char256dvERK7Char256", "avx::Char256::operator/::bV"], [2, 2, 1, "_CPPv4N3avx7Char256dVERK7Char256", "avx::Char256::operator/="], [2, 2, 1, "_CPPv4N3avx7Char256dVERKc", "avx::Char256::operator/="], [2, 3, 1, "_CPPv4N3avx7Char256dVERKc", "avx::Char256::operator/=::b"], [2, 3, 1, "_CPPv4N3avx7Char256dVERK7Char256", "avx::Char256::operator/=::bV"], [2, 2, 1, "_CPPv4N3avx7Char256lsERNSt7ostreamERK7Char256", "avx::Char256::operator&lt;&lt;"], [2, 2, 1, "_CPPv4NK3avx7Char256lsERK7Char256", "avx::Char256::operator&lt;&lt;"], [2, 2, 1, "_CPPv4NK3avx7Char256lsERKj", "avx::Char256::operator&lt;&lt;"], [2, 3, 1, "_CPPv4N3avx7Char256lsERNSt7ostreamERK7Char256", "avx::Char256::operator&lt;&lt;::a"], [2, 3, 1, "_CPPv4NK3avx7Char256lsERKj", "avx::Char256::operator&lt;&lt;::b"], [2, 3, 1, "_CPPv4NK3avx7Char256lsERK7Char256", "avx::Char256::operator&lt;&lt;::bV"], [2, 3, 1, "_CPPv4N3avx7Char256lsERNSt7ostreamERK7Char256", "avx::Char256::operator&lt;&lt;::os"], [2, 2, 1, "_CPPv4N3avx7Char256lSERK7Char256", "avx::Char256::operator&lt;&lt;="], [2, 2, 1, "_CPPv4N3avx7Char256lSERKj", "avx::Char256::operator&lt;&lt;="], [2, 3, 1, "_CPPv4N3avx7Char256lSERKj", "avx::Char256::operator&lt;&lt;=::b"], [2, 3, 1, "_CPPv4N3avx7Char256lSERK7Char256", "avx::Char256::operator&lt;&lt;=::bV"], [2, 2, 1, "_CPPv4NK3avx7Char256eqEKc", "avx::Char256::operator=="], [2, 2, 1, "_CPPv4NK3avx7Char256eqERK7Char256", "avx::Char256::operator=="], [2, 3, 1, "_CPPv4NK3avx7Char256eqEKc", "avx::Char256::operator==::b"], [2, 3, 1, "_CPPv4NK3avx7Char256eqERK7Char256", "avx::Char256::operator==::bV"], [2, 2, 1, "_CPPv4NK3avx7Char256rsERK7Char256", "avx::Char256::operator&gt;&gt;"], [2, 2, 1, "_CPPv4NK3avx7Char256rsERKj", "avx::Char256::operator&gt;&gt;"], [2, 3, 1, "_CPPv4NK3avx7Char256rsERKj", "avx::Char256::operator&gt;&gt;::b"], [2, 3, 1, "_CPPv4NK3avx7Char256rsERK7Char256", "avx::Char256::operator&gt;&gt;::bV"], [2, 2, 1, "_CPPv4N3avx7Char256rSERK7Char256", "avx::Char256::operator&gt;&gt;="], [2, 2, 1, "_CPPv4N3avx7Char256rSERKj", "avx::Char256::operator&gt;&gt;="], [2, 3, 1, "_CPPv4N3avx7Char256rSERKj", "avx::Char256::operator&gt;&gt;=::b"], [2, 3, 1, "_CPPv4N3avx7Char256rSERK7Char256", "avx::Char256::operator&gt;&gt;=::bV"], [2, 2, 1, "_CPPv4NK3avx7Char256ixERKj", "avx::Char256::operator[]"], [2, 3, 1, "_CPPv4NK3avx7Char256ixERKj", "avx::Char256::operator[]::index"], [2, 2, 1, "_CPPv4NK3avx7Char256eoERK7Char256", "avx::Char256::operator^"], [2, 2, 1, "_CPPv4NK3avx7Char256eoERKc", "avx::Char256::operator^"], [2, 3, 1, "_CPPv4NK3avx7Char256eoERKc", "avx::Char256::operator^::b"], [2, 3, 1, "_CPPv4NK3avx7Char256eoERK7Char256", "avx::Char256::operator^::bV"], [2, 2, 1, "_CPPv4N3avx7Char256eOERK7Char256", "avx::Char256::operator^="], [2, 2, 1, "_CPPv4N3avx7Char256eOERKc", "avx::Char256::operator^="], [2, 3, 1, "_CPPv4N3avx7Char256eOERKc", "avx::Char256::operator^=::b"], [2, 3, 1, "_CPPv4N3avx7Char256eOERK7Char256", "avx::Char256::operator^=::bV"], [2, 2, 1, "_CPPv4NK3avx7Char256orERK7Char256", "avx::Char256::operator|"], [2, 2, 1, "_CPPv4NK3avx7Char256orERKc", "avx::Char256::operator|"], [2, 3, 1, "_CPPv4NK3avx7Char256orERKc", "avx::Char256::operator|::b"], [2, 3, 1, "_CPPv4NK3avx7Char256orERK7Char256", "avx::Char256::operator|::bV"], [2, 2, 1, "_CPPv4N3avx7Char256oRERK7Char256", "avx::Char256::operator|="], [2, 2, 1, "_CPPv4N3avx7Char256oRERKc", "avx::Char256::operator|="], [2, 3, 1, "_CPPv4N3avx7Char256oRERKc", "avx::Char256::operator|=::b"], [2, 3, 1, "_CPPv4N3avx7Char256oRERK7Char256", "avx::Char256::operator|=::bV"], [2, 2, 1, "_CPPv4NK3avx7Char256coEv", "avx::Char256::operator~"], [2, 2, 1, "_CPPv4NK3avx7Char2564saveERNSt5arrayIcXL32EEEE", "avx::Char256::save"], [2, 3, 1, "_CPPv4NK3avx7Char2564saveERNSt5arrayIcXL32EEEE", "avx::Char256::save::dest"], [2, 2, 1, "_CPPv4N3avx7Char2563setEK7__m256i", "avx::Char256::set"], [2, 3, 1, "_CPPv4N3avx7Char2563setEK7__m256i", "avx::Char256::set::value"], [2, 4, 1, "_CPPv4N3avx7Char2564sizeE", "avx::Char256::size"], [2, 0, 1, "_CPPv4N3avx7Char25610storedTypeE", "avx::Char256::storedType"], [2, 2, 1, "_CPPv4NK3avx7Char2563strEv", "avx::Char256::str"], [2, 2, 1, "_CPPv4NK3avx7Char2568toStringEv", "avx::Char256::toString"], [5, 1, 1, "_CPPv4N3avx9Double256E", "avx::Double256"], [5, 2, 1, "_CPPv4N3avx9Double2569Double256EK7__m256d", "avx::Double256::Double256"], [5, 2, 1, "_CPPv4N3avx9Double2569Double256EKd", "avx::Double256::Double256"], [5, 2, 1, "_CPPv4N3avx9Double2569Double256ENSt16initializer_listIdEE", "avx::Double256::Double256"], [5, 2, 1, "_CPPv4N3avx9Double2569Double256ERK9Double256", "avx::Double256::Double256"], [5, 2, 1, "_CPPv4N3avx9Double2569Double256ERKNSt5arrayIdXL4EEEE", "avx::Double256::Double256"], [5, 2, 1, "_CPPv4N3avx9Double2569Double256Ev", "avx::Double256::Double256"], [5, 3, 1, "_CPPv4N3avx9Double2569Double256EK7__m256d", "avx::Double256::Double256::init"], [5, 3, 1, "_CPPv4N3avx9Double2569Double256ENSt16initializer_listIdEE", "avx::Double256::Double256::init"], [5, 3, 1, "_CPPv4N3avx9Double2569Double256ERK9Double256", "avx::Double256::Double256::init"], [5, 3, 1, "_CPPv4N3avx9Double2569Double256ERKNSt5arrayIdXL4EEEE", "avx::Double256::Double256::init"], [5, 3, 1, "_CPPv4N3avx9Double2569Double256EKd", "avx::Double256::Double256::val"], [5, 2, 1, "_CPPv4NK3avx9Double2563getEv", "avx::Double256::get"], [5, 2, 1, "_CPPv4N3avx9Double256neEKd", "avx::Double256::operator!="], [5, 2, 1, "_CPPv4N3avx9Double256neERK9Double256", "avx::Double256::operator!="], [5, 3, 1, "_CPPv4N3avx9Double256neEKd", "avx::Double256::operator!=::b"], [5, 3, 1, "_CPPv4N3avx9Double256neERK9Double256", "avx::Double256::operator!=::bV"], [5, 2, 1, "_CPPv4NK3avx9Double256mlEKd", "avx::Double256::operator*"], [5, 2, 1, "_CPPv4NK3avx9Double256mlERK9Double256", "avx::Double256::operator*"], [5, 3, 1, "_CPPv4NK3avx9Double256mlERK9Double256", "avx::Double256::operator*::other"], [5, 3, 1, "_CPPv4NK3avx9Double256mlEKd", "avx::Double256::operator*::val"], [5, 2, 1, "_CPPv4N3avx9Double256mLEKd", "avx::Double256::operator*="], [5, 2, 1, "_CPPv4N3avx9Double256mLERK9Double256", "avx::Double256::operator*="], [5, 3, 1, "_CPPv4N3avx9Double256mLERK9Double256", "avx::Double256::operator*=::other"], [5, 3, 1, "_CPPv4N3avx9Double256mLEKd", "avx::Double256::operator*=::val"], [5, 2, 1, "_CPPv4NK3avx9Double256plEKd", "avx::Double256::operator+"], [5, 2, 1, "_CPPv4NK3avx9Double256plERK9Double256", "avx::Double256::operator+"], [5, 3, 1, "_CPPv4NK3avx9Double256plERK9Double256", "avx::Double256::operator+::other"], [5, 3, 1, "_CPPv4NK3avx9Double256plEKd", "avx::Double256::operator+::val"], [5, 2, 1, "_CPPv4N3avx9Double256pLEKd", "avx::Double256::operator+="], [5, 2, 1, "_CPPv4N3avx9Double256pLERK9Double256", "avx::Double256::operator+="], [5, 3, 1, "_CPPv4N3avx9Double256pLERK9Double256", "avx::Double256::operator+=::other"], [5, 3, 1, "_CPPv4N3avx9Double256pLEKd", "avx::Double256::operator+=::val"], [5, 2, 1, "_CPPv4NK3avx9Double256miEKd", "avx::Double256::operator-"], [5, 2, 1, "_CPPv4NK3avx9Double256miERK9Double256", "avx::Double256::operator-"], [5, 3, 1, "_CPPv4NK3avx9Double256miERK9Double256", "avx::Double256::operator-::other"], [5, 3, 1, "_CPPv4NK3avx9Double256miEKd", "avx::Double256::operator-::val"], [5, 2, 1, "_CPPv4N3avx9Double256mIEKd", "avx::Double256::operator-="], [5, 2, 1, "_CPPv4N3avx9Double256mIERK9Double256", "avx::Double256::operator-="], [5, 3, 1, "_CPPv4N3avx9Double256mIERK9Double256", "avx::Double256::operator-=::other"], [5, 3, 1, "_CPPv4N3avx9Double256mIEKd", "avx::Double256::operator-=::val"], [5, 2, 1, "_CPPv4NK3avx9Double256dvEKd", "avx::Double256::operator/"], [5, 2, 1, "_CPPv4NK3avx9Double256dvERK9Double256", "avx::Double256::operator/"], [5, 3, 1, "_CPPv4NK3avx9Double256dvERK9Double256", "avx::Double256::operator/::other"], [5, 3, 1, "_CPPv4NK3avx9Double256dvEKd", "avx::Double256::operator/::val"], [5, 2, 1, "_CPPv4N3avx9Double256dVEKd", "avx::Double256::operator/="], [5, 2, 1, "_CPPv4N3avx9Double256dVERK9Double256", "avx::Double256::operator/="], [5, 3, 1, "_CPPv4N3avx9Double256dVERK9Double256", "avx::Double256::operator/=::other"], [5, 3, 1, "_CPPv4N3avx9Double256dVEKd", "avx::Double256::operator/=::val"], [5, 2, 1, "_CPPv4N3avx9Double256eqEKd", "avx::Double256::operator=="], [5, 2, 1, "_CPPv4N3avx9Double256eqERK9Double256", "avx::Double256::operator=="], [5, 3, 1, "_CPPv4N3avx9Double256eqEKd", "avx::Double256::operator==::b"], [5, 3, 1, "_CPPv4N3avx9Double256eqERK9Double256", "avx::Double256::operator==::bV"], [5, 2, 1, "_CPPv4NK3avx9Double256ixEKj", "avx::Double256::operator[]"], [5, 3, 1, "_CPPv4NK3avx9Double256ixEKj", "avx::Double256::operator[]::index"], [5, 2, 1, "_CPPv4NK3avx9Double2564saveERNSt5arrayIdXL4EEEE", "avx::Double256::save"], [5, 3, 1, "_CPPv4NK3avx9Double2564saveERNSt5arrayIdXL4EEEE", "avx::Double256::save::dest"], [5, 2, 1, "_CPPv4N3avx9Double2563setE7__m256d", "avx::Double256::set"], [5, 3, 1, "_CPPv4N3avx9Double2563setE7__m256d", "avx::Double256::set::val"], [5, 4, 1, "_CPPv4N3avx9Double2564sizeE", "avx::Double256::size"], [5, 0, 1, "_CPPv4N3avx9Double25610storedTypeE", "avx::Double256::storedType"], [5, 2, 1, "_CPPv4NK3avx9Double2563strEv", "avx::Double256::str"], [7, 1, 1, "_CPPv4N3avx8Float256E", "avx::Float256"], [7, 2, 1, "_CPPv4N3avx8Float2568Float256EK6__m256", "avx::Float256::Float256"], [7, 2, 1, "_CPPv4N3avx8Float2568Float256EKf", "avx::Float256::Float256"], [7, 2, 1, "_CPPv4N3avx8Float2568Float256ENSt16initializer_listIfEE", "avx::Float256::Float256"], [7, 2, 1, "_CPPv4N3avx8Float2568Float256EPKf", "avx::Float256::Float256"], [7, 2, 1, "_CPPv4N3avx8Float2568Float256ERK8Float256", "avx::Float256::Float256"], [7, 2, 1, "_CPPv4N3avx8Float2568Float256ERKNSt5arrayIfXL8EEEE", "avx::Float256::Float256"], [7, 2, 1, "_CPPv4N3avx8Float2568Float256Ev", "avx::Float256::Float256"], [7, 3, 1, "_CPPv4N3avx8Float2568Float256EK6__m256", "avx::Float256::Float256::init"], [7, 3, 1, "_CPPv4N3avx8Float2568Float256ENSt16initializer_listIfEE", "avx::Float256::Float256::init"], [7, 3, 1, "_CPPv4N3avx8Float2568Float256ERK8Float256", "avx::Float256::Float256::init"], [7, 3, 1, "_CPPv4N3avx8Float2568Float256ERKNSt5arrayIfXL8EEEE", "avx::Float256::Float256::init"], [7, 3, 1, "_CPPv4N3avx8Float2568Float256EPKf", "avx::Float256::Float256::pSrc"], [7, 3, 1, "_CPPv4N3avx8Float2568Float256EKf", "avx::Float256::Float256::value"], [7, 2, 1, "_CPPv4NK3avx8Float2563getEv", "avx::Float256::get"], [7, 2, 1, "_CPPv4N3avx8Float256neEKf", "avx::Float256::operator!="], [7, 2, 1, "_CPPv4N3avx8Float256neERK8Float256", "avx::Float256::operator!="], [7, 3, 1, "_CPPv4N3avx8Float256neEKf", "avx::Float256::operator!=::b"], [7, 3, 1, "_CPPv4N3avx8Float256neERK8Float256", "avx::Float256::operator!=::bV"], [7, 2, 1, "_CPPv4NK3avx8Float256mlEKf", "avx::Float256::operator*"], [7, 2, 1, "_CPPv4NK3avx8Float256mlERK8Float256", "avx::Float256::operator*"], [7, 3, 1, "_CPPv4NK3avx8Float256mlEKf", "avx::Float256::operator*::b"], [7, 3, 1, "_CPPv4NK3avx8Float256mlERK8Float256", "avx::Float256::operator*::bV"], [7, 2, 1, "_CPPv4N3avx8Float256mLEKf", "avx::Float256::operator*="], [7, 2, 1, "_CPPv4N3avx8Float256mLERK8Float256", "avx::Float256::operator*="], [7, 3, 1, "_CPPv4N3avx8Float256mLEKf", "avx::Float256::operator*=::b"], [7, 3, 1, "_CPPv4N3avx8Float256mLERK8Float256", "avx::Float256::operator*=::bV"], [7, 2, 1, "_CPPv4NK3avx8Float256plEKf", "avx::Float256::operator+"], [7, 2, 1, "_CPPv4NK3avx8Float256plERK8Float256", "avx::Float256::operator+"], [7, 3, 1, "_CPPv4NK3avx8Float256plEKf", "avx::Float256::operator+::b"], [7, 3, 1, "_CPPv4NK3avx8Float256plERK8Float256", "avx::Float256::operator+::bV"], [7, 2, 1, "_CPPv4N3avx8Float256pLEKf", "avx::Float256::operator+="], [7, 2, 1, "_CPPv4N3avx8Float256pLERK8Float256", "avx::Float256::operator+="], [7, 3, 1, "_CPPv4N3avx8Float256pLEKf", "avx::Float256::operator+=::b"], [7, 3, 1, "_CPPv4N3avx8Float256pLERK8Float256", "avx::Float256::operator+=::bV"], [7, 2, 1, "_CPPv4NK3avx8Float256miEKf", "avx::Float256::operator-"], [7, 2, 1, "_CPPv4NK3avx8Float256miERK8Float256", "avx::Float256::operator-"], [7, 3, 1, "_CPPv4NK3avx8Float256miEKf", "avx::Float256::operator-::b"], [7, 3, 1, "_CPPv4NK3avx8Float256miERK8Float256", "avx::Float256::operator-::bV"], [7, 2, 1, "_CPPv4N3avx8Float256mIEKf", "avx::Float256::operator-="], [7, 2, 1, "_CPPv4N3avx8Float256mIERK8Float256", "avx::Float256::operator-="], [7, 3, 1, "_CPPv4N3avx8Float256mIEKf", "avx::Float256::operator-=::b"], [7, 3, 1, "_CPPv4N3avx8Float256mIERK8Float256", "avx::Float256::operator-=::bV"], [7, 2, 1, "_CPPv4NK3avx8Float256dvEKf", "avx::Float256::operator/"], [7, 2, 1, "_CPPv4NK3avx8Float256dvERK8Float256", "avx::Float256::operator/"], [7, 3, 1, "_CPPv4NK3avx8Float256dvEKf", "avx::Float256::operator/::b"], [7, 3, 1, "_CPPv4NK3avx8Float256dvERK8Float256", "avx::Float256::operator/::bV"], [7, 2, 1, "_CPPv4N3avx8Float256dVEKf", "avx::Float256::operator/="], [7, 2, 1, "_CPPv4N3avx8Float256dVERK8Float256", "avx::Float256::operator/="], [7, 3, 1, "_CPPv4N3avx8Float256dVEKf", "avx::Float256::operator/=::b"], [7, 3, 1, "_CPPv4N3avx8Float256dVERK8Float256", "avx::Float256::operator/=::bV"], [7, 2, 1, "_CPPv4N3avx8Float256eqEKf", "avx::Float256::operator=="], [7, 2, 1, "_CPPv4N3avx8Float256eqERK8Float256", "avx::Float256::operator=="], [7, 3, 1, "_CPPv4N3avx8Float256eqEKf", "avx::Float256::operator==::b"], [7, 3, 1, "_CPPv4N3avx8Float256eqERK8Float256", "avx::Float256::operator==::bV"], [7, 2, 1, "_CPPv4NK3avx8Float256ixEKj", "avx::Float256::operator[]"], [7, 3, 1, "_CPPv4NK3avx8Float256ixEKj", "avx::Float256::operator[]::index"], [7, 2, 1, "_CPPv4NK3avx8Float2564saveERNSt5arrayIfXL8EEEE", "avx::Float256::save"], [7, 3, 1, "_CPPv4NK3avx8Float2564saveERNSt5arrayIfXL8EEEE", "avx::Float256::save::dest"], [7, 2, 1, "_CPPv4N3avx8Float2563setE6__m256", "avx::Float256::set"], [7, 3, 1, "_CPPv4N3avx8Float2563setE6__m256", "avx::Float256::set::val"], [7, 4, 1, "_CPPv4N3avx8Float2564sizeE", "avx::Float256::size"], [7, 0, 1, "_CPPv4N3avx8Float25610storedTypeE", "avx::Float256::storedType"], [7, 2, 1, "_CPPv4NK3avx8Float2563strEv", "avx::Float256::str"], [10, 1, 1, "_CPPv4N3avx6Int256E", "avx::Int256"], [10, 2, 1, "_CPPv4N3avx6Int2566Int256ENSt16initializer_listIiEE", "avx::Int256::Int256"], [10, 2, 1, "_CPPv4N3avx6Int2566Int256EPKi", "avx::Int256::Int256"], [10, 2, 1, "_CPPv4N3avx6Int2566Int256ERK6Int256", "avx::Int256::Int256"], [10, 2, 1, "_CPPv4N3avx6Int2566Int256ERK7__m256i", "avx::Int256::Int256"], [10, 2, 1, "_CPPv4N3avx6Int2566Int256ERKNSt5arrayIcXL8EEEE", "avx::Int256::Int256"], [10, 2, 1, "_CPPv4N3avx6Int2566Int256ERKNSt5arrayIiXL8EEEE", "avx::Int256::Int256"], [10, 2, 1, "_CPPv4N3avx6Int2566Int256ERKNSt5arrayIsXL8EEEE", "avx::Int256::Int256"], [10, 2, 1, "_CPPv4N3avx6Int2566Int256ERKi", "avx::Int256::Int256"], [10, 2, 1, "_CPPv4N3avx6Int2566Int256Ev", "avx::Int256::Int256"], [10, 3, 1, "_CPPv4N3avx6Int2566Int256ENSt16initializer_listIiEE", "avx::Int256::Int256::init"], [10, 3, 1, "_CPPv4N3avx6Int2566Int256EPKi", "avx::Int256::Int256::init"], [10, 3, 1, "_CPPv4N3avx6Int2566Int256ERK6Int256", "avx::Int256::Int256::init"], [10, 3, 1, "_CPPv4N3avx6Int2566Int256ERK7__m256i", "avx::Int256::Int256::init"], [10, 3, 1, "_CPPv4N3avx6Int2566Int256ERKNSt5arrayIcXL8EEEE", "avx::Int256::Int256::init"], [10, 3, 1, "_CPPv4N3avx6Int2566Int256ERKNSt5arrayIiXL8EEEE", "avx::Int256::Int256::init"], [10, 3, 1, "_CPPv4N3avx6Int2566Int256ERKNSt5arrayIsXL8EEEE", "avx::Int256::Int256::init"], [10, 3, 1, "_CPPv4N3avx6Int2566Int256ERKi", "avx::Int256::Int256::init"], [10, 2, 1, "_CPPv4NK3avx6Int2563getEv", "avx::Int256::get"], [10, 2, 1, "_CPPv4NK3avx6Int256neERK6Int256", "avx::Int256::operator!="], [10, 2, 1, "_CPPv4NK3avx6Int256neERKi", "avx::Int256::operator!="], [10, 3, 1, "_CPPv4NK3avx6Int256neERKi", "avx::Int256::operator!=::b"], [10, 3, 1, "_CPPv4NK3avx6Int256neERK6Int256", "avx::Int256::operator!=::bV"], [10, 2, 1, "_CPPv4NK3avx6Int256rmERK6Int256", "avx::Int256::operator%"], [10, 2, 1, "_CPPv4NK3avx6Int256rmERKi", "avx::Int256::operator%"], [10, 3, 1, "_CPPv4NK3avx6Int256rmERKi", "avx::Int256::operator%::b"], [10, 3, 1, "_CPPv4NK3avx6Int256rmERK6Int256", "avx::Int256::operator%::bV"], [10, 2, 1, "_CPPv4N3avx6Int256rMERK6Int256", "avx::Int256::operator%="], [10, 2, 1, "_CPPv4N3avx6Int256rMERKi", "avx::Int256::operator%="], [10, 3, 1, "_CPPv4N3avx6Int256rMERKi", "avx::Int256::operator%=::b"], [10, 3, 1, "_CPPv4N3avx6Int256rMERK6Int256", "avx::Int256::operator%=::bV"], [10, 2, 1, "_CPPv4NK3avx6Int256anERK6Int256", "avx::Int256::operator&amp;"], [10, 2, 1, "_CPPv4NK3avx6Int256anERKi", "avx::Int256::operator&amp;"], [10, 3, 1, "_CPPv4NK3avx6Int256anERKi", "avx::Int256::operator&amp;::b"], [10, 3, 1, "_CPPv4NK3avx6Int256anERK6Int256", "avx::Int256::operator&amp;::bV"], [10, 2, 1, "_CPPv4N3avx6Int256aNERK6Int256", "avx::Int256::operator&amp;="], [10, 2, 1, "_CPPv4N3avx6Int256aNERKi", "avx::Int256::operator&amp;="], [10, 3, 1, "_CPPv4N3avx6Int256aNERKi", "avx::Int256::operator&amp;=::b"], [10, 3, 1, "_CPPv4N3avx6Int256aNERK6Int256", "avx::Int256::operator&amp;=::bV"], [10, 2, 1, "_CPPv4NK3avx6Int256mlERK6Int256", "avx::Int256::operator*"], [10, 2, 1, "_CPPv4NK3avx6Int256mlERKi", "avx::Int256::operator*"], [10, 3, 1, "_CPPv4NK3avx6Int256mlERKi", "avx::Int256::operator*::b"], [10, 3, 1, "_CPPv4NK3avx6Int256mlERK6Int256", "avx::Int256::operator*::bV"], [10, 2, 1, "_CPPv4N3avx6Int256mLERK6Int256", "avx::Int256::operator*="], [10, 2, 1, "_CPPv4N3avx6Int256mLERKi", "avx::Int256::operator*="], [10, 3, 1, "_CPPv4N3avx6Int256mLERKi", "avx::Int256::operator*=::b"], [10, 3, 1, "_CPPv4N3avx6Int256mLERK6Int256", "avx::Int256::operator*=::bV"], [10, 2, 1, "_CPPv4NK3avx6Int256plERK6Int256", "avx::Int256::operator+"], [10, 2, 1, "_CPPv4NK3avx6Int256plERKi", "avx::Int256::operator+"], [10, 3, 1, "_CPPv4NK3avx6Int256plERKi", "avx::Int256::operator+::b"], [10, 3, 1, "_CPPv4NK3avx6Int256plERK6Int256", "avx::Int256::operator+::bV"], [10, 2, 1, "_CPPv4N3avx6Int256pLERK6Int256", "avx::Int256::operator+="], [10, 2, 1, "_CPPv4N3avx6Int256pLERKi", "avx::Int256::operator+="], [10, 3, 1, "_CPPv4N3avx6Int256pLERKi", "avx::Int256::operator+=::b"], [10, 3, 1, "_CPPv4N3avx6Int256pLERK6Int256", "avx::Int256::operator+=::bV"], [10, 2, 1, "_CPPv4NK3avx6Int256miERK6Int256", "avx::Int256::operator-"], [10, 2, 1, "_CPPv4NK3avx6Int256miERKi", "avx::Int256::operator-"], [10, 3, 1, "_CPPv4NK3avx6Int256miERKi", "avx::Int256::operator-::b"], [10, 3, 1, "_CPPv4NK3avx6Int256miERK6Int256", "avx::Int256::operator-::bV"], [10, 2, 1, "_CPPv4N3avx6Int256mIERK6Int256", "avx::Int256::operator-="], [10, 2, 1, "_CPPv4N3avx6Int256mIERKi", "avx::Int256::operator-="], [10, 3, 1, "_CPPv4N3avx6Int256mIERKi", "avx::Int256::operator-=::b"], [10, 3, 1, "_CPPv4N3avx6Int256mIERK6Int256", "avx::Int256::operator-=::bV"], [10, 2, 1, "_CPPv4NK3avx6Int256dvERK6Int256", "avx::Int256::operator/"], [10, 2, 1, "_CPPv4NK3avx6Int256dvERKi", "avx::Int256::operator/"], [10, 3, 1, "_CPPv4NK3avx6Int256dvERKi", "avx::Int256::operator/::b"], [10, 3, 1, "_CPPv4NK3avx6Int256dvERK6Int256", "avx::Int256::operator/::bV"], [10, 2, 1, "_CPPv4N3avx6Int256dVERK6Int256", "avx::Int256::operator/="], [10, 2, 1, "_CPPv4N3avx6Int256dVERKi", "avx::Int256::operator/="], [10, 3, 1, "_CPPv4N3avx6Int256dVERKi", "avx::Int256::operator/=::b"], [10, 3, 1, "_CPPv4N3avx6Int256dVERK6Int256", "avx::Int256::operator/=::bV"], [10, 2, 1, "_CPPv4NK3avx6Int256lsERK6Int256", "avx::Int256::operator&lt;&lt;"], [10, 2, 1, "_CPPv4NK3avx6Int256lsERKi", "avx::Int256::operator&lt;&lt;"], [10, 3, 1, "_CPPv4NK3avx6Int256lsERKi", "avx::Int256::operator&lt;&lt;::b"], [10, 3, 1, "_CPPv4NK3avx6Int256lsERK6Int256", "avx::Int256::operator&lt;&lt;::bV"], [10, 2, 1, "_CPPv4N3avx6Int256lSERK6Int256", "avx::Int256::operator&lt;&lt;="], [10, 2, 1, "_CPPv4N3avx6Int256lSERKi", "avx::Int256::operator&lt;&lt;="], [10, 3, 1, "_CPPv4N3avx6Int256lSERKi", "avx::Int256::operator&lt;&lt;=::b"], [10, 3, 1, "_CPPv4N3avx6Int256lSERK6Int256", "avx::Int256::operator&lt;&lt;=::bV"], [10, 2, 1, "_CPPv4NK3avx6Int256eqERK6Int256", "avx::Int256::operator=="], [10, 2, 1, "_CPPv4NK3avx6Int256eqERKi", "avx::Int256::operator=="], [10, 3, 1, "_CPPv4NK3avx6Int256eqERKi", "avx::Int256::operator==::b"], [10, 3, 1, "_CPPv4NK3avx6Int256eqERK6Int256", "avx::Int256::operator==::bV"], [10, 2, 1, "_CPPv4NK3avx6Int256rsERK6Int256", "avx::Int256::operator&gt;&gt;"], [10, 2, 1, "_CPPv4NK3avx6Int256rsERKi", "avx::Int256::operator&gt;&gt;"], [10, 3, 1, "_CPPv4NK3avx6Int256rsERKi", "avx::Int256::operator&gt;&gt;::b"], [10, 3, 1, "_CPPv4NK3avx6Int256rsERK6Int256", "avx::Int256::operator&gt;&gt;::bV"], [10, 2, 1, "_CPPv4N3avx6Int256rSERK6Int256", "avx::Int256::operator&gt;&gt;="], [10, 2, 1, "_CPPv4N3avx6Int256rSERKi", "avx::Int256::operator&gt;&gt;="], [10, 3, 1, "_CPPv4N3avx6Int256rSERKi", "avx::Int256::operator&gt;&gt;=::b"], [10, 3, 1, "_CPPv4N3avx6Int256rSERK6Int256", "avx::Int256::operator&gt;&gt;=::bV"], [10, 2, 1, "_CPPv4NK3avx6Int256ixEKj", "avx::Int256::operator[]"], [10, 3, 1, "_CPPv4NK3avx6Int256ixEKj", "avx::Int256::operator[]::index"], [10, 2, 1, "_CPPv4NK3avx6Int256eoERK6Int256", "avx::Int256::operator^"], [10, 2, 1, "_CPPv4NK3avx6Int256eoERKi", "avx::Int256::operator^"], [10, 3, 1, "_CPPv4NK3avx6Int256eoERKi", "avx::Int256::operator^::b"], [10, 3, 1, "_CPPv4NK3avx6Int256eoERK6Int256", "avx::Int256::operator^::bV"], [10, 2, 1, "_CPPv4N3avx6Int256eOERK6Int256", "avx::Int256::operator^="], [10, 2, 1, "_CPPv4N3avx6Int256eOERKi", "avx::Int256::operator^="], [10, 3, 1, "_CPPv4N3avx6Int256eOERKi", "avx::Int256::operator^=::b"], [10, 3, 1, "_CPPv4N3avx6Int256eOERK6Int256", "avx::Int256::operator^=::bV"], [10, 2, 1, "_CPPv4NK3avx6Int256orERK6Int256", "avx::Int256::operator|"], [10, 2, 1, "_CPPv4NK3avx6Int256orERKi", "avx::Int256::operator|"], [10, 3, 1, "_CPPv4NK3avx6Int256orERKi", "avx::Int256::operator|::b"], [10, 3, 1, "_CPPv4NK3avx6Int256orERK6Int256", "avx::Int256::operator|::bV"], [10, 2, 1, "_CPPv4N3avx6Int256oRERK6Int256", "avx::Int256::operator|="], [10, 2, 1, "_CPPv4N3avx6Int256oRERKi", "avx::Int256::operator|="], [10, 3, 1, "_CPPv4N3avx6Int256oRERKi", "avx::Int256::operator|=::b"], [10, 3, 1, "_CPPv4N3avx6Int256oRERK6Int256", "avx::Int256::operator|=::bV"], [10, 2, 1, "_CPPv4NK3avx6Int256coEv", "avx::Int256::operator~"], [10, 2, 1, "_CPPv4NK3avx6Int2564saveERNSt5arrayIiXL8EEEE", "avx::Int256::save"], [10, 3, 1, "_CPPv4NK3avx6Int2564saveERNSt5arrayIiXL8EEEE", "avx::Int256::save::dest"], [10, 2, 1, "_CPPv4N3avx6Int2563setE7__m256i", "avx::Int256::set"], [10, 3, 1, "_CPPv4N3avx6Int2563setE7__m256i", "avx::Int256::set::val"], [10, 4, 1, "_CPPv4N3avx6Int2564sizeE", "avx::Int256::size"], [10, 0, 1, "_CPPv4N3avx6Int25610storedTypeE", "avx::Int256::storedType"], [10, 2, 1, "_CPPv4NK3avx6Int2563strEv", "avx::Int256::str"], [12, 1, 1, "_CPPv4N3avx7Long256E", "avx::Long256"], [12, 2, 1, "_CPPv4N3avx7Long2567Long256E7__m256i", "avx::Long256::Long256"], [12, 2, 1, "_CPPv4N3avx7Long2567Long256ENSt16initializer_listIxEE", "avx::Long256::Long256"], [12, 2, 1, "_CPPv4N3avx7Long2567Long256EPKx", "avx::Long256::Long256"], [12, 2, 1, "_CPPv4N3avx7Long2567Long256ER7Long256", "avx::Long256::Long256"], [12, 2, 1, "_CPPv4N3avx7Long2567Long256ERK7Long256", "avx::Long256::Long256"], [12, 2, 1, "_CPPv4N3avx7Long2567Long256ERKNSt5arrayIcXL4EEEE", "avx::Long256::Long256"], [12, 2, 1, "_CPPv4N3avx7Long2567Long256ERKNSt5arrayIiXL4EEEE", "avx::Long256::Long256"], [12, 2, 1, "_CPPv4N3avx7Long2567Long256ERKNSt5arrayIsXL4EEEE", "avx::Long256::Long256"], [12, 2, 1, "_CPPv4N3avx7Long2567Long256ERKNSt5arrayIxXL4EEEE", "avx::Long256::Long256"], [12, 2, 1, "_CPPv4N3avx7Long2567Long256ERKx", "avx::Long256::Long256"], [12, 2, 1, "_CPPv4N3avx7Long2567Long256Ev", "avx::Long256::Long256"], [12, 3, 1, "_CPPv4N3avx7Long2567Long256E7__m256i", "avx::Long256::Long256::init"], [12, 3, 1, "_CPPv4N3avx7Long2567Long256ENSt16initializer_listIxEE", "avx::Long256::Long256::init"], [12, 3, 1, "_CPPv4N3avx7Long2567Long256EPKx", "avx::Long256::Long256::init"], [12, 3, 1, "_CPPv4N3avx7Long2567Long256ER7Long256", "avx::Long256::Long256::init"], [12, 3, 1, "_CPPv4N3avx7Long2567Long256ERK7Long256", "avx::Long256::Long256::init"], [12, 3, 1, "_CPPv4N3avx7Long2567Long256ERKNSt5arrayIcXL4EEEE", "avx::Long256::Long256::init"], [12, 3, 1, "_CPPv4N3avx7Long2567Long256ERKNSt5arrayIiXL4EEEE", "avx::Long256::Long256::init"], [12, 3, 1, "_CPPv4N3avx7Long2567Long256ERKNSt5arrayIsXL4EEEE", "avx::Long256::Long256::init"], [12, 3, 1, "_CPPv4N3avx7Long2567Long256ERKNSt5arrayIxXL4EEEE", "avx::Long256::Long256::init"], [12, 3, 1, "_CPPv4N3avx7Long2567Long256ERKx", "avx::Long256::Long256::init"], [12, 2, 1, "_CPPv4NK3avx7Long2563getEv", "avx::Long256::get"], [12, 2, 1, "_CPPv4NK3avx7Long256neEKx", "avx::Long256::operator!="], [12, 2, 1, "_CPPv4NK3avx7Long256neERK7Long256", "avx::Long256::operator!="], [12, 3, 1, "_CPPv4NK3avx7Long256neEKx", "avx::Long256::operator!=::b"], [12, 3, 1, "_CPPv4NK3avx7Long256neERK7Long256", "avx::Long256::operator!=::bV"], [12, 2, 1, "_CPPv4NK3avx7Long256rmERK7Long256", "avx::Long256::operator%"], [12, 2, 1, "_CPPv4NK3avx7Long256rmERKx", "avx::Long256::operator%"], [12, 3, 1, "_CPPv4NK3avx7Long256rmERKx", "avx::Long256::operator%::b"], [12, 3, 1, "_CPPv4NK3avx7Long256rmERK7Long256", "avx::Long256::operator%::bV"], [12, 2, 1, "_CPPv4N3avx7Long256rMERK7Long256", "avx::Long256::operator%="], [12, 2, 1, "_CPPv4N3avx7Long256rMERKx", "avx::Long256::operator%="], [12, 3, 1, "_CPPv4N3avx7Long256rMERKx", "avx::Long256::operator%=::b"], [12, 3, 1, "_CPPv4N3avx7Long256rMERK7Long256", "avx::Long256::operator%=::bV"], [12, 2, 1, "_CPPv4NK3avx7Long256anERK7Long256", "avx::Long256::operator&amp;"], [12, 2, 1, "_CPPv4NK3avx7Long256anERKx", "avx::Long256::operator&amp;"], [12, 3, 1, "_CPPv4NK3avx7Long256anERKx", "avx::Long256::operator&amp;::b"], [12, 3, 1, "_CPPv4NK3avx7Long256anERK7Long256", "avx::Long256::operator&amp;::bV"], [12, 2, 1, "_CPPv4N3avx7Long256aNERK7Long256", "avx::Long256::operator&amp;="], [12, 2, 1, "_CPPv4N3avx7Long256aNERKx", "avx::Long256::operator&amp;="], [12, 3, 1, "_CPPv4N3avx7Long256aNERKx", "avx::Long256::operator&amp;=::b"], [12, 3, 1, "_CPPv4N3avx7Long256aNERK7Long256", "avx::Long256::operator&amp;=::bV"], [12, 2, 1, "_CPPv4NK3avx7Long256mlERK7Long256", "avx::Long256::operator*"], [12, 2, 1, "_CPPv4NK3avx7Long256mlERKx", "avx::Long256::operator*"], [12, 3, 1, "_CPPv4NK3avx7Long256mlERKx", "avx::Long256::operator*::b"], [12, 3, 1, "_CPPv4NK3avx7Long256mlERK7Long256", "avx::Long256::operator*::bV"], [12, 2, 1, "_CPPv4N3avx7Long256mLERK7Long256", "avx::Long256::operator*="], [12, 2, 1, "_CPPv4N3avx7Long256mLERKx", "avx::Long256::operator*="], [12, 3, 1, "_CPPv4N3avx7Long256mLERKx", "avx::Long256::operator*=::b"], [12, 3, 1, "_CPPv4N3avx7Long256mLERK7Long256", "avx::Long256::operator*=::bV"], [12, 2, 1, "_CPPv4NK3avx7Long256plERK7Long256", "avx::Long256::operator+"], [12, 2, 1, "_CPPv4NK3avx7Long256plERKx", "avx::Long256::operator+"], [12, 3, 1, "_CPPv4NK3avx7Long256plERKx", "avx::Long256::operator+::b"], [12, 3, 1, "_CPPv4NK3avx7Long256plERK7Long256", "avx::Long256::operator+::bV"], [12, 2, 1, "_CPPv4N3avx7Long256pLERK7Long256", "avx::Long256::operator+="], [12, 2, 1, "_CPPv4N3avx7Long256pLERKx", "avx::Long256::operator+="], [12, 3, 1, "_CPPv4N3avx7Long256pLERKx", "avx::Long256::operator+=::b"], [12, 3, 1, "_CPPv4N3avx7Long256pLERK7Long256", "avx::Long256::operator+=::bV"], [12, 2, 1, "_CPPv4NK3avx7Long256miERK7Long256", "avx::Long256::operator-"], [12, 2, 1, "_CPPv4NK3avx7Long256miERKx", "avx::Long256::operator-"], [12, 3, 1, "_CPPv4NK3avx7Long256miERKx", "avx::Long256::operator-::b"], [12, 3, 1, "_CPPv4NK3avx7Long256miERK7Long256", "avx::Long256::operator-::bV"], [12, 2, 1, "_CPPv4N3avx7Long256mIERK7Long256", "avx::Long256::operator-="], [12, 2, 1, "_CPPv4N3avx7Long256mIERKx", "avx::Long256::operator-="], [12, 3, 1, "_CPPv4N3avx7Long256mIERKx", "avx::Long256::operator-=::b"], [12, 3, 1, "_CPPv4N3avx7Long256mIERK7Long256", "avx::Long256::operator-=::bV"], [12, 2, 1, "_CPPv4NK3avx7Long256dvERK7Long256", "avx::Long256::operator/"], [12, 2, 1, "_CPPv4NK3avx7Long256dvERKx", "avx::Long256::operator/"], [12, 3, 1, "_CPPv4NK3avx7Long256dvERKx", "avx::Long256::operator/::b"], [12, 3, 1, "_CPPv4NK3avx7Long256dvERK7Long256", "avx::Long256::operator/::bV"], [12, 2, 1, "_CPPv4N3avx7Long256dVERK7Long256", "avx::Long256::operator/="], [12, 2, 1, "_CPPv4N3avx7Long256dVERKx", "avx::Long256::operator/="], [12, 3, 1, "_CPPv4N3avx7Long256dVERKx", "avx::Long256::operator/=::b"], [12, 3, 1, "_CPPv4N3avx7Long256dVERK7Long256", "avx::Long256::operator/=::bV"], [12, 2, 1, "_CPPv4NK3avx7Long256lsERK7Long256", "avx::Long256::operator&lt;&lt;"], [12, 2, 1, "_CPPv4NK3avx7Long256lsERKj", "avx::Long256::operator&lt;&lt;"], [12, 3, 1, "_CPPv4NK3avx7Long256lsERKj", "avx::Long256::operator&lt;&lt;::b"], [12, 3, 1, "_CPPv4NK3avx7Long256lsERK7Long256", "avx::Long256::operator&lt;&lt;::bV"], [12, 2, 1, "_CPPv4N3avx7Long256lSERK7Long256", "avx::Long256::operator&lt;&lt;="], [12, 2, 1, "_CPPv4N3avx7Long256lSERKj", "avx::Long256::operator&lt;&lt;="], [12, 3, 1, "_CPPv4N3avx7Long256lSERKj", "avx::Long256::operator&lt;&lt;=::b"], [12, 3, 1, "_CPPv4N3avx7Long256lSERK7Long256", "avx::Long256::operator&lt;&lt;=::bV"], [12, 2, 1, "_CPPv4NK3avx7Long256eqEKx", "avx::Long256::operator=="], [12, 2, 1, "_CPPv4NK3avx7Long256eqERK7Long256", "avx::Long256::operator=="], [12, 3, 1, "_CPPv4NK3avx7Long256eqEKx", "avx::Long256::operator==::b"], [12, 3, 1, "_CPPv4NK3avx7Long256eqERK7Long256", "avx::Long256::operator==::bV"], [12, 2, 1, "_CPPv4NK3avx7Long256rsERK7Long256", "avx::Long256::operator&gt;&gt;"], [12, 2, 1, "_CPPv4NK3avx7Long256rsERKj", "avx::Long256::operator&gt;&gt;"], [12, 3, 1, "_CPPv4NK3avx7Long256rsERKj", "avx::Long256::operator&gt;&gt;::b"], [12, 3, 1, "_CPPv4NK3avx7Long256rsERK7Long256", "avx::Long256::operator&gt;&gt;::bV"], [12, 2, 1, "_CPPv4N3avx7Long256rSERK7Long256", "avx::Long256::operator&gt;&gt;="], [12, 2, 1, "_CPPv4N3avx7Long256rSERKj", "avx::Long256::operator&gt;&gt;="], [12, 3, 1, "_CPPv4N3avx7Long256rSERKj", "avx::Long256::operator&gt;&gt;=::b"], [12, 3, 1, "_CPPv4N3avx7Long256rSERK7Long256", "avx::Long256::operator&gt;&gt;=::bV"], [12, 2, 1, "_CPPv4NK3avx7Long256ixEj", "avx::Long256::operator[]"], [12, 3, 1, "_CPPv4NK3avx7Long256ixEj", "avx::Long256::operator[]::index"], [12, 2, 1, "_CPPv4NK3avx7Long256eoERK7Long256", "avx::Long256::operator^"], [12, 2, 1, "_CPPv4NK3avx7Long256eoERKx", "avx::Long256::operator^"], [12, 3, 1, "_CPPv4NK3avx7Long256eoERKx", "avx::Long256::operator^::b"], [12, 3, 1, "_CPPv4NK3avx7Long256eoERK7Long256", "avx::Long256::operator^::bV"], [12, 2, 1, "_CPPv4N3avx7Long256eOERK7Long256", "avx::Long256::operator^="], [12, 2, 1, "_CPPv4N3avx7Long256eOERKx", "avx::Long256::operator^="], [12, 3, 1, "_CPPv4N3avx7Long256eOERKx", "avx::Long256::operator^=::b"], [12, 3, 1, "_CPPv4N3avx7Long256eOERK7Long256", "avx::Long256::operator^=::bV"], [12, 2, 1, "_CPPv4NK3avx7Long256orERK7Long256", "avx::Long256::operator|"], [12, 2, 1, "_CPPv4NK3avx7Long256orERKx", "avx::Long256::operator|"], [12, 3, 1, "_CPPv4NK3avx7Long256orERKx", "avx::Long256::operator|::b"], [12, 3, 1, "_CPPv4NK3avx7Long256orERK7Long256", "avx::Long256::operator|::bV"], [12, 2, 1, "_CPPv4N3avx7Long256oRERK7Long256", "avx::Long256::operator|="], [12, 2, 1, "_CPPv4N3avx7Long256oRERKx", "avx::Long256::operator|="], [12, 3, 1, "_CPPv4N3avx7Long256oRERKx", "avx::Long256::operator|=::b"], [12, 3, 1, "_CPPv4N3avx7Long256oRERK7Long256", "avx::Long256::operator|=::bV"], [12, 2, 1, "_CPPv4NK3avx7Long256coEv", "avx::Long256::operator~"], [12, 2, 1, "_CPPv4NK3avx7Long2564saveERNSt5arrayIxXL4EEEE", "avx::Long256::save"], [12, 3, 1, "_CPPv4NK3avx7Long2564saveERNSt5arrayIxXL4EEEE", "avx::Long256::save::dest"], [12, 2, 1, "_CPPv4N3avx7Long2563setE7__m256i", "avx::Long256::set"], [12, 3, 1, "_CPPv4N3avx7Long2563setE7__m256i", "avx::Long256::set::val"], [12, 4, 1, "_CPPv4N3avx7Long2564sizeE", "avx::Long256::size"], [12, 0, 1, "_CPPv4N3avx7Long25610storedTypeE", "avx::Long256::storedType"], [12, 2, 1, "_CPPv4NK3avx7Long2563strEv", "avx::Long256::str"], [16, 1, 1, "_CPPv4N3avx8Short256E", "avx::Short256"], [16, 2, 1, "_CPPv4N3avx8Short2568Short256EKs", "avx::Short256::Short256"], [16, 2, 1, "_CPPv4N3avx8Short2568Short256ENSt16initializer_listIsEE", "avx::Short256::Short256"], [16, 2, 1, "_CPPv4N3avx8Short2568Short256ERK7__m256i", "avx::Short256::Short256"], [16, 2, 1, "_CPPv4N3avx8Short2568Short256ERK8Short256", "avx::Short256::Short256"], [16, 2, 1, "_CPPv4N3avx8Short2568Short256ERKNSt5arrayIsXL16EEEE", "avx::Short256::Short256"], [16, 2, 1, "_CPPv4N3avx8Short2568Short256Ev", "avx::Short256::Short256"], [16, 3, 1, "_CPPv4N3avx8Short2568Short256EKs", "avx::Short256::Short256::b"], [16, 3, 1, "_CPPv4N3avx8Short2568Short256ENSt16initializer_listIsEE", "avx::Short256::Short256::init"], [16, 3, 1, "_CPPv4N3avx8Short2568Short256ERK7__m256i", "avx::Short256::Short256::init"], [16, 3, 1, "_CPPv4N3avx8Short2568Short256ERK8Short256", "avx::Short256::Short256::init"], [16, 3, 1, "_CPPv4N3avx8Short2568Short256ERKNSt5arrayIsXL16EEEE", "avx::Short256::Short256::init"], [16, 2, 1, "_CPPv4NK3avx8Short2563getEv", "avx::Short256::get"], [16, 2, 1, "_CPPv4NK3avx8Short256neEKs", "avx::Short256::operator!="], [16, 2, 1, "_CPPv4NK3avx8Short256neERK8Short256", "avx::Short256::operator!="], [16, 3, 1, "_CPPv4NK3avx8Short256neEKs", "avx::Short256::operator!=::b"], [16, 3, 1, "_CPPv4NK3avx8Short256neERK8Short256", "avx::Short256::operator!=::bV"], [16, 2, 1, "_CPPv4N3avx8Short256rmERKs", "avx::Short256::operator%"], [16, 2, 1, "_CPPv4NK3avx8Short256rmERK8Short256", "avx::Short256::operator%"], [16, 3, 1, "_CPPv4N3avx8Short256rmERKs", "avx::Short256::operator%::b"], [16, 3, 1, "_CPPv4NK3avx8Short256rmERK8Short256", "avx::Short256::operator%::bV"], [16, 2, 1, "_CPPv4N3avx8Short256rMERK8Short256", "avx::Short256::operator%="], [16, 2, 1, "_CPPv4N3avx8Short256rMERKs", "avx::Short256::operator%="], [16, 3, 1, "_CPPv4N3avx8Short256rMERKs", "avx::Short256::operator%=::b"], [16, 3, 1, "_CPPv4N3avx8Short256rMERK8Short256", "avx::Short256::operator%=::bV"], [16, 2, 1, "_CPPv4NK3avx8Short256anERK8Short256", "avx::Short256::operator&amp;"], [16, 2, 1, "_CPPv4NK3avx8Short256anERKs", "avx::Short256::operator&amp;"], [16, 3, 1, "_CPPv4NK3avx8Short256anERKs", "avx::Short256::operator&amp;::b"], [16, 3, 1, "_CPPv4NK3avx8Short256anERK8Short256", "avx::Short256::operator&amp;::bV"], [16, 2, 1, "_CPPv4N3avx8Short256aNERK8Short256", "avx::Short256::operator&amp;="], [16, 2, 1, "_CPPv4N3avx8Short256aNERKs", "avx::Short256::operator&amp;="], [16, 3, 1, "_CPPv4N3avx8Short256aNERKs", "avx::Short256::operator&amp;=::b"], [16, 3, 1, "_CPPv4N3avx8Short256aNERK8Short256", "avx::Short256::operator&amp;=::bV"], [16, 2, 1, "_CPPv4NK3avx8Short256mlERK8Short256", "avx::Short256::operator*"], [16, 2, 1, "_CPPv4NK3avx8Short256mlERKs", "avx::Short256::operator*"], [16, 3, 1, "_CPPv4NK3avx8Short256mlERKs", "avx::Short256::operator*::b"], [16, 3, 1, "_CPPv4NK3avx8Short256mlERK8Short256", "avx::Short256::operator*::bV"], [16, 2, 1, "_CPPv4N3avx8Short256mLERK8Short256", "avx::Short256::operator*="], [16, 2, 1, "_CPPv4N3avx8Short256mLERKs", "avx::Short256::operator*="], [16, 3, 1, "_CPPv4N3avx8Short256mLERKs", "avx::Short256::operator*=::b"], [16, 3, 1, "_CPPv4N3avx8Short256mLERK8Short256", "avx::Short256::operator*=::bV"], [16, 2, 1, "_CPPv4NK3avx8Short256plERK8Short256", "avx::Short256::operator+"], [16, 2, 1, "_CPPv4NK3avx8Short256plERKs", "avx::Short256::operator+"], [16, 3, 1, "_CPPv4NK3avx8Short256plERKs", "avx::Short256::operator+::b"], [16, 3, 1, "_CPPv4NK3avx8Short256plERK8Short256", "avx::Short256::operator+::bV"], [16, 2, 1, "_CPPv4N3avx8Short256pLERK8Short256", "avx::Short256::operator+="], [16, 2, 1, "_CPPv4N3avx8Short256pLERKs", "avx::Short256::operator+="], [16, 3, 1, "_CPPv4N3avx8Short256pLERKs", "avx::Short256::operator+=::b"], [16, 3, 1, "_CPPv4N3avx8Short256pLERK8Short256", "avx::Short256::operator+=::bV"], [16, 2, 1, "_CPPv4NK3avx8Short256miERK8Short256", "avx::Short256::operator-"], [16, 2, 1, "_CPPv4NK3avx8Short256miERKs", "avx::Short256::operator-"], [16, 3, 1, "_CPPv4NK3avx8Short256miERKs", "avx::Short256::operator-::b"], [16, 3, 1, "_CPPv4NK3avx8Short256miERK8Short256", "avx::Short256::operator-::bV"], [16, 2, 1, "_CPPv4N3avx8Short256mIERK8Short256", "avx::Short256::operator-="], [16, 2, 1, "_CPPv4N3avx8Short256mIERKs", "avx::Short256::operator-="], [16, 3, 1, "_CPPv4N3avx8Short256mIERKs", "avx::Short256::operator-=::b"], [16, 3, 1, "_CPPv4N3avx8Short256mIERK8Short256", "avx::Short256::operator-=::bV"], [16, 2, 1, "_CPPv4NK3avx8Short256dvERK8Short256", "avx::Short256::operator/"], [16, 2, 1, "_CPPv4NK3avx8Short256dvERKs", "avx::Short256::operator/"], [16, 3, 1, "_CPPv4NK3avx8Short256dvERKs", "avx::Short256::operator/::b"], [16, 3, 1, "_CPPv4NK3avx8Short256dvERK8Short256", "avx::Short256::operator/::bV"], [16, 2, 1, "_CPPv4N3avx8Short256dVERK8Short256", "avx::Short256::operator/="], [16, 2, 1, "_CPPv4N3avx8Short256dVERKs", "avx::Short256::operator/="], [16, 3, 1, "_CPPv4N3avx8Short256dVERKs", "avx::Short256::operator/=::b"], [16, 3, 1, "_CPPv4N3avx8Short256dVERK8Short256", "avx::Short256::operator/=::bV"], [16, 2, 1, "_CPPv4NK3avx8Short256lsERK8Short256", "avx::Short256::operator&lt;&lt;"], [16, 2, 1, "_CPPv4NK3avx8Short256lsERKj", "avx::Short256::operator&lt;&lt;"], [16, 3, 1, "_CPPv4NK3avx8Short256lsERK8Short256", "avx::Short256::operator&lt;&lt;::bV"], [16, 3, 1, "_CPPv4NK3avx8Short256lsERKj", "avx::Short256::operator&lt;&lt;::shift"], [16, 2, 1, "_CPPv4N3avx8Short256lSERK8Short256", "avx::Short256::operator&lt;&lt;="], [16, 2, 1, "_CPPv4N3avx8Short256lSERKj", "avx::Short256::operator&lt;&lt;="], [16, 3, 1, "_CPPv4N3avx8Short256lSERK8Short256", "avx::Short256::operator&lt;&lt;=::bV"], [16, 3, 1, "_CPPv4N3avx8Short256lSERKj", "avx::Short256::operator&lt;&lt;=::shift"], [16, 2, 1, "_CPPv4NK3avx8Short256eqEKs", "avx::Short256::operator=="], [16, 2, 1, "_CPPv4NK3avx8Short256eqERK8Short256", "avx::Short256::operator=="], [16, 3, 1, "_CPPv4NK3avx8Short256eqEKs", "avx::Short256::operator==::b"], [16, 3, 1, "_CPPv4NK3avx8Short256eqERK8Short256", "avx::Short256::operator==::bV"], [16, 2, 1, "_CPPv4NK3avx8Short256rsERK8Short256", "avx::Short256::operator&gt;&gt;"], [16, 2, 1, "_CPPv4NK3avx8Short256rsERKj", "avx::Short256::operator&gt;&gt;"], [16, 3, 1, "_CPPv4NK3avx8Short256rsERK8Short256", "avx::Short256::operator&gt;&gt;::bV"], [16, 3, 1, "_CPPv4NK3avx8Short256rsERKj", "avx::Short256::operator&gt;&gt;::shift"], [16, 2, 1, "_CPPv4N3avx8Short256rSERK8Short256", "avx::Short256::operator&gt;&gt;="], [16, 2, 1, "_CPPv4N3avx8Short256rSERKj", "avx::Short256::operator&gt;&gt;="], [16, 3, 1, "_CPPv4N3avx8Short256rSERK8Short256", "avx::Short256::operator&gt;&gt;=::bV"], [16, 3, 1, "_CPPv4N3avx8Short256rSERKj", "avx::Short256::operator&gt;&gt;=::shift"], [16, 2, 1, "_CPPv4NK3avx8Short256ixERKj", "avx::Short256::operator[]"], [16, 3, 1, "_CPPv4NK3avx8Short256ixERKj", "avx::Short256::operator[]::index"], [16, 2, 1, "_CPPv4NK3avx8Short256eoERK8Short256", "avx::Short256::operator^"], [16, 2, 1, "_CPPv4NK3avx8Short256eoERKs", "avx::Short256::operator^"], [16, 3, 1, "_CPPv4NK3avx8Short256eoERKs", "avx::Short256::operator^::b"], [16, 3, 1, "_CPPv4NK3avx8Short256eoERK8Short256", "avx::Short256::operator^::bV"], [16, 2, 1, "_CPPv4N3avx8Short256eOERK8Short256", "avx::Short256::operator^="], [16, 2, 1, "_CPPv4N3avx8Short256eOERKs", "avx::Short256::operator^="], [16, 3, 1, "_CPPv4N3avx8Short256eOERKs", "avx::Short256::operator^=::b"], [16, 3, 1, "_CPPv4N3avx8Short256eOERK8Short256", "avx::Short256::operator^=::bV"], [16, 2, 1, "_CPPv4NK3avx8Short256orERK8Short256", "avx::Short256::operator|"], [16, 2, 1, "_CPPv4NK3avx8Short256orERKs", "avx::Short256::operator|"], [16, 3, 1, "_CPPv4NK3avx8Short256orERKs", "avx::Short256::operator|::b"], [16, 3, 1, "_CPPv4NK3avx8Short256orERK8Short256", "avx::Short256::operator|::bV"], [16, 2, 1, "_CPPv4N3avx8Short256oRERK8Short256", "avx::Short256::operator|="], [16, 2, 1, "_CPPv4N3avx8Short256oRERKs", "avx::Short256::operator|="], [16, 3, 1, "_CPPv4N3avx8Short256oRERKs", "avx::Short256::operator|=::b"], [16, 3, 1, "_CPPv4N3avx8Short256oRERK8Short256", "avx::Short256::operator|=::bV"], [16, 2, 1, "_CPPv4NK3avx8Short256coEv", "avx::Short256::operator~"], [16, 2, 1, "_CPPv4NK3avx8Short2564saveERNSt5arrayIsXL16EEEE", "avx::Short256::save"], [16, 3, 1, "_CPPv4NK3avx8Short2564saveERNSt5arrayIsXL16EEEE", "avx::Short256::save::dest"], [16, 2, 1, "_CPPv4N3avx8Short2563setEK7__m256i", "avx::Short256::set"], [16, 3, 1, "_CPPv4N3avx8Short2563setEK7__m256i", "avx::Short256::set::value"], [16, 4, 1, "_CPPv4N3avx8Short2564sizeE", "avx::Short256::size"], [16, 0, 1, "_CPPv4N3avx8Short25610storedTypeE", "avx::Short256::storedType"], [16, 2, 1, "_CPPv4NK3avx8Short2563strEv", "avx::Short256::str"], [18, 1, 1, "_CPPv4N3avx8UChar256E", "avx::UChar256"], [18, 2, 1, "_CPPv4N3avx8UChar2568UChar256EKh", "avx::UChar256::UChar256"], [18, 2, 1, "_CPPv4N3avx8UChar2568UChar256ENSt16initializer_listIhEE", "avx::UChar256::UChar256"], [18, 2, 1, "_CPPv4N3avx8UChar2568UChar256EPKh", "avx::UChar256::UChar256"], [18, 2, 1, "_CPPv4N3avx8UChar2568UChar256ERK7__m256i", "avx::UChar256::UChar256"], [18, 2, 1, "_CPPv4N3avx8UChar2568UChar256ERK8UChar256", "avx::UChar256::UChar256"], [18, 2, 1, "_CPPv4N3avx8UChar2568UChar256ERKNSt5arrayIhXL32EEEE", "avx::UChar256::UChar256"], [18, 2, 1, "_CPPv4N3avx8UChar2568UChar256ERKNSt6stringE", "avx::UChar256::UChar256"], [18, 2, 1, "_CPPv4N3avx8UChar2568UChar256Ev", "avx::UChar256::UChar256"], [18, 3, 1, "_CPPv4N3avx8UChar2568UChar256EKh", "avx::UChar256::UChar256::init"], [18, 3, 1, "_CPPv4N3avx8UChar2568UChar256ENSt16initializer_listIhEE", "avx::UChar256::UChar256::init"], [18, 3, 1, "_CPPv4N3avx8UChar2568UChar256ERK7__m256i", "avx::UChar256::UChar256::init"], [18, 3, 1, "_CPPv4N3avx8UChar2568UChar256ERK8UChar256", "avx::UChar256::UChar256::init"], [18, 3, 1, "_CPPv4N3avx8UChar2568UChar256ERKNSt5arrayIhXL32EEEE", "avx::UChar256::UChar256::init"], [18, 3, 1, "_CPPv4N3avx8UChar2568UChar256ERKNSt6stringE", "avx::UChar256::UChar256::init"], [18, 3, 1, "_CPPv4N3avx8UChar2568UChar256EPKh", "avx::UChar256::UChar256::pSrc"], [18, 2, 1, "_CPPv4NK3avx8UChar2563getEv", "avx::UChar256::get"], [18, 2, 1, "_CPPv4NK3avx8UChar256neEKc", "avx::UChar256::operator!="], [18, 2, 1, "_CPPv4NK3avx8UChar256neERK8UChar256", "avx::UChar256::operator!="], [18, 3, 1, "_CPPv4NK3avx8UChar256neEKc", "avx::UChar256::operator!=::b"], [18, 3, 1, "_CPPv4NK3avx8UChar256neERK8UChar256", "avx::UChar256::operator!=::bV"], [18, 2, 1, "_CPPv4NK3avx8UChar256rmEKh", "avx::UChar256::operator%"], [18, 2, 1, "_CPPv4NK3avx8UChar256rmERK8UChar256", "avx::UChar256::operator%"], [18, 3, 1, "_CPPv4NK3avx8UChar256rmEKh", "avx::UChar256::operator%::b"], [18, 3, 1, "_CPPv4NK3avx8UChar256rmERK8UChar256", "avx::UChar256::operator%::bV"], [18, 2, 1, "_CPPv4N3avx8UChar256rMEKh", "avx::UChar256::operator%="], [18, 2, 1, "_CPPv4N3avx8UChar256rMERK8UChar256", "avx::UChar256::operator%="], [18, 3, 1, "_CPPv4N3avx8UChar256rMEKh", "avx::UChar256::operator%=::b"], [18, 3, 1, "_CPPv4N3avx8UChar256rMERK8UChar256", "avx::UChar256::operator%=::bV"], [18, 2, 1, "_CPPv4NK3avx8UChar256anERK8UChar256", "avx::UChar256::operator&amp;"], [18, 2, 1, "_CPPv4NK3avx8UChar256anERKh", "avx::UChar256::operator&amp;"], [18, 3, 1, "_CPPv4NK3avx8UChar256anERKh", "avx::UChar256::operator&amp;::b"], [18, 3, 1, "_CPPv4NK3avx8UChar256anERK8UChar256", "avx::UChar256::operator&amp;::bV"], [18, 2, 1, "_CPPv4N3avx8UChar256aNERK8UChar256", "avx::UChar256::operator&amp;="], [18, 2, 1, "_CPPv4N3avx8UChar256aNERKh", "avx::UChar256::operator&amp;="], [18, 3, 1, "_CPPv4N3avx8UChar256aNERKh", "avx::UChar256::operator&amp;=::b"], [18, 3, 1, "_CPPv4N3avx8UChar256aNERK8UChar256", "avx::UChar256::operator&amp;=::bV"], [18, 2, 1, "_CPPv4NK3avx8UChar256mlERK8UChar256", "avx::UChar256::operator*"], [18, 2, 1, "_CPPv4NK3avx8UChar256mlERKc", "avx::UChar256::operator*"], [18, 3, 1, "_CPPv4NK3avx8UChar256mlERKc", "avx::UChar256::operator*::b"], [18, 3, 1, "_CPPv4NK3avx8UChar256mlERK8UChar256", "avx::UChar256::operator*::bV"], [18, 2, 1, "_CPPv4N3avx8UChar256mLERK8UChar256", "avx::UChar256::operator*="], [18, 2, 1, "_CPPv4N3avx8UChar256mLERKc", "avx::UChar256::operator*="], [18, 3, 1, "_CPPv4N3avx8UChar256mLERKc", "avx::UChar256::operator*=::b"], [18, 3, 1, "_CPPv4N3avx8UChar256mLERK8UChar256", "avx::UChar256::operator*=::bV"], [18, 2, 1, "_CPPv4NK3avx8UChar256plERK8UChar256", "avx::UChar256::operator+"], [18, 2, 1, "_CPPv4NK3avx8UChar256plERKh", "avx::UChar256::operator+"], [18, 3, 1, "_CPPv4NK3avx8UChar256plERKh", "avx::UChar256::operator+::b"], [18, 3, 1, "_CPPv4NK3avx8UChar256plERK8UChar256", "avx::UChar256::operator+::bV"], [18, 2, 1, "_CPPv4N3avx8UChar256pLERK8UChar256", "avx::UChar256::operator+="], [18, 2, 1, "_CPPv4N3avx8UChar256pLERKh", "avx::UChar256::operator+="], [18, 3, 1, "_CPPv4N3avx8UChar256pLERKh", "avx::UChar256::operator+=::b"], [18, 3, 1, "_CPPv4N3avx8UChar256pLERK8UChar256", "avx::UChar256::operator+=::bV"], [18, 2, 1, "_CPPv4NK3avx8UChar256miERK8UChar256", "avx::UChar256::operator-"], [18, 2, 1, "_CPPv4NK3avx8UChar256miERKh", "avx::UChar256::operator-"], [18, 3, 1, "_CPPv4NK3avx8UChar256miERKh", "avx::UChar256::operator-::b"], [18, 3, 1, "_CPPv4NK3avx8UChar256miERK8UChar256", "avx::UChar256::operator-::bV"], [18, 2, 1, "_CPPv4N3avx8UChar256mIERK8UChar256", "avx::UChar256::operator-="], [18, 2, 1, "_CPPv4N3avx8UChar256mIERKh", "avx::UChar256::operator-="], [18, 3, 1, "_CPPv4N3avx8UChar256mIERKh", "avx::UChar256::operator-=::b"], [18, 3, 1, "_CPPv4N3avx8UChar256mIERK8UChar256", "avx::UChar256::operator-=::bV"], [18, 2, 1, "_CPPv4NK3avx8UChar256dvEKh", "avx::UChar256::operator/"], [18, 2, 1, "_CPPv4NK3avx8UChar256dvERK8UChar256", "avx::UChar256::operator/"], [18, 3, 1, "_CPPv4NK3avx8UChar256dvEKh", "avx::UChar256::operator/::b"], [18, 3, 1, "_CPPv4NK3avx8UChar256dvERK8UChar256", "avx::UChar256::operator/::bV"], [18, 2, 1, "_CPPv4N3avx8UChar256dVEKh", "avx::UChar256::operator/="], [18, 2, 1, "_CPPv4N3avx8UChar256dVERK8UChar256", "avx::UChar256::operator/="], [18, 3, 1, "_CPPv4N3avx8UChar256dVEKh", "avx::UChar256::operator/=::b"], [18, 3, 1, "_CPPv4N3avx8UChar256dVERK8UChar256", "avx::UChar256::operator/=::bV"], [18, 2, 1, "_CPPv4N3avx8UChar256lsERNSt7ostreamERK8UChar256", "avx::UChar256::operator&lt;&lt;"], [18, 2, 1, "_CPPv4NK3avx8UChar256lsERK8UChar256", "avx::UChar256::operator&lt;&lt;"], [18, 2, 1, "_CPPv4NK3avx8UChar256lsERKj", "avx::UChar256::operator&lt;&lt;"], [18, 3, 1, "_CPPv4N3avx8UChar256lsERNSt7ostreamERK8UChar256", "avx::UChar256::operator&lt;&lt;::a"], [18, 3, 1, "_CPPv4NK3avx8UChar256lsERKj", "avx::UChar256::operator&lt;&lt;::b"], [18, 3, 1, "_CPPv4NK3avx8UChar256lsERK8UChar256", "avx::UChar256::operator&lt;&lt;::bV"], [18, 3, 1, "_CPPv4N3avx8UChar256lsERNSt7ostreamERK8UChar256", "avx::UChar256::operator&lt;&lt;::os"], [18, 2, 1, "_CPPv4N3avx8UChar256lSERK8UChar256", "avx::UChar256::operator&lt;&lt;="], [18, 2, 1, "_CPPv4N3avx8UChar256lSERKj", "avx::UChar256::operator&lt;&lt;="], [18, 3, 1, "_CPPv4N3avx8UChar256lSERKj", "avx::UChar256::operator&lt;&lt;=::b"], [18, 3, 1, "_CPPv4N3avx8UChar256lSERK8UChar256", "avx::UChar256::operator&lt;&lt;=::bV"], [18, 2, 1, "_CPPv4NK3avx8UChar256eqEKc", "avx::UChar256::operator=="], [18, 2, 1, "_CPPv4NK3avx8UChar256eqERK8UChar256", "avx::UChar256::operator=="], [18, 3, 1, "_CPPv4NK3avx8UChar256eqEKc", "avx::UChar256::operator==::b"], [18, 3, 1, "_CPPv4NK3avx8UChar256eqERK8UChar256", "avx::UChar256::operator==::bV"], [18, 2, 1, "_CPPv4NK3avx8UChar256rsERK8UChar256", "avx::UChar256::operator&gt;&gt;"], [18, 2, 1, "_CPPv4NK3avx8UChar256rsERKj", "avx::UChar256::operator&gt;&gt;"], [18, 3, 1, "_CPPv4NK3avx8UChar256rsERKj", "avx::UChar256::operator&gt;&gt;::b"], [18, 3, 1, "_CPPv4NK3avx8UChar256rsERK8UChar256", "avx::UChar256::operator&gt;&gt;::bV"], [18, 2, 1, "_CPPv4N3avx8UChar256rSERK8UChar256", "avx::UChar256::operator&gt;&gt;="], [18, 2, 1, "_CPPv4N3avx8UChar256rSERKj", "avx::UChar256::operator&gt;&gt;="], [18, 3, 1, "_CPPv4N3avx8UChar256rSERKj", "avx::UChar256::operator&gt;&gt;=::b"], [18, 3, 1, "_CPPv4N3avx8UChar256rSERK8UChar256", "avx::UChar256::operator&gt;&gt;=::bV"], [18, 2, 1, "_CPPv4NK3avx8UChar256ixERKj", "avx::UChar256::operator[]"], [18, 3, 1, "_CPPv4NK3avx8UChar256ixERKj", "avx::UChar256::operator[]::index"], [18, 2, 1, "_CPPv4NK3avx8UChar256eoERK8UChar256", "avx::UChar256::operator^"], [18, 2, 1, "_CPPv4NK3avx8UChar256eoERKh", "avx::UChar256::operator^"], [18, 3, 1, "_CPPv4NK3avx8UChar256eoERKh", "avx::UChar256::operator^::b"], [18, 3, 1, "_CPPv4NK3avx8UChar256eoERK8UChar256", "avx::UChar256::operator^::bV"], [18, 2, 1, "_CPPv4N3avx8UChar256eOERK8UChar256", "avx::UChar256::operator^="], [18, 2, 1, "_CPPv4N3avx8UChar256eOERKh", "avx::UChar256::operator^="], [18, 3, 1, "_CPPv4N3avx8UChar256eOERKh", "avx::UChar256::operator^=::b"], [18, 3, 1, "_CPPv4N3avx8UChar256eOERK8UChar256", "avx::UChar256::operator^=::bV"], [18, 2, 1, "_CPPv4NK3avx8UChar256orERK8UChar256", "avx::UChar256::operator|"], [18, 2, 1, "_CPPv4NK3avx8UChar256orERKh", "avx::UChar256::operator|"], [18, 3, 1, "_CPPv4NK3avx8UChar256orERKh", "avx::UChar256::operator|::b"], [18, 3, 1, "_CPPv4NK3avx8UChar256orERK8UChar256", "avx::UChar256::operator|::bV"], [18, 2, 1, "_CPPv4N3avx8UChar256oRERK8UChar256", "avx::UChar256::operator|="], [18, 2, 1, "_CPPv4N3avx8UChar256oRERKh", "avx::UChar256::operator|="], [18, 3, 1, "_CPPv4N3avx8UChar256oRERKh", "avx::UChar256::operator|=::b"], [18, 3, 1, "_CPPv4N3avx8UChar256oRERK8UChar256", "avx::UChar256::operator|=::bV"], [18, 2, 1, "_CPPv4NK3avx8UChar256coEv", "avx::UChar256::operator~"], [18, 2, 1, "_CPPv4NK3avx8UChar2564saveERNSt5arrayIhXL32EEEE", "avx::UChar256::save"], [18, 3, 1, "_CPPv4NK3avx8UChar2564saveERNSt5arrayIhXL32EEEE", "avx::UChar256::save::dest"], [18, 2, 1, "_CPPv4N3avx8UChar2563setEK7__m256i", "avx::UChar256::set"], [18, 3, 1, "_CPPv4N3avx8UChar2563setEK7__m256i", "avx::UChar256::set::value"], [18, 4, 1, "_CPPv4N3avx8UChar2564sizeE", "avx::UChar256::size"], [18, 0, 1, "_CPPv4N3avx8UChar25610storedTypeE", "avx::UChar256::storedType"], [18, 2, 1, "_CPPv4NK3avx8UChar2563strEv", "avx::UChar256::str"], [18, 2, 1, "_CPPv4NK3avx8UChar2568toStringEv", "avx::UChar256::toString"], [20, 1, 1, "_CPPv4N3avx7UInt256E", "avx::UInt256"], [20, 2, 1, "_CPPv4N3avx7UInt2567UInt256E7__m256i", "avx::UInt256::UInt256"], [20, 2, 1, "_CPPv4N3avx7UInt2567UInt256EKj", "avx::UInt256::UInt256"], [20, 2, 1, "_CPPv4N3avx7UInt2567UInt256ENSt16initializer_listIjEE", "avx::UInt256::UInt256"], [20, 2, 1, "_CPPv4N3avx7UInt2567UInt256ENSt5arrayIhXL8EEEE", "avx::UInt256::UInt256"], [20, 2, 1, "_CPPv4N3avx7UInt2567UInt256ENSt5arrayIjXL8EEEE", "avx::UInt256::UInt256"], [20, 2, 1, "_CPPv4N3avx7UInt2567UInt256ENSt5arrayItXL8EEEE", "avx::UInt256::UInt256"], [20, 2, 1, "_CPPv4N3avx7UInt2567UInt256EPKj", "avx::UInt256::UInt256"], [20, 2, 1, "_CPPv4N3avx7UInt2567UInt256ER7UInt256", "avx::UInt256::UInt256"], [20, 2, 1, "_CPPv4N3avx7UInt2567UInt256ERK7UInt256", "avx::UInt256::UInt256"], [20, 2, 1, "_CPPv4N3avx7UInt2567UInt256Ev", "avx::UInt256::UInt256"], [20, 3, 1, "_CPPv4N3avx7UInt2567UInt256E7__m256i", "avx::UInt256::UInt256::init"], [20, 3, 1, "_CPPv4N3avx7UInt2567UInt256EKj", "avx::UInt256::UInt256::init"], [20, 3, 1, "_CPPv4N3avx7UInt2567UInt256ENSt16initializer_listIjEE", "avx::UInt256::UInt256::init"], [20, 3, 1, "_CPPv4N3avx7UInt2567UInt256ENSt5arrayIhXL8EEEE", "avx::UInt256::UInt256::init"], [20, 3, 1, "_CPPv4N3avx7UInt2567UInt256ENSt5arrayIjXL8EEEE", "avx::UInt256::UInt256::init"], [20, 3, 1, "_CPPv4N3avx7UInt2567UInt256ENSt5arrayItXL8EEEE", "avx::UInt256::UInt256::init"], [20, 3, 1, "_CPPv4N3avx7UInt2567UInt256ER7UInt256", "avx::UInt256::UInt256::init"], [20, 3, 1, "_CPPv4N3avx7UInt2567UInt256ERK7UInt256", "avx::UInt256::UInt256::init"], [20, 3, 1, "_CPPv4N3avx7UInt2567UInt256EPKj", "avx::UInt256::UInt256::pSrc"], [20, 2, 1, "_CPPv4NK3avx7UInt2563getEv", "avx::UInt256::get"], [20, 2, 1, "_CPPv4NK3avx7UInt256neEKi", "avx::UInt256::operator!="], [20, 2, 1, "_CPPv4NK3avx7UInt256neERK7UInt256", "avx::UInt256::operator!="], [20, 3, 1, "_CPPv4NK3avx7UInt256neEKi", "avx::UInt256::operator!=::b"], [20, 3, 1, "_CPPv4NK3avx7UInt256neERK7UInt256", "avx::UInt256::operator!=::bV"], [20, 2, 1, "_CPPv4NK3avx7UInt256rmEKj", "avx::UInt256::operator%"], [20, 2, 1, "_CPPv4NK3avx7UInt256rmERK7UInt256", "avx::UInt256::operator%"], [20, 3, 1, "_CPPv4NK3avx7UInt256rmEKj", "avx::UInt256::operator%::b"], [20, 3, 1, "_CPPv4NK3avx7UInt256rmERK7UInt256", "avx::UInt256::operator%::b"], [20, 2, 1, "_CPPv4N3avx7UInt256rMEKj", "avx::UInt256::operator%="], [20, 2, 1, "_CPPv4N3avx7UInt256rMERK7UInt256", "avx::UInt256::operator%="], [20, 3, 1, "_CPPv4N3avx7UInt256rMEKj", "avx::UInt256::operator%=::b"], [20, 3, 1, "_CPPv4N3avx7UInt256rMERK7UInt256", "avx::UInt256::operator%=::b"], [20, 2, 1, "_CPPv4NK3avx7UInt256anEKj", "avx::UInt256::operator&amp;"], [20, 2, 1, "_CPPv4NK3avx7UInt256anERK7UInt256", "avx::UInt256::operator&amp;"], [20, 3, 1, "_CPPv4NK3avx7UInt256anEKj", "avx::UInt256::operator&amp;::b"], [20, 3, 1, "_CPPv4NK3avx7UInt256anERK7UInt256", "avx::UInt256::operator&amp;::b"], [20, 2, 1, "_CPPv4N3avx7UInt256aNEKj", "avx::UInt256::operator&amp;="], [20, 2, 1, "_CPPv4N3avx7UInt256aNERK7UInt256", "avx::UInt256::operator&amp;="], [20, 3, 1, "_CPPv4N3avx7UInt256aNEKj", "avx::UInt256::operator&amp;=::b"], [20, 3, 1, "_CPPv4N3avx7UInt256aNERK7UInt256", "avx::UInt256::operator&amp;=::b"], [20, 2, 1, "_CPPv4NK3avx7UInt256mlEKj", "avx::UInt256::operator*"], [20, 2, 1, "_CPPv4NK3avx7UInt256mlERK7UInt256", "avx::UInt256::operator*"], [20, 3, 1, "_CPPv4NK3avx7UInt256mlEKj", "avx::UInt256::operator*::b"], [20, 3, 1, "_CPPv4NK3avx7UInt256mlERK7UInt256", "avx::UInt256::operator*::b"], [20, 2, 1, "_CPPv4N3avx7UInt256mLEKj", "avx::UInt256::operator*="], [20, 2, 1, "_CPPv4N3avx7UInt256mLERK7UInt256", "avx::UInt256::operator*="], [20, 3, 1, "_CPPv4N3avx7UInt256mLEKj", "avx::UInt256::operator*=::b"], [20, 3, 1, "_CPPv4N3avx7UInt256mLERK7UInt256", "avx::UInt256::operator*=::b"], [20, 2, 1, "_CPPv4NK3avx7UInt256plEKj", "avx::UInt256::operator+"], [20, 2, 1, "_CPPv4NK3avx7UInt256plERK7UInt256", "avx::UInt256::operator+"], [20, 3, 1, "_CPPv4NK3avx7UInt256plEKj", "avx::UInt256::operator+::b"], [20, 3, 1, "_CPPv4NK3avx7UInt256plERK7UInt256", "avx::UInt256::operator+::b"], [20, 2, 1, "_CPPv4N3avx7UInt256pLEKj", "avx::UInt256::operator+="], [20, 2, 1, "_CPPv4N3avx7UInt256pLERK7UInt256", "avx::UInt256::operator+="], [20, 3, 1, "_CPPv4N3avx7UInt256pLEKj", "avx::UInt256::operator+=::b"], [20, 3, 1, "_CPPv4N3avx7UInt256pLERK7UInt256", "avx::UInt256::operator+=::b"], [20, 2, 1, "_CPPv4NK3avx7UInt256miEKj", "avx::UInt256::operator-"], [20, 2, 1, "_CPPv4NK3avx7UInt256miERK7UInt256", "avx::UInt256::operator-"], [20, 3, 1, "_CPPv4NK3avx7UInt256miEKj", "avx::UInt256::operator-::b"], [20, 3, 1, "_CPPv4NK3avx7UInt256miERK7UInt256", "avx::UInt256::operator-::b"], [20, 2, 1, "_CPPv4N3avx7UInt256mIEKj", "avx::UInt256::operator-="], [20, 2, 1, "_CPPv4N3avx7UInt256mIERK7UInt256", "avx::UInt256::operator-="], [20, 3, 1, "_CPPv4N3avx7UInt256mIEKj", "avx::UInt256::operator-=::b"], [20, 3, 1, "_CPPv4N3avx7UInt256mIERK7UInt256", "avx::UInt256::operator-=::b"], [20, 2, 1, "_CPPv4NK3avx7UInt256dvEKj", "avx::UInt256::operator/"], [20, 2, 1, "_CPPv4NK3avx7UInt256dvERK7UInt256", "avx::UInt256::operator/"], [20, 3, 1, "_CPPv4NK3avx7UInt256dvEKj", "avx::UInt256::operator/::b"], [20, 3, 1, "_CPPv4NK3avx7UInt256dvERK7UInt256", "avx::UInt256::operator/::b"], [20, 2, 1, "_CPPv4N3avx7UInt256dVEKj", "avx::UInt256::operator/="], [20, 2, 1, "_CPPv4N3avx7UInt256dVERK7UInt256", "avx::UInt256::operator/="], [20, 3, 1, "_CPPv4N3avx7UInt256dVEKj", "avx::UInt256::operator/=::b"], [20, 3, 1, "_CPPv4N3avx7UInt256dVERK7UInt256", "avx::UInt256::operator/=::b"], [20, 2, 1, "_CPPv4NK3avx7UInt256lsEKj", "avx::UInt256::operator&lt;&lt;"], [20, 2, 1, "_CPPv4NK3avx7UInt256lsERK7UInt256", "avx::UInt256::operator&lt;&lt;"], [20, 3, 1, "_CPPv4NK3avx7UInt256lsEKj", "avx::UInt256::operator&lt;&lt;::b"], [20, 3, 1, "_CPPv4NK3avx7UInt256lsERK7UInt256", "avx::UInt256::operator&lt;&lt;::b"], [20, 2, 1, "_CPPv4N3avx7UInt256lSEKj", "avx::UInt256::operator&lt;&lt;="], [20, 2, 1, "_CPPv4N3avx7UInt256lSERK7UInt256", "avx::UInt256::operator&lt;&lt;="], [20, 3, 1, "_CPPv4N3avx7UInt256lSEKj", "avx::UInt256::operator&lt;&lt;=::b"], [20, 3, 1, "_CPPv4N3avx7UInt256lSERK7UInt256", "avx::UInt256::operator&lt;&lt;=::b"], [20, 2, 1, "_CPPv4NK3avx7UInt256eqEKi", "avx::UInt256::operator=="], [20, 2, 1, "_CPPv4NK3avx7UInt256eqERK7UInt256", "avx::UInt256::operator=="], [20, 3, 1, "_CPPv4NK3avx7UInt256eqEKi", "avx::UInt256::operator==::b"], [20, 3, 1, "_CPPv4NK3avx7UInt256eqERK7UInt256", "avx::UInt256::operator==::bV"], [20, 2, 1, "_CPPv4NK3avx7UInt256rsEKj", "avx::UInt256::operator&gt;&gt;"], [20, 2, 1, "_CPPv4NK3avx7UInt256rsERK7UInt256", "avx::UInt256::operator&gt;&gt;"], [20, 3, 1, "_CPPv4NK3avx7UInt256rsEKj", "avx::UInt256::operator&gt;&gt;::b"], [20, 3, 1, "_CPPv4NK3avx7UInt256rsERK7UInt256", "avx::UInt256::operator&gt;&gt;::b"], [20, 2, 1, "_CPPv4N3avx7UInt256rSEKj", "avx::UInt256::operator&gt;&gt;="], [20, 2, 1, "_CPPv4N3avx7UInt256rSERK7UInt256", "avx::UInt256::operator&gt;&gt;="], [20, 3, 1, "_CPPv4N3avx7UInt256rSEKj", "avx::UInt256::operator&gt;&gt;=::b"], [20, 3, 1, "_CPPv4N3avx7UInt256rSERK7UInt256", "avx::UInt256::operator&gt;&gt;=::b"], [20, 2, 1, "_CPPv4NK3avx7UInt256ixEKj", "avx::UInt256::operator[]"], [20, 3, 1, "_CPPv4NK3avx7UInt256ixEKj", "avx::UInt256::operator[]::index"], [20, 2, 1, "_CPPv4NK3avx7UInt256eoEKj", "avx::UInt256::operator^"], [20, 2, 1, "_CPPv4NK3avx7UInt256eoERK7UInt256", "avx::UInt256::operator^"], [20, 3, 1, "_CPPv4NK3avx7UInt256eoEKj", "avx::UInt256::operator^::b"], [20, 3, 1, "_CPPv4NK3avx7UInt256eoERK7UInt256", "avx::UInt256::operator^::b"], [20, 2, 1, "_CPPv4N3avx7UInt256eOEKj", "avx::UInt256::operator^="], [20, 2, 1, "_CPPv4N3avx7UInt256eOERK7UInt256", "avx::UInt256::operator^="], [20, 3, 1, "_CPPv4N3avx7UInt256eOEKj", "avx::UInt256::operator^=::b"], [20, 3, 1, "_CPPv4N3avx7UInt256eOERK7UInt256", "avx::UInt256::operator^=::b"], [20, 2, 1, "_CPPv4NK3avx7UInt256orEKj", "avx::UInt256::operator|"], [20, 2, 1, "_CPPv4NK3avx7UInt256orERK7UInt256", "avx::UInt256::operator|"], [20, 3, 1, "_CPPv4NK3avx7UInt256orEKj", "avx::UInt256::operator|::b"], [20, 3, 1, "_CPPv4NK3avx7UInt256orERK7UInt256", "avx::UInt256::operator|::b"], [20, 2, 1, "_CPPv4N3avx7UInt256oREKj", "avx::UInt256::operator|="], [20, 2, 1, "_CPPv4N3avx7UInt256oRERK7UInt256", "avx::UInt256::operator|="], [20, 3, 1, "_CPPv4N3avx7UInt256oREKj", "avx::UInt256::operator|=::b"], [20, 3, 1, "_CPPv4N3avx7UInt256oRERK7UInt256", "avx::UInt256::operator|=::b"], [20, 2, 1, "_CPPv4NK3avx7UInt256coEv", "avx::UInt256::operator~"], [20, 2, 1, "_CPPv4NK3avx7UInt2564saveERNSt5arrayIjXL8EEEE", "avx::UInt256::save"], [20, 3, 1, "_CPPv4NK3avx7UInt2564saveERNSt5arrayIjXL8EEEE", "avx::UInt256::save::dest"], [20, 2, 1, "_CPPv4N3avx7UInt2563setE7__m256i", "avx::UInt256::set"], [20, 3, 1, "_CPPv4N3avx7UInt2563setE7__m256i", "avx::UInt256::set::val"], [20, 4, 1, "_CPPv4N3avx7UInt2564sizeE", "avx::UInt256::size"], [20, 0, 1, "_CPPv4N3avx7UInt25610storedTypeE", "avx::UInt256::storedType"], [20, 2, 1, "_CPPv4NK3avx7UInt2563strEv", "avx::UInt256::str"], [22, 1, 1, "_CPPv4N3avx8ULong256E", "avx::ULong256"], [22, 2, 1, "_CPPv4N3avx8ULong2568ULong256E7__m256i", "avx::ULong256::ULong256"], [22, 2, 1, "_CPPv4N3avx8ULong2568ULong256ENSt16initializer_listIyEE", "avx::ULong256::ULong256"], [22, 2, 1, "_CPPv4N3avx8ULong2568ULong256EPKy", "avx::ULong256::ULong256"], [22, 2, 1, "_CPPv4N3avx8ULong2568ULong256ERK8ULong256", "avx::ULong256::ULong256"], [22, 2, 1, "_CPPv4N3avx8ULong2568ULong256ERKNSt5arrayIhXL4EEEE", "avx::ULong256::ULong256"], [22, 2, 1, "_CPPv4N3avx8ULong2568ULong256ERKNSt5arrayIjXL4EEEE", "avx::ULong256::ULong256"], [22, 2, 1, "_CPPv4N3avx8ULong2568ULong256ERKNSt5arrayItXL4EEEE", "avx::ULong256::ULong256"], [22, 2, 1, "_CPPv4N3avx8ULong2568ULong256ERKNSt5arrayIyXL4EEEE", "avx::ULong256::ULong256"], [22, 2, 1, "_CPPv4N3avx8ULong2568ULong256ERKy", "avx::ULong256::ULong256"], [22, 2, 1, "_CPPv4N3avx8ULong2568ULong256Ev", "avx::ULong256::ULong256"], [22, 3, 1, "_CPPv4N3avx8ULong2568ULong256E7__m256i", "avx::ULong256::ULong256::init"], [22, 3, 1, "_CPPv4N3avx8ULong2568ULong256ENSt16initializer_listIyEE", "avx::ULong256::ULong256::init"], [22, 3, 1, "_CPPv4N3avx8ULong2568ULong256EPKy", "avx::ULong256::ULong256::init"], [22, 3, 1, "_CPPv4N3avx8ULong2568ULong256ERK8ULong256", "avx::ULong256::ULong256::init"], [22, 3, 1, "_CPPv4N3avx8ULong2568ULong256ERKNSt5arrayIhXL4EEEE", "avx::ULong256::ULong256::init"], [22, 3, 1, "_CPPv4N3avx8ULong2568ULong256ERKNSt5arrayIjXL4EEEE", "avx::ULong256::ULong256::init"], [22, 3, 1, "_CPPv4N3avx8ULong2568ULong256ERKNSt5arrayItXL4EEEE", "avx::ULong256::ULong256::init"], [22, 3, 1, "_CPPv4N3avx8ULong2568ULong256ERKNSt5arrayIyXL4EEEE", "avx::ULong256::ULong256::init"], [22, 3, 1, "_CPPv4N3avx8ULong2568ULong256ERKy", "avx::ULong256::ULong256::init"], [22, 2, 1, "_CPPv4NK3avx8ULong2563getEv", "avx::ULong256::get"], [22, 2, 1, "_CPPv4NK3avx8ULong256neEKy", "avx::ULong256::operator!="], [22, 2, 1, "_CPPv4NK3avx8ULong256neERK8ULong256", "avx::ULong256::operator!="], [22, 3, 1, "_CPPv4NK3avx8ULong256neEKy", "avx::ULong256::operator!=::b"], [22, 3, 1, "_CPPv4NK3avx8ULong256neERK8ULong256", "avx::ULong256::operator!=::bV"], [22, 2, 1, "_CPPv4NK3avx8ULong256rmERK8ULong256", "avx::ULong256::operator%"], [22, 2, 1, "_CPPv4NK3avx8ULong256rmERKy", "avx::ULong256::operator%"], [22, 3, 1, "_CPPv4NK3avx8ULong256rmERKy", "avx::ULong256::operator%::b"], [22, 3, 1, "_CPPv4NK3avx8ULong256rmERK8ULong256", "avx::ULong256::operator%::bV"], [22, 2, 1, "_CPPv4N3avx8ULong256rMERK8ULong256", "avx::ULong256::operator%="], [22, 2, 1, "_CPPv4N3avx8ULong256rMERKy", "avx::ULong256::operator%="], [22, 3, 1, "_CPPv4N3avx8ULong256rMERKy", "avx::ULong256::operator%=::b"], [22, 3, 1, "_CPPv4N3avx8ULong256rMERK8ULong256", "avx::ULong256::operator%=::bV"], [22, 2, 1, "_CPPv4NK3avx8ULong256anERK8ULong256", "avx::ULong256::operator&amp;"], [22, 2, 1, "_CPPv4NK3avx8ULong256anERKy", "avx::ULong256::operator&amp;"], [22, 3, 1, "_CPPv4NK3avx8ULong256anERKy", "avx::ULong256::operator&amp;::b"], [22, 3, 1, "_CPPv4NK3avx8ULong256anERK8ULong256", "avx::ULong256::operator&amp;::bV"], [22, 2, 1, "_CPPv4N3avx8ULong256aNERK8ULong256", "avx::ULong256::operator&amp;="], [22, 2, 1, "_CPPv4N3avx8ULong256aNERKy", "avx::ULong256::operator&amp;="], [22, 3, 1, "_CPPv4N3avx8ULong256aNERKy", "avx::ULong256::operator&amp;=::b"], [22, 3, 1, "_CPPv4N3avx8ULong256aNERK8ULong256", "avx::ULong256::operator&amp;=::bV"], [22, 2, 1, "_CPPv4NK3avx8ULong256mlERK8ULong256", "avx::ULong256::operator*"], [22, 2, 1, "_CPPv4NK3avx8ULong256mlERKy", "avx::ULong256::operator*"], [22, 3, 1, "_CPPv4NK3avx8ULong256mlERKy", "avx::ULong256::operator*::b"], [22, 3, 1, "_CPPv4NK3avx8ULong256mlERK8ULong256", "avx::ULong256::operator*::bV"], [22, 2, 1, "_CPPv4N3avx8ULong256mLERK8ULong256", "avx::ULong256::operator*="], [22, 2, 1, "_CPPv4N3avx8ULong256mLERKy", "avx::ULong256::operator*="], [22, 3, 1, "_CPPv4N3avx8ULong256mLERKy", "avx::ULong256::operator*=::b"], [22, 3, 1, "_CPPv4N3avx8ULong256mLERK8ULong256", "avx::ULong256::operator*=::bV"], [22, 2, 1, "_CPPv4NK3avx8ULong256plERK8ULong256", "avx::ULong256::operator+"], [22, 2, 1, "_CPPv4NK3avx8ULong256plERKy", "avx::ULong256::operator+"], [22, 3, 1, "_CPPv4NK3avx8ULong256plERKy", "avx::ULong256::operator+::b"], [22, 3, 1, "_CPPv4NK3avx8ULong256plERK8ULong256", "avx::ULong256::operator+::bV"], [22, 2, 1, "_CPPv4N3avx8ULong256pLERK8ULong256", "avx::ULong256::operator+="], [22, 2, 1, "_CPPv4N3avx8ULong256pLERKy", "avx::ULong256::operator+="], [22, 3, 1, "_CPPv4N3avx8ULong256pLERKy", "avx::ULong256::operator+=::b"], [22, 3, 1, "_CPPv4N3avx8ULong256pLERK8ULong256", "avx::ULong256::operator+=::bV"], [22, 2, 1, "_CPPv4NK3avx8ULong256miERK8ULong256", "avx::ULong256::operator-"], [22, 2, 1, "_CPPv4NK3avx8ULong256miERKy", "avx::ULong256::operator-"], [22, 3, 1, "_CPPv4NK3avx8ULong256miERKy", "avx::ULong256::operator-::b"], [22, 3, 1, "_CPPv4NK3avx8ULong256miERK8ULong256", "avx::ULong256::operator-::bV"], [22, 2, 1, "_CPPv4N3avx8ULong256mIERK8ULong256", "avx::ULong256::operator-="], [22, 2, 1, "_CPPv4N3avx8ULong256mIERKy", "avx::ULong256::operator-="], [22, 3, 1, "_CPPv4N3avx8ULong256mIERKy", "avx::ULong256::operator-=::b"], [22, 3, 1, "_CPPv4N3avx8ULong256mIERK8ULong256", "avx::ULong256::operator-=::bV"], [22, 2, 1, "_CPPv4NK3avx8ULong256dvERK8ULong256", "avx::ULong256::operator/"], [22, 2, 1, "_CPPv4NK3avx8ULong256dvERKy", "avx::ULong256::operator/"], [22, 3, 1, "_CPPv4NK3avx8ULong256dvERKy", "avx::ULong256::operator/::b"], [22, 3, 1, "_CPPv4NK3avx8ULong256dvERK8ULong256", "avx::ULong256::operator/::bV"], [22, 2, 1, "_CPPv4N3avx8ULong256dVERK8ULong256", "avx::ULong256::operator/="], [22, 2, 1, "_CPPv4N3avx8ULong256dVERKy", "avx::ULong256::operator/="], [22, 3, 1, "_CPPv4N3avx8ULong256dVERKy", "avx::ULong256::operator/=::b"], [22, 3, 1, "_CPPv4N3avx8ULong256dVERK8ULong256", "avx::ULong256::operator/=::bV"], [22, 2, 1, "_CPPv4NK3avx8ULong256lsEKj", "avx::ULong256::operator&lt;&lt;"], [22, 2, 1, "_CPPv4NK3avx8ULong256lsERK8ULong256", "avx::ULong256::operator&lt;&lt;"], [22, 3, 1, "_CPPv4NK3avx8ULong256lsEKj", "avx::ULong256::operator&lt;&lt;::b"], [22, 3, 1, "_CPPv4NK3avx8ULong256lsERK8ULong256", "avx::ULong256::operator&lt;&lt;::bV"], [22, 2, 1, "_CPPv4N3avx8ULong256lSEKj", "avx::ULong256::operator&lt;&lt;="], [22, 2, 1, "_CPPv4N3avx8ULong256lSERK8ULong256", "avx::ULong256::operator&lt;&lt;="], [22, 3, 1, "_CPPv4N3avx8ULong256lSEKj", "avx::ULong256::operator&lt;&lt;=::b"], [22, 3, 1, "_CPPv4N3avx8ULong256lSERK8ULong256", "avx::ULong256::operator&lt;&lt;=::bV"], [22, 2, 1, "_CPPv4NK3avx8ULong256eqEKy", "avx::ULong256::operator=="], [22, 2, 1, "_CPPv4NK3avx8ULong256eqERK8ULong256", "avx::ULong256::operator=="], [22, 3, 1, "_CPPv4NK3avx8ULong256eqEKy", "avx::ULong256::operator==::b"], [22, 3, 1, "_CPPv4NK3avx8ULong256eqERK8ULong256", "avx::ULong256::operator==::bV"], [22, 2, 1, "_CPPv4NK3avx8ULong256rsEKj", "avx::ULong256::operator&gt;&gt;"], [22, 2, 1, "_CPPv4NK3avx8ULong256rsERK8ULong256", "avx::ULong256::operator&gt;&gt;"], [22, 3, 1, "_CPPv4NK3avx8ULong256rsEKj", "avx::ULong256::operator&gt;&gt;::b"], [22, 3, 1, "_CPPv4NK3avx8ULong256rsERK8ULong256", "avx::ULong256::operator&gt;&gt;::bV"], [22, 2, 1, "_CPPv4N3avx8ULong256rSEKj", "avx::ULong256::operator&gt;&gt;="], [22, 2, 1, "_CPPv4N3avx8ULong256rSERK8ULong256", "avx::ULong256::operator&gt;&gt;="], [22, 3, 1, "_CPPv4N3avx8ULong256rSEKj", "avx::ULong256::operator&gt;&gt;=::b"], [22, 3, 1, "_CPPv4N3avx8ULong256rSERK8ULong256", "avx::ULong256::operator&gt;&gt;=::bV"], [22, 2, 1, "_CPPv4NK3avx8ULong256ixEj", "avx::ULong256::operator[]"], [22, 3, 1, "_CPPv4NK3avx8ULong256ixEj", "avx::ULong256::operator[]::index"], [22, 2, 1, "_CPPv4NK3avx8ULong256eoERK8ULong256", "avx::ULong256::operator^"], [22, 2, 1, "_CPPv4NK3avx8ULong256eoERKy", "avx::ULong256::operator^"], [22, 3, 1, "_CPPv4NK3avx8ULong256eoERKy", "avx::ULong256::operator^::b"], [22, 3, 1, "_CPPv4NK3avx8ULong256eoERK8ULong256", "avx::ULong256::operator^::bV"], [22, 2, 1, "_CPPv4N3avx8ULong256eOERK8ULong256", "avx::ULong256::operator^="], [22, 2, 1, "_CPPv4N3avx8ULong256eOERKy", "avx::ULong256::operator^="], [22, 3, 1, "_CPPv4N3avx8ULong256eOERKy", "avx::ULong256::operator^=::b"], [22, 3, 1, "_CPPv4N3avx8ULong256eOERK8ULong256", "avx::ULong256::operator^=::bV"], [22, 2, 1, "_CPPv4NK3avx8ULong256orERK8ULong256", "avx::ULong256::operator|"], [22, 2, 1, "_CPPv4NK3avx8ULong256orERKy", "avx::ULong256::operator|"], [22, 3, 1, "_CPPv4NK3avx8ULong256orERKy", "avx::ULong256::operator|::b"], [22, 3, 1, "_CPPv4NK3avx8ULong256orERK8ULong256", "avx::ULong256::operator|::bV"], [22, 2, 1, "_CPPv4N3avx8ULong256oRERK8ULong256", "avx::ULong256::operator|="], [22, 2, 1, "_CPPv4N3avx8ULong256oRERKy", "avx::ULong256::operator|="], [22, 3, 1, "_CPPv4N3avx8ULong256oRERKy", "avx::ULong256::operator|=::b"], [22, 3, 1, "_CPPv4N3avx8ULong256oRERK8ULong256", "avx::ULong256::operator|=::bV"], [22, 2, 1, "_CPPv4NK3avx8ULong256coEv", "avx::ULong256::operator~"], [22, 2, 1, "_CPPv4NK3avx8ULong2564saveERNSt5arrayIyXL4EEEE", "avx::ULong256::save"], [22, 3, 1, "_CPPv4NK3avx8ULong2564saveERNSt5arrayIyXL4EEEE", "avx::ULong256::save::dest"], [22, 2, 1, "_CPPv4N3avx8ULong2563setE7__m256i", "avx::ULong256::set"], [22, 3, 1, "_CPPv4N3avx8ULong2563setE7__m256i", "avx::ULong256::set::val"], [22, 4, 1, "_CPPv4N3avx8ULong2564sizeE", "avx::ULong256::size"], [22, 0, 1, "_CPPv4N3avx8ULong25610storedTypeE", "avx::ULong256::storedType"], [22, 2, 1, "_CPPv4NK3avx8ULong2563strEv", "avx::ULong256::str"], [24, 1, 1, "_CPPv4N3avx9UShort256E", "avx::UShort256"], [24, 2, 1, "_CPPv4N3avx9UShort2569UShort256EKt", "avx::UShort256::UShort256"], [24, 2, 1, "_CPPv4N3avx9UShort2569UShort256ENSt16initializer_listItEE", "avx::UShort256::UShort256"], [24, 2, 1, "_CPPv4N3avx9UShort2569UShort256EPKt", "avx::UShort256::UShort256"], [24, 2, 1, "_CPPv4N3avx9UShort2569UShort256ERK7__m256i", "avx::UShort256::UShort256"], [24, 2, 1, "_CPPv4N3avx9UShort2569UShort256ERK9UShort256", "avx::UShort256::UShort256"], [24, 2, 1, "_CPPv4N3avx9UShort2569UShort256ERKNSt5arrayItXL16EEEE", "avx::UShort256::UShort256"], [24, 2, 1, "_CPPv4N3avx9UShort2569UShort256Ev", "avx::UShort256::UShort256"], [24, 3, 1, "_CPPv4N3avx9UShort2569UShort256EPKt", "avx::UShort256::UShort256::addr"], [24, 3, 1, "_CPPv4N3avx9UShort2569UShort256EKt", "avx::UShort256::UShort256::b"], [24, 3, 1, "_CPPv4N3avx9UShort2569UShort256ENSt16initializer_listItEE", "avx::UShort256::UShort256::init"], [24, 3, 1, "_CPPv4N3avx9UShort2569UShort256ERK7__m256i", "avx::UShort256::UShort256::init"], [24, 3, 1, "_CPPv4N3avx9UShort2569UShort256ERK9UShort256", "avx::UShort256::UShort256::init"], [24, 3, 1, "_CPPv4N3avx9UShort2569UShort256ERKNSt5arrayItXL16EEEE", "avx::UShort256::UShort256::init"], [24, 2, 1, "_CPPv4NK3avx9UShort2563getEv", "avx::UShort256::get"], [24, 2, 1, "_CPPv4NK3avx9UShort256neERK9UShort256", "avx::UShort256::operator!="], [24, 2, 1, "_CPPv4NK3avx9UShort256neERKt", "avx::UShort256::operator!="], [24, 3, 1, "_CPPv4NK3avx9UShort256neERKt", "avx::UShort256::operator!=::b"], [24, 3, 1, "_CPPv4NK3avx9UShort256neERK9UShort256", "avx::UShort256::operator!=::bV"], [24, 2, 1, "_CPPv4N3avx9UShort256rmERKt", "avx::UShort256::operator%"], [24, 2, 1, "_CPPv4NK3avx9UShort256rmERK9UShort256", "avx::UShort256::operator%"], [24, 3, 1, "_CPPv4N3avx9UShort256rmERKt", "avx::UShort256::operator%::b"], [24, 3, 1, "_CPPv4NK3avx9UShort256rmERK9UShort256", "avx::UShort256::operator%::bV"], [24, 2, 1, "_CPPv4N3avx9UShort256rMERK9UShort256", "avx::UShort256::operator%="], [24, 2, 1, "_CPPv4N3avx9UShort256rMERKt", "avx::UShort256::operator%="], [24, 3, 1, "_CPPv4N3avx9UShort256rMERKt", "avx::UShort256::operator%=::b"], [24, 3, 1, "_CPPv4N3avx9UShort256rMERK9UShort256", "avx::UShort256::operator%=::bV"], [24, 2, 1, "_CPPv4NK3avx9UShort256anERK9UShort256", "avx::UShort256::operator&amp;"], [24, 2, 1, "_CPPv4NK3avx9UShort256anERKt", "avx::UShort256::operator&amp;"], [24, 3, 1, "_CPPv4NK3avx9UShort256anERKt", "avx::UShort256::operator&amp;::b"], [24, 3, 1, "_CPPv4NK3avx9UShort256anERK9UShort256", "avx::UShort256::operator&amp;::bV"], [24, 2, 1, "_CPPv4N3avx9UShort256aNERK9UShort256", "avx::UShort256::operator&amp;="], [24, 2, 1, "_CPPv4N3avx9UShort256aNERKt", "avx::UShort256::operator&amp;="], [24, 3, 1, "_CPPv4N3avx9UShort256aNERKt", "avx::UShort256::operator&amp;=::b"], [24, 3, 1, "_CPPv4N3avx9UShort256aNERK9UShort256", "avx::UShort256::operator&amp;=::bV"], [24, 2, 1, "_CPPv4NK3avx9UShort256mlERK9UShort256", "avx::UShort256::operator*"], [24, 2, 1, "_CPPv4NK3avx9UShort256mlERKt", "avx::UShort256::operator*"], [24, 3, 1, "_CPPv4NK3avx9UShort256mlERKt", "avx::UShort256::operator*::b"], [24, 3, 1, "_CPPv4NK3avx9UShort256mlERK9UShort256", "avx::UShort256::operator*::bV"], [24, 2, 1, "_CPPv4N3avx9UShort256mLERK9UShort256", "avx::UShort256::operator*="], [24, 2, 1, "_CPPv4N3avx9UShort256mLERKt", "avx::UShort256::operator*="], [24, 3, 1, "_CPPv4N3avx9UShort256mLERKt", "avx::UShort256::operator*=::b"], [24, 3, 1, "_CPPv4N3avx9UShort256mLERK9UShort256", "avx::UShort256::operator*=::bV"], [24, 2, 1, "_CPPv4NK3avx9UShort256plERK9UShort256", "avx::UShort256::operator+"], [24, 2, 1, "_CPPv4NK3avx9UShort256plERKt", "avx::UShort256::operator+"], [24, 3, 1, "_CPPv4NK3avx9UShort256plERKt", "avx::UShort256::operator+::b"], [24, 3, 1, "_CPPv4NK3avx9UShort256plERK9UShort256", "avx::UShort256::operator+::bV"], [24, 2, 1, "_CPPv4N3avx9UShort256pLERK9UShort256", "avx::UShort256::operator+="], [24, 2, 1, "_CPPv4N3avx9UShort256pLERKt", "avx::UShort256::operator+="], [24, 3, 1, "_CPPv4N3avx9UShort256pLERKt", "avx::UShort256::operator+=::b"], [24, 3, 1, "_CPPv4N3avx9UShort256pLERK9UShort256", "avx::UShort256::operator+=::bV"], [24, 2, 1, "_CPPv4NK3avx9UShort256miERK9UShort256", "avx::UShort256::operator-"], [24, 2, 1, "_CPPv4NK3avx9UShort256miERKt", "avx::UShort256::operator-"], [24, 3, 1, "_CPPv4NK3avx9UShort256miERKt", "avx::UShort256::operator-::b"], [24, 3, 1, "_CPPv4NK3avx9UShort256miERK9UShort256", "avx::UShort256::operator-::bV"], [24, 2, 1, "_CPPv4N3avx9UShort256mIERK9UShort256", "avx::UShort256::operator-="], [24, 2, 1, "_CPPv4N3avx9UShort256mIERKt", "avx::UShort256::operator-="], [24, 3, 1, "_CPPv4N3avx9UShort256mIERKt", "avx::UShort256::operator-=::b"], [24, 3, 1, "_CPPv4N3avx9UShort256mIERK9UShort256", "avx::UShort256::operator-=::bV"], [24, 2, 1, "_CPPv4NK3avx9UShort256dvERK9UShort256", "avx::UShort256::operator/"], [24, 2, 1, "_CPPv4NK3avx9UShort256dvERKt", "avx::UShort256::operator/"], [24, 3, 1, "_CPPv4NK3avx9UShort256dvERKt", "avx::UShort256::operator/::b"], [24, 3, 1, "_CPPv4NK3avx9UShort256dvERK9UShort256", "avx::UShort256::operator/::bV"], [24, 2, 1, "_CPPv4N3avx9UShort256dVERK9UShort256", "avx::UShort256::operator/="], [24, 2, 1, "_CPPv4N3avx9UShort256dVERKt", "avx::UShort256::operator/="], [24, 3, 1, "_CPPv4N3avx9UShort256dVERKt", "avx::UShort256::operator/=::b"], [24, 3, 1, "_CPPv4N3avx9UShort256dVERK9UShort256", "avx::UShort256::operator/=::bV"], [24, 2, 1, "_CPPv4NK3avx9UShort256lsERK9UShort256", "avx::UShort256::operator&lt;&lt;"], [24, 2, 1, "_CPPv4NK3avx9UShort256lsERKj", "avx::UShort256::operator&lt;&lt;"], [24, 3, 1, "_CPPv4NK3avx9UShort256lsERK9UShort256", "avx::UShort256::operator&lt;&lt;::bV"], [24, 3, 1, "_CPPv4NK3avx9UShort256lsERKj", "avx::UShort256::operator&lt;&lt;::shift"], [24, 2, 1, "_CPPv4N3avx9UShort256lSERK9UShort256", "avx::UShort256::operator&lt;&lt;="], [24, 2, 1, "_CPPv4N3avx9UShort256lSERKj", "avx::UShort256::operator&lt;&lt;="], [24, 3, 1, "_CPPv4N3avx9UShort256lSERK9UShort256", "avx::UShort256::operator&lt;&lt;=::bV"], [24, 3, 1, "_CPPv4N3avx9UShort256lSERKj", "avx::UShort256::operator&lt;&lt;=::shift"], [24, 2, 1, "_CPPv4NK3avx9UShort256eqERK9UShort256", "avx::UShort256::operator=="], [24, 2, 1, "_CPPv4NK3avx9UShort256eqERKt", "avx::UShort256::operator=="], [24, 3, 1, "_CPPv4NK3avx9UShort256eqERKt", "avx::UShort256::operator==::b"], [24, 3, 1, "_CPPv4NK3avx9UShort256eqERK9UShort256", "avx::UShort256::operator==::bV"], [24, 2, 1, "_CPPv4NK3avx9UShort256rsERK9UShort256", "avx::UShort256::operator&gt;&gt;"], [24, 2, 1, "_CPPv4NK3avx9UShort256rsERKj", "avx::UShort256::operator&gt;&gt;"], [24, 3, 1, "_CPPv4NK3avx9UShort256rsERK9UShort256", "avx::UShort256::operator&gt;&gt;::bV"], [24, 3, 1, "_CPPv4NK3avx9UShort256rsERKj", "avx::UShort256::operator&gt;&gt;::shift"], [24, 2, 1, "_CPPv4N3avx9UShort256rSERK9UShort256", "avx::UShort256::operator&gt;&gt;="], [24, 2, 1, "_CPPv4N3avx9UShort256rSERKj", "avx::UShort256::operator&gt;&gt;="], [24, 3, 1, "_CPPv4N3avx9UShort256rSERK9UShort256", "avx::UShort256::operator&gt;&gt;=::bV"], [24, 3, 1, "_CPPv4N3avx9UShort256rSERKj", "avx::UShort256::operator&gt;&gt;=::shift"], [24, 2, 1, "_CPPv4NK3avx9UShort256ixERKj", "avx::UShort256::operator[]"], [24, 3, 1, "_CPPv4NK3avx9UShort256ixERKj", "avx::UShort256::operator[]::index"], [24, 2, 1, "_CPPv4NK3avx9UShort256eoERK9UShort256", "avx::UShort256::operator^"], [24, 2, 1, "_CPPv4NK3avx9UShort256eoERKt", "avx::UShort256::operator^"], [24, 3, 1, "_CPPv4NK3avx9UShort256eoERKt", "avx::UShort256::operator^::b"], [24, 3, 1, "_CPPv4NK3avx9UShort256eoERK9UShort256", "avx::UShort256::operator^::bV"], [24, 2, 1, "_CPPv4N3avx9UShort256eOERK9UShort256", "avx::UShort256::operator^="], [24, 2, 1, "_CPPv4N3avx9UShort256eOERKt", "avx::UShort256::operator^="], [24, 3, 1, "_CPPv4N3avx9UShort256eOERKt", "avx::UShort256::operator^=::b"], [24, 3, 1, "_CPPv4N3avx9UShort256eOERK9UShort256", "avx::UShort256::operator^=::bV"], [24, 2, 1, "_CPPv4NK3avx9UShort256orERK9UShort256", "avx::UShort256::operator|"], [24, 2, 1, "_CPPv4NK3avx9UShort256orERKt", "avx::UShort256::operator|"], [24, 3, 1, "_CPPv4NK3avx9UShort256orERKt", "avx::UShort256::operator|::b"], [24, 3, 1, "_CPPv4NK3avx9UShort256orERK9UShort256", "avx::UShort256::operator|::bV"], [24, 2, 1, "_CPPv4N3avx9UShort256oRERK9UShort256", "avx::UShort256::operator|="], [24, 2, 1, "_CPPv4N3avx9UShort256oRERKt", "avx::UShort256::operator|="], [24, 3, 1, "_CPPv4N3avx9UShort256oRERKt", "avx::UShort256::operator|=::b"], [24, 3, 1, "_CPPv4N3avx9UShort256oRERK9UShort256", "avx::UShort256::operator|=::bV"], [24, 2, 1, "_CPPv4NK3avx9UShort256coEv", "avx::UShort256::operator~"], [24, 2, 1, "_CPPv4NK3avx9UShort2564saveERNSt5arrayItXL16EEEE", "avx::UShort256::save"], [24, 3, 1, "_CPPv4NK3avx9UShort2564saveERNSt5arrayItXL16EEEE", "avx::UShort256::save::dest"], [24, 2, 1, "_CPPv4N3avx9UShort2563setEK7__m256i", "avx::UShort256::set"], [24, 3, 1, "_CPPv4N3avx9UShort2563setEK7__m256i", "avx::UShort256::set::value"], [24, 4, 1, "_CPPv4N3avx9UShort2564sizeE", "avx::UShort256::size"], [24, 0, 1, "_CPPv4N3avx9UShort25610storedTypeE", "avx::UShort256::storedType"], [24, 2, 1, "_CPPv4NK3avx9UShort2563strEv", "avx::UShort256::str"], [13, 2, 1, "_CPPv4N3avx3absERK6Int256", "avx::abs"], [13, 2, 1, "_CPPv4N3avx3absERK7Char256", "avx::abs"], [13, 2, 1, "_CPPv4N3avx3absERK7Long256", "avx::abs"], [13, 2, 1, "_CPPv4N3avx3absERK8Float256", "avx::abs"], [13, 2, 1, "_CPPv4N3avx3absERK8Short256", "avx::abs"], [13, 2, 1, "_CPPv4N3avx3absERK9Double256", "avx::abs"], [13, 3, 1, "_CPPv4N3avx3absERK6Int256", "avx::abs::bV"], [13, 3, 1, "_CPPv4N3avx3absERK7Char256", "avx::abs::bV"], [13, 3, 1, "_CPPv4N3avx3absERK7Long256", "avx::abs::bV"], [13, 3, 1, "_CPPv4N3avx3absERK8Float256", "avx::abs::bV"], [13, 3, 1, "_CPPv4N3avx3absERK8Short256", "avx::abs::bV"], [13, 3, 1, "_CPPv4N3avx3absERK9Double256", "avx::abs::bV"], [13, 2, 1, "_CPPv4N3avx10accumulateERKNSt6vectorI7int64_tEE7int64_t", "avx::accumulate"], [13, 2, 1, "_CPPv4N3avx10accumulateERKNSt6vectorIdEEd", "avx::accumulate"], [13, 2, 1, "_CPPv4N3avx10accumulateERKNSt6vectorIfEEf", "avx::accumulate"], [13, 2, 1, "_CPPv4N3avx10accumulateERKNSt6vectorIiEEi", "avx::accumulate"], [13, 3, 1, "_CPPv4N3avx10accumulateERKNSt6vectorI7int64_tEE7int64_t", "avx::accumulate::data"], [13, 3, 1, "_CPPv4N3avx10accumulateERKNSt6vectorIdEEd", "avx::accumulate::data"], [13, 3, 1, "_CPPv4N3avx10accumulateERKNSt6vectorIfEEf", "avx::accumulate::data"], [13, 3, 1, "_CPPv4N3avx10accumulateERKNSt6vectorIiEEi", "avx::accumulate::data"], [13, 3, 1, "_CPPv4N3avx10accumulateERKNSt6vectorI7int64_tEE7int64_t", "avx::accumulate::initVal"], [13, 3, 1, "_CPPv4N3avx10accumulateERKNSt6vectorIdEEd", "avx::accumulate::initVal"], [13, 3, 1, "_CPPv4N3avx10accumulateERKNSt6vectorIfEEf", "avx::accumulate::initVal"], [13, 3, 1, "_CPPv4N3avx10accumulateERKNSt6vectorIiEEi", "avx::accumulate::initVal"], [3, 0, 1, "_CPPv4N3avx9constantsE", "avx::constants"], [3, 4, 1, "_CPPv4N3avx9constants14DOUBLE_NO_SIGNE", "avx::constants::DOUBLE_NO_SIGN"], [3, 4, 1, "_CPPv4N3avx9constants10DOUBLE_ONEE", "avx::constants::DOUBLE_ONE"], [3, 4, 1, "_CPPv4N3avx9constants17EPI16_CRATE_EPI32E", "avx::constants::EPI16_CRATE_EPI32"], [3, 4, 1, "_CPPv4N3avx9constants25EPI16_CRATE_EPI32_INVERSEE", "avx::constants::EPI16_CRATE_EPI32_INVERSE"], [3, 4, 1, "_CPPv4N3avx9constants9EPI16_ONEE", "avx::constants::EPI16_ONE"], [3, 4, 1, "_CPPv4N3avx9constants17EPI32_CRATE_EPI64E", "avx::constants::EPI32_CRATE_EPI64"], [3, 4, 1, "_CPPv4N3avx9constants9EPI32_ONEE", "avx::constants::EPI32_ONE"], [3, 4, 1, "_CPPv4N3avx9constants10EPI32_SIGNE", "avx::constants::EPI32_SIGN"], [3, 4, 1, "_CPPv4N3avx9constants13EPI32_SLOWESTE", "avx::constants::EPI32_SLOWEST"], [3, 4, 1, "_CPPv4N3avx9constants9EPI64_ONEE", "avx::constants::EPI64_ONE"], [3, 4, 1, "_CPPv4N3avx9constants10EPI64_SIGNE", "avx::constants::EPI64_SIGN"], [3, 4, 1, "_CPPv4N3avx9constants16EPI8_CRATE_EPI16E", "avx::constants::EPI8_CRATE_EPI16"], [3, 4, 1, "_CPPv4N3avx9constants24EPI8_CRATE_EPI16_INVERSEE", "avx::constants::EPI8_CRATE_EPI16_INVERSE"], [3, 4, 1, "_CPPv4N3avx9constants16EPI8_CRATE_EPI32E", "avx::constants::EPI8_CRATE_EPI32"], [3, 4, 1, "_CPPv4N3avx9constants24EPI8_CRATE_EPI32_SHIFT_IE", "avx::constants::EPI8_CRATE_EPI32_SHIFT_I"], [3, 4, 1, "_CPPv4N3avx9constants25EPI8_CRATE_EPI32_SHIFT_IIE", "avx::constants::EPI8_CRATE_EPI32_SHIFT_II"], [3, 4, 1, "_CPPv4N3avx9constants26EPI8_CRATE_EPI32_SHIFT_IIIE", "avx::constants::EPI8_CRATE_EPI32_SHIFT_III"], [3, 4, 1, "_CPPv4N3avx9constants8EPI8_ONEE", "avx::constants::EPI8_ONE"], [3, 4, 1, "_CPPv4N3avx9constants11FLOAT_LIMITE", "avx::constants::FLOAT_LIMIT"], [3, 4, 1, "_CPPv4N3avx9constants13FLOAT_NO_SIGNE", "avx::constants::FLOAT_NO_SIGN"], [3, 4, 1, "_CPPv4N3avx9constants9FLOAT_ONEE", "avx::constants::FLOAT_ONE"], [3, 4, 1, "_CPPv4N3avx9constants15INT2FLOAT_LIMITE", "avx::constants::INT2FLOAT_LIMIT"], [3, 4, 1, "_CPPv4N3avx9constants4ONESE", "avx::constants::ONES"], [13, 2, 1, "_CPPv4N3avx3cosERK8Float256", "avx::cos"], [13, 2, 1, "_CPPv4N3avx3cosERK9Double256", "avx::cos"], [13, 3, 1, "_CPPv4N3avx3cosERK8Float256", "avx::cos::bV"], [13, 3, 1, "_CPPv4N3avx3cosERK9Double256", "avx::cos::bV"], [13, 2, 1, "_CPPv4N3avx5cosecERK8Float256", "avx::cosec"], [13, 2, 1, "_CPPv4N3avx5cosecERK9Double256", "avx::cosec"], [13, 3, 1, "_CPPv4N3avx5cosecERK8Float256", "avx::cosec::bV"], [13, 3, 1, "_CPPv4N3avx5cosecERK9Double256", "avx::cosec::bV"], [13, 2, 1, "_CPPv4N3avx3ctgERK8Float256", "avx::ctg"], [13, 2, 1, "_CPPv4N3avx3ctgERK9Double256", "avx::ctg"], [13, 3, 1, "_CPPv4N3avx3ctgERK8Float256", "avx::ctg::bV"], [13, 3, 1, "_CPPv4N3avx3ctgERK9Double256", "avx::ctg::bV"], [13, 2, 1, "_CPPv4N3avx3secERK8Float256", "avx::sec"], [13, 2, 1, "_CPPv4N3avx3secERK9Double256", "avx::sec"], [13, 3, 1, "_CPPv4N3avx3secERK8Float256", "avx::sec::bV"], [13, 3, 1, "_CPPv4N3avx3secERK9Double256", "avx::sec::bV"], [13, 2, 1, "_CPPv4N3avx3sinERK8Float256", "avx::sin"], [13, 2, 1, "_CPPv4N3avx3sinERK9Double256", "avx::sin"], [13, 3, 1, "_CPPv4N3avx3sinERK8Float256", "avx::sin::bV"], [13, 3, 1, "_CPPv4N3avx3sinERK9Double256", "avx::sin::bV"], [13, 2, 1, "_CPPv4N3avx3tanERK8Float256", "avx::tan"], [13, 2, 1, "_CPPv4N3avx3tanERK9Double256", "avx::tan"], [13, 3, 1, "_CPPv4N3avx3tanERK8Float256", "avx::tan::bV"], [13, 3, 1, "_CPPv4N3avx3tanERK9Double256", "avx::tan::bV"]]}, "objnames": {"0": ["cpp", "type", "C++ type"], "1": ["cpp", "class", "C++ class"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "member", "C++ member"]}, "objtypes": {"0": "cpp:type", "1": "cpp:class", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:member"}, "terms": {"": [0, 1, 2, 3, 10, 24], "0": [0, 1, 2, 3, 5, 7, 9, 10, 16, 18, 20, 24], "0000": [3, 10], "000000": [5, 7], "00000000ffffffff": 3, "000000ff": 3, "0000ff00": 3, "0000ffff": 3, "0001": 3, "00ff": 3, "00ff0000": 3, "00ff00000": 3, "0f": [3, 7], "0x00000000ffffffff": 3, "0x000000ff": 3, "0x0000ff00": 3, "0x0000ffff": 3, "0x00ff": 3, "0x00ff0000": 3, "0x01": 3, "0x0100": 3, "0x7fff": 3, "0x8000": [3, 10], "0xff": 3, "0xff00": 3, "0xff0000": 3, "0xff000000": 3, "0xffff": 3, "0xffff0000": 3, "0xffffffff": 3, "1": [0, 1, 2, 3, 5, 7, 9, 10], "10": [1, 9], "101": 1, "1024": 9, "105": 1, "109": 1, "11": [1, 9], "111": 1, "112": 1, "114": 1, "115": 1, "117": 1, "12": [1, 9], "128": 14, "13": 9, "14": 1, "147": 10, "15": [9, 16, 24], "16": [0, 1, 14, 16, 24], "16x": [16, 24], "18": 9, "2": [1, 3, 5, 7, 9, 10], "2024": [], "21": 9, "24": [3, 9], "256": [10, 12, 14, 20], "27": 9, "3": [1, 5, 7, 9, 10], "30": 9, "31": [2, 18], "32": [0, 1, 2, 5, 7, 9, 10, 12, 14, 16, 18, 20, 22, 24], "32x": [2, 18], "33": [1, 9], "36": 9, "39": 9, "4": [0, 1, 5, 7, 9, 10, 12, 14, 22], "483": 10, "4x": [5, 12, 22], "5": [1, 2, 7, 9, 10], "512": 14, "6": [1, 7, 9, 10], "64": 0, "648": 10, "7": [1, 7, 9, 10], "76": 1, "8": [0, 1, 7, 9, 10, 14, 20], "8x": [7, 10, 20], "9": [1, 9], "A": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "AND": [2, 5, 7, 10, 18], "And": [], "As": 0, "By": [], "For": [0, 2, 9], "If": [1, 2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "In": [0, 2, 5, 7, 10, 12, 14, 16, 18, 20, 22, 24], "It": [1, 2, 18, 20], "NOT": [2, 10], "No": 1, "Not": 1, "ONES": 3, "OR": 10, "On": 13, "One": 1, "That": 0, "The": [0, 2, 5, 7, 9, 10, 12, 14, 16, 18, 20, 22, 24], "Will": [1, 9], "With": [], "_": [], "__": [], "__invalid__": [], "__m256": [3, 7], "__m256d": [3, 5], "__m256i": [2, 3, 9, 10, 12, 16, 18, 20, 22, 24], "_invalid_": [], "_mm256_add_epi8": 2, "_mm256_castsi256_p": 3, "_mm256_castsi256_pd": 3, "_mm256_lddq_si256": [10, 20], "_mm256_lddqu_si256": 12, "_mm256_loadu_p": 7, "_mm256_set1_epi16": 3, "_mm256_set1_epi32": [3, 20], "_mm256_set1_epi64x": 3, "_mm256_set1_epi8": 3, "_mm256_set1_p": 3, "_mm256_set1_pd": 3, "_mm256_setzero_si256": 20, "ab": 13, "abl": [], "about": 8, "abov": [0, 10], "abstract": 0, "accept": [0, 1, 9], "access": [9, 14, 20], "accumul": 13, "achiev": [], "across": [1, 3, 10, 22], "action": 0, "ad": [0, 2, 9, 13], "add": [1, 2, 10, 22], "addit": 2, "addr": [2, 5, 10, 16, 18, 20, 24], "address": [12, 16, 24], "after": [0, 2], "aka": [3, 10, 12, 22], "alement": [12, 16, 22, 24], "algorithm": 24, "align": [2, 3, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "aligned_alloc": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "all": [0, 1, 2, 3, 7, 9, 10, 12, 13, 16, 22, 24], "alloc": 1, "allow": [0, 14], "almost": 0, "along": 0, "also": [0, 9], "although": 9, "altough": 1, "alwai": 1, "amd": 14, "an": [0, 16, 24], "analog": [16, 24], "ani": [1, 2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "anoth": [1, 2, 7, 9, 10, 12], "apart": 9, "api": 0, "appli": 10, "approach": [], "ar": [0, 1, 2, 7, 9, 10, 12, 14, 16, 22, 24], "architectur": 0, "argc": [1, 9], "argument": [0, 1, 9, 10], "argv": [1, 9], "arithmet": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "arrai": [1, 2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "assembl": 14, "assign": [2, 5, 7, 10, 20], "assum": [1, 9], "attribut": [2, 5, 7, 10, 12, 14, 16, 18, 20, 22, 24], "author": [], "auto": 1, "automat": 0, "av": [2, 5, 7, 9, 10], "avail": [0, 1, 13], "avoid": 0, "avx": 14, "avx2": [0, 1, 10, 13, 14, 24], "avx512": [0, 13, 14], "avx512f": 10, "avxmath": 13, "axmath": [], "b": [1, 2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "basi": 13, "basic": [], "been": [16, 24], "befor": [0, 16, 24], "behav": 14, "behavior": 0, "behaviour": 1, "being": [0, 2, 10, 22], "below": [0, 1, 9, 24], "benefit": 0, "beta": 8, "better": 0, "between": [1, 2, 5, 7, 10, 16, 18, 24], "binari": 1, "bit": [0, 2, 3, 10, 12, 14, 16, 20, 24], "bitwis": [0, 1, 2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "block": 9, "bool": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "boost": 0, "both": [0, 7, 10], "bound": 18, "boundari": [2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "broadcast": 2, "buffer": [0, 1], "build": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "build_use_avx512": [10, 14], "bv": [2, 5, 7, 9, 10, 12, 13, 16, 18, 20, 22, 24], "byte": [0, 1, 2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "c": [0, 1, 2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "calcul": 13, "call": 2, "came": 0, "can": [0, 1, 2, 5, 7, 9, 10, 12, 13, 14, 16, 18, 20, 22, 24], "cannot": 9, "case": 0, "cast": [3, 16, 24], "caus": [0, 9], "cell": [7, 10, 12], "chang": 13, "char": [0, 1, 2, 3, 9, 10, 12, 18, 20, 22], "char256": [0, 8, 13], "charact": [], "check": [0, 1, 9], "chek": 1, "clang": 0, "class": [2, 5, 7, 10, 12, 14, 16, 18, 20, 22, 24], "cmake": [0, 13, 14], "co": 13, "code": [0, 1, 9], "com": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "come": [], "comment": 10, "commit": 0, "compar": [2, 7, 10, 12, 16, 22, 24], "comparison": [5, 7, 10, 12, 16, 20, 22, 24], "compil": [0, 13], "comput": [9, 14], "const": [1, 2, 3, 5, 7, 9, 10, 12, 13, 16, 18, 20, 22, 24], "constant": 8, "constexpr": 14, "constructor": [0, 1, 2, 7, 9, 10, 12, 16, 20, 24], "contain": [0, 1, 2, 3, 7, 9, 10, 12, 13, 16, 18, 20, 24], "content": [1, 2, 9], "contin": 0, "copi": [1, 2, 7, 9, 10, 12, 16, 20, 24], "correct": [2, 5, 7, 10, 16, 18, 24], "correspond": [0, 10, 12, 16, 22, 24], "cosec": 13, "cosin": 13, "cotang": 13, "count": 2, "counterpart": 14, "cout": [1, 2, 9, 18], "cp": 9, "cpp": [2, 5, 7, 10, 12, 14, 16, 18, 20, 22, 24], "cpprefer": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "cpu": [0, 14], "creat": [0, 1, 2, 9], "critic": 14, "ctg": 13, "current": [0, 1, 9], "d": [1, 9], "data": [0, 1, 2, 5, 7, 9, 10, 12, 13, 14, 16, 18, 20, 22, 24], "debug": [0, 2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "debugginh": 9, "decid": 0, "default": [2, 7, 9, 10, 12, 16, 20, 24], "defin": 13, "definit": [], "depend": [], "desir": [2, 5, 7, 9, 10, 16, 18, 24], "dest": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "destin": [2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "detail": [0, 2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "detect": [0, 13], "develop": 0, "differ": [1, 7, 9, 10, 14], "differenti": [], "directli": [0, 1, 2, 18], "disassembli": 10, "divid": 24, "divis": [10, 16, 24], "divisor": [10, 16, 24], "do": [1, 9], "doc": [], "document": [0, 2], "doe": [0, 1, 2, 5, 7, 10, 14, 18], "doesn": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "doubl": [0, 3, 5, 13], "double256": [0, 8, 13], "double_no_sign": 3, "double_on": 3, "doxygenfil": [], "drawback": 0, "driven": [], "due": [9, 24], "dynam": 0, "e": [0, 1, 2, 5, 7, 10], "each": [0, 1, 7, 9, 10, 12, 13, 14, 16, 24], "eas": 0, "easi": 0, "effect": [0, 2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "eg": [5, 7, 10], "eight": [], "element": [2, 5, 7, 9, 10, 12, 13, 14, 16, 18, 20, 22, 24], "en": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "enabl": [0, 10, 14], "ensur": [0, 9, 18], "epi16_crate_epi32": 3, "epi16_crate_epi32_invers": 3, "epi16_on": 3, "epi32_crate_epi64": 3, "epi32_on": 3, "epi32_sign": 3, "epi32_slowest": 3, "epi64_on": 3, "epi64_sign": 3, "epi8_crate_epi16": 3, "epi8_crate_epi16_invers": 3, "epi8_crate_epi32": 3, "epi8_crate_epi32_shift_i": 3, "epi8_crate_epi32_shift_ii": 3, "epi8_crate_epi32_shift_iii": 3, "epi8_on": 3, "equal": [1, 2, 7, 9, 10, 12, 16, 22, 24], "etc": 0, "even": [0, 1, 2, 14], "eventu": [], "exact": 1, "exampl": 0, "except": [0, 16, 18], "exist": [0, 2], "expect": 0, "explicit": [2, 16, 18, 24], "explicitli": [0, 1, 14], "explicittli": [], "extens": 1, "extern": 9, "fals": [2, 7, 10, 12, 16, 22, 24], "fast": 0, "faster": 0, "featur": [], "few": 0, "fewer": [7, 10, 12, 20], "ff00": 3, "ff000000": 3, "ff00000000": 3, "ffff": 3, "ffff0000": 3, "field": [7, 9, 10, 16, 20, 22, 24], "file": [2, 13], "fill": [2, 20, 24], "find": [], "first": [1, 2, 7, 9, 10, 12, 16, 18, 24], "flag": [0, 14], "float": [0, 1, 3, 7, 13, 16, 24], "float256": [0, 8, 13], "float_limit": 3, "float_no_sign": 3, "float_on": 3, "folder": 0, "follow": [0, 2, 3, 9], "format": 2, "found": 0, "friend": [2, 18], "from": [2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "fulli": 0, "function": [0, 2, 5, 7, 10, 12, 13, 16, 18, 20, 22, 24], "further": 14, "futur": 13, "g": [0, 2, 5, 7, 10], "gcc": [0, 10], "geeksforgeek": [], "get": [2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "github": 0, "given": [2, 10], "greater": 1, "guarante": 0, "guid": [], "ha": [0, 2, 5, 7, 10, 12, 14, 16, 18, 20, 22, 24], "hand": 0, "harder": 0, "have": [0, 1, 2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "header": 0, "heavi": [], "held": 2, "hello": 1, "hold": [0, 2, 5, 7, 10, 12, 14, 16, 18, 20, 22, 24], "how": 14, "howev": 1, "hpp": [1, 2, 9, 13], "html": [], "http": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "i": [0, 1, 2, 5, 7, 8, 9, 10, 12, 13, 14, 16, 18, 20, 22, 24], "idea": 0, "ignor": [0, 20], "iherit": 0, "implement": [0, 1, 24], "import": 10, "includ": [1, 9, 14], "independ": 0, "index": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "individu": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "inequ": [2, 10, 12, 16, 22, 24], "inform": 0, "init": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "initi": [2, 7, 10, 12, 13, 16, 18, 20, 24], "initializer_list": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "initl": 20, "initv": 13, "inlin": [0, 2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "input": 0, "insid": [2, 5, 7, 10, 12, 13, 16, 18, 20, 22, 24], "instead": 1, "instruct": [0, 10, 14], "int": [0, 1, 2, 3, 5, 7, 9, 10, 12, 13, 14, 16, 18, 20, 22, 24], "int256": [0, 8, 13], "int2float_limit": 3, "int64_t": [12, 13], "integ": [0, 10, 16, 20, 24], "integr": 0, "intel": 14, "intend": [1, 14], "interfac": [], "intermedi": [1, 2], "intern": [1, 2, 7, 10, 12, 16, 18, 20, 24], "intrins": [], "introduc": 0, "intruct": 14, "intuit": 0, "invalid": 0, "invalid_argu": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "invers": [2, 16, 20, 24], "iostream": [1, 9], "ipsum": 1, "item": [], "iter": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "jach": [], "jakub": [], "just": [1, 20], "larger": [], "last": [], "later": 0, "layer": 0, "learn": 0, "least": [0, 1, 2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "left": [10, 16, 24], "length": 1, "less": [0, 2, 9, 18], "let": 1, "level": 0, "librari": [0, 13, 14], "lift": [], "like": [0, 1], "limit": [2, 3, 24], "linux": 0, "list": [2, 5, 7, 9, 10, 12, 13, 16, 18, 20, 22, 24], "liter": [16, 24], "littl": 0, "load": [0, 1, 2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "locat": 9, "logic": 0, "long": [2, 3, 12, 18, 22], "long256": [0, 8, 13], "longer": 20, "lorem": 1, "low": 0, "lower": [], "lsb": [2, 7, 10], "main": [1, 9], "major": 0, "make": 0, "mandatori": 0, "mani": [0, 14], "manual": 0, "mark": 2, "mask": 3, "match": [1, 2, 10], "math": [0, 8, 14], "math_hpp_": [], "maximum": 2, "mean": 0, "memori": [0, 2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "method": [0, 1, 2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "might": 0, "minim": [10, 12, 20], "minimum": [2, 18], "miss": [2, 9, 18], "mod": 24, "mode": [0, 2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "modern": [0, 14], "modifi": [9, 10, 24], "modulo": [10, 16, 24], "more": [0, 2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "most": [0, 9], "mostli": 14, "msvc": [0, 10, 13], "multipl": 14, "multipli": 9, "must": [2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "my": 0, "n": [1, 9, 10], "n_throw_rel": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "namespac": [0, 3, 13], "nativ": 1, "need": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "negat": [], "never": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "new": [2, 7, 10, 12, 16, 18, 22, 24], "nice": [], "noexcept": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "non": [1, 14], "note": [9, 13, 16, 24], "notic": [], "now": [], "null": [1, 2, 9], "nullptr": [1, 2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "number": [2, 5, 7, 10, 12, 14, 16, 18, 20, 22, 24], "numer": 9, "o": [1, 2, 18], "object": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "obviou": 0, "offer": 1, "one": [0, 1, 2, 7, 14], "onli": [0, 1, 2, 7, 9, 10, 12, 13, 14], "oper": [0, 2, 5, 7, 9, 12, 14, 16, 18, 20, 22, 24], "operand": 10, "optim": [0, 5, 7], "optimis": 0, "option": [0, 1], "order": [3, 20], "org": [], "origin": 0, "ostream": [1, 2, 18], "other": [0, 2, 5, 9, 10, 13, 16, 20, 22, 24], "otherwis": [0, 1, 2, 5, 7, 10, 12, 16, 18, 22, 24], "out": [1, 2, 5, 7, 10], "out_of_rang": [2, 5, 7, 10, 16, 18, 24], "output": 2, "over": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "overcompl": 0, "overflow": 0, "overhead": 0, "own": 0, "page": 0, "paramet": [2, 5, 7, 10, 12, 13, 16, 18, 20, 22, 24], "part": [2, 14], "pass": [2, 7, 9, 12, 16, 18, 20, 22, 24], "pdest": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "penalti": 9, "per": 13, "perf": [], "perform": [0, 2, 9, 10, 13, 14, 16, 24], "platform": 0, "pleas": [0, 9], "plu": 0, "point": [0, 9], "pointer": [0, 2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "polymorph": 0, "port": 0, "portabl": 0, "posit": [2, 5, 7, 10, 16, 18, 24], "possibl": 0, "practic": 9, "preciou": 14, "prevent": [2, 5, 7, 10], "previou": 9, "principl": [0, 14], "print": [1, 2, 5, 7, 9, 10, 18], "process": 14, "produc": [0, 1], "project": [], "promot": [10, 12], "provid": [0, 2, 5, 7, 10, 12, 14, 16, 18, 20, 22, 24], "psrc": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "public": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "push": 14, "put": 1, "quickli": 9, "quickstart": 8, "r": 9, "rang": [2, 5, 7, 10, 16, 18, 24], "raw": [2, 9, 16, 24], "rd": 1, "read": [0, 2, 16, 18, 24], "real": 9, "reason": 0, "reduc": 14, "refer": [0, 2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "referenc": 14, "regist": 14, "regular": [0, 14], "releas": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "reliabl": 3, "remain": [2, 7, 10, 12], "repeat": [], "repres": [2, 18], "represent": [1, 2, 5, 7, 10, 20], "result": [0, 1, 2, 5, 7, 9, 10, 16, 24], "retriev": 9, "return": [1, 2, 5, 7, 9, 10, 12, 13, 16, 18, 20, 22, 24], "right": 10, "rule": 0, "run": 0, "runtim": [13, 14], "safe": 2, "same": [0, 1, 2, 7, 10, 14], "save": [0, 2, 5, 7, 9, 10, 12, 14, 16, 18, 20, 22, 24], "savealign": [2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "scalar": [0, 2, 9, 10], "scond": 7, "seamless": 0, "sec": 13, "secant": 13, "second": [2, 7, 10, 12, 16, 22, 24], "secur": 7, "see": [0, 2, 5, 7, 10, 12, 14, 16, 18, 20, 22, 24], "select": [0, 13], "sequenti": 0, "set": [0, 1, 2, 3, 5, 7, 9, 10, 12, 14, 16, 18, 20, 22, 24], "share": [0, 3], "shift": [10, 16, 24], "short": [0, 3, 9, 10, 12, 16, 20, 22, 24], "short256": [0, 8, 13], "shorter": [], "should": [0, 2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "show": [1, 9], "shown": 24, "side": [2, 7, 10], "sign": [1, 3, 10], "simd": [0, 10, 14, 24], "similar": [0, 2], "similarli": 1, "simpl": [2, 14], "simplic": 0, "simultani": [], "sin": 13, "sine": 13, "singl": [9, 10, 14, 16, 22, 24], "size": [1, 2, 5, 7, 9, 10, 12, 14, 16, 18, 20, 22, 24], "size_t": 9, "slower": 0, "smaller": 9, "snippet": 9, "so": [9, 14], "softwar": 14, "solut": 0, "some": 0, "sourc": [0, 9], "sp": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "specfi": [16, 24], "specif": [0, 2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "specifi": [16, 24], "speed": 14, "src": 0, "sse": 14, "sse2": 14, "sse3": 14, "sse4": 14, "sse5": 14, "ssse3": 14, "stabl": 0, "stai": 18, "stand": 14, "start": [], "static": [2, 3, 5, 7, 10, 12, 14, 16, 18, 20, 22, 24], "std": [1, 2, 5, 7, 9, 10, 12, 13, 16, 18, 20, 22, 24], "store": [2, 5, 7, 10, 12, 14, 16, 18, 20, 22, 24], "storedtyp": [2, 5, 7, 10, 12, 14, 16, 18, 20, 22, 24], "str": [1, 2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "stream": [1, 2, 18], "string": [1, 2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "substract": 10, "subtract": 10, "sum": [10, 13, 22], "suppoert": 9, "support": [0, 2, 5, 7, 9, 14, 18, 20], "svml": [0, 13], "t": [2, 5, 7, 9, 10, 12, 16, 18, 20, 22, 24], "tabl": [], "take": [], "tan": 13, "tangent": 13, "target": 0, "tdd": 0, "temporari": [1, 9], "tensorflow": 0, "term": 14, "termin": [1, 2], "test": [0, 16, 24], "than": [0, 1, 2, 7, 9, 10, 12, 18, 20], "thei": 0, "them": [0, 14], "thi": [0, 1, 2, 5, 7, 8, 9, 10, 12, 13, 14, 16, 18, 20, 22, 24], "third": 1, "those": [0, 14], "though": [0, 9], "through": [2, 5, 7, 10], "throw": [0, 2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "thrown": [0, 2, 5, 7, 10, 16, 18], "thu": 1, "time": [0, 1, 14], "togeth": [1, 9], "tostr": [1, 2, 18], "true": [1, 2, 7, 10, 12, 16, 22, 24], "truncat": [16, 24], "tt": [], "turn": 0, "two": [0, 1, 2, 9, 14, 24], "type": [0, 1, 2, 3, 5, 7, 9, 10, 12, 14, 16, 18, 20, 22, 24], "u": [], "uchar256": [0, 8], "uint256": [0, 8], "uint64_t": 22, "ulong": [], "ulong256": [0, 8], "unari": 1, "undefin": [0, 1], "under": [2, 18], "underli": [1, 2, 5, 7, 10, 16, 18, 20, 24], "unit": 0, "unitari": 10, "unlik": 1, "unsign": [0, 2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "until": [], "up": [9, 14], "us": [0, 2, 5, 7, 9, 10, 12, 13, 14, 16, 18, 20, 22, 24], "ushort256": [0, 8], "util": [0, 14], "v": [16, 24], "val": [5, 7, 10, 12, 20, 22], "valid": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "valu": [0, 1, 2, 3, 5, 7, 9, 10, 12, 13, 14, 16, 18, 20, 22, 24], "variabl": [1, 2, 3, 9, 18], "variou": 9, "vecotr": 10, "vector": [1, 2, 3, 5, 7, 9, 10, 12, 13, 14, 16, 18, 20, 22, 24], "vector_valu": [5, 7, 10], "veri": 0, "version": [0, 1, 2, 5, 7, 8, 10, 12, 13, 16, 18, 20, 22, 24], "via": [7, 10, 12, 20], "visibl": [], "void": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "w": [2, 5, 7, 10, 12, 16, 18, 20, 22, 24], "wa": 9, "wai": [5, 7, 9, 14], "want": [1, 9], "we": [1, 9], "well": 0, "were": [0, 10], "what": 0, "when": [0, 1, 7, 9, 10, 14, 20], "where": [0, 24], "which": [0, 1, 2, 5, 7, 9, 10, 12, 13, 14, 16, 18, 20, 22, 24], "while": [0, 1, 10, 14], "whole": [16, 24], "whose": 2, "why": 0, "window": 0, "within": [0, 2, 5, 7, 10, 16, 18, 24], "withing": 18, "without": 0, "won": [2, 5, 7, 10], "work": [0, 1, 2, 5, 7, 10, 14, 24], "written": [1, 2], "wrote": 0, "www": [], "x86": 0, "xor": [1, 10], "yet": [16, 24], "you": 9, "zero": [1, 7, 10, 12, 16, 20, 24]}, "titles": ["About AVX CPP", "Examples", "avx::Char256", "avx::constants", "Examples", "avx::Double256", "Examples", "avx::Float256", "AVX CPP", "Examples", "avx::Int256", "Examples", "avx::Long256", "AVX Math", "Quickstart", "Examples", "avx::Short256", "Examples", "avx::UChar256", "Examples", "avx::UInt256", "Examples", "avx::ULong256", "Examples", "avx::UShort256"], "titleterms": {"about": 0, "arithmet": 1, "avx": [0, 1, 2, 3, 5, 7, 8, 9, 10, 12, 13, 16, 18, 20, 22, 24], "basic": 1, "boost": [], "char256": [1, 2], "class": [0, 8], "constant": 3, "cpp": [0, 8], "document": 8, "double256": 5, "exampl": [1, 4, 6, 9, 11, 15, 17, 19, 21, 23], "featur": 0, "float256": 7, "initi": [1, 9], "int256": [9, 10], "limit": 0, "list": [0, 1], "long256": 12, "match": [], "math": 13, "metod": 1, "oper": [1, 10], "perf": [], "quickstart": 14, "sampl": 9, "short256": 16, "specif": 1, "support": [1, 10], "todo": [], "uchar256": 18, "uint256": 20, "ulong256": 22, "us": 1, "usag": 9, "ushort256": 24}})