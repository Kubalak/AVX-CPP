<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceavx_1_1constants" kind="namespace" language="C++">
    <compoundname>avx::constants</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceavx_1_1constants_1a3f5680987301f20b1d9a594d79c70827" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::ONES</definition>
        <argsstring></argsstring>
        <name>ONES</name>
        <initializer>= _mm256_set1_epi8(0xFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector containing all 1&apos;s - 0xFF&apos;s </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="16" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1ab397c5a7122f89fb5a454d35b432bab3" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI8_ONE</definition>
        <argsstring></argsstring>
        <name>EPI8_ONE</name>
        <initializer>= _mm256_set1_epi8(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of chars set to 1 - 0x01 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="20" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1a383d4fdbbad3c259ef6bf78518a61725" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI8_CRATE_EPI16</definition>
        <argsstring></argsstring>
        <name>EPI8_CRATE_EPI16</name>
        <initializer>= _mm256_set1_epi16(0xFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector containing 0xFF aligned in the following order: 0x00FF&apos;00FF...00FF </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="24" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1a773337a353b118922a7fea8c21471d5e" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI8_CRATE_EPI16_INVERSE</definition>
        <argsstring></argsstring>
        <name>EPI8_CRATE_EPI16_INVERSE</name>
        <initializer>= _mm256_set1_epi16(0xFF00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector containing 0xFF aligned in the following order: 0xFF00&apos;FF00...FF00 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="28" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1ac5c55e62168e08b8ce915145063fc815" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI8_CRATE_EPI32</definition>
        <argsstring></argsstring>
        <name>EPI8_CRATE_EPI32</name>
        <initializer>= _mm256_set1_epi32(0xFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector containing 0xFF aligned in the following order: 0x000000FF&apos;000000FF...000000FF </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="32" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1af441eb9f1aba10d96e83babaca6e67f4" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI8_CRATE_EPI32_SHIFT_I</definition>
        <argsstring></argsstring>
        <name>EPI8_CRATE_EPI32_SHIFT_I</name>
        <initializer>= _mm256_set1_epi32(0xFF00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector containing 0xFF aligned in the following order: 0x0000FF00&apos;0000FF00...0000FF00 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="36" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1add5e75515f24bb729a381d8212892edf" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI8_CRATE_EPI32_SHIFT_II</definition>
        <argsstring></argsstring>
        <name>EPI8_CRATE_EPI32_SHIFT_II</name>
        <initializer>= _mm256_set1_epi32(0xFF0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector containing 0xFF aligned in the following order: 0x00FF0000&apos;00FF00000...00FF0000 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="40" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1a5f11df355d70dffb695a142453d2dfcf" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI8_CRATE_EPI32_SHIFT_III</definition>
        <argsstring></argsstring>
        <name>EPI8_CRATE_EPI32_SHIFT_III</name>
        <initializer>= _mm256_set1_epi32(0xFF000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector containing 0xFF aligned in the following order: 0xFF000000&apos;FF00000000...FF000000 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="44" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1a8d9856e86a2fe198a92d6860d3b22bf9" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI16_ONE</definition>
        <argsstring></argsstring>
        <name>EPI16_ONE</name>
        <initializer>= _mm256_set1_epi16(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of short values set to 1 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="48" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1a141f350d38327de2926ca64673bfe8f1" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI16_CRATE_EPI32</definition>
        <argsstring></argsstring>
        <name>EPI16_CRATE_EPI32</name>
        <initializer>= _mm256_set1_epi32(0xFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector containing 0xFFFF aligned in the following order: 0x0000FFFF&apos;0000FFFF...0000FFFF </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="52" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1a9165f0517c3ddab536f959ff753c7cde" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI16_CRATE_EPI32_INVERSE</definition>
        <argsstring></argsstring>
        <name>EPI16_CRATE_EPI32_INVERSE</name>
        <initializer>= _mm256_set1_epi32(0xFFFF0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector containing 0xFFFF aligned in the following order: 0xFFFF0000&apos;FFFF0000...FFFF0000 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="56" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1ac1152fce4fac2aa92f039ace3e79a908" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI32_CRATE_EPI64</definition>
        <argsstring></argsstring>
        <name>EPI32_CRATE_EPI64</name>
        <initializer>= _mm256_set1_epi64x(0xFFFFFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector containing 0xFFFF&apos;FFFF aligned in the following order: 0x00000000FFFFFFFF&apos;00000000FFFFFFFF...00000000FFFFFFFF </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="60" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1a255eb1f57cf82d6cb4fb2562d1bc9c9a" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI32_SIGN</definition>
        <argsstring></argsstring>
        <name>EPI32_SIGN</name>
        <initializer>= _mm256_set1_epi32(0x8000&apos;0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of int values with sign bit set to 1 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="64" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1a2165f5e19b0a9f71787d10d03da4c1a3" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI32_ONE</definition>
        <argsstring></argsstring>
        <name>EPI32_ONE</name>
        <initializer>= _mm256_set1_epi32(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of int values set to 1 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="68" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1a9d8b9d46ca22d2022022164c771a0b42" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI64_ONE</definition>
        <argsstring></argsstring>
        <name>EPI64_ONE</name>
        <initializer>= _mm256_set1_epi64x(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of long long values set to 1 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="72" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1a12c0b91367073bab868d23800d3b30bd" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI64_SIGN</definition>
        <argsstring></argsstring>
        <name>EPI64_SIGN</name>
        <initializer>= _mm256_set1_epi64x(0x8000&apos;0000&apos;0000&apos;0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of long long values with sign bit set to 1 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="76" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1a730c7f620e0947cc68d4ebedeb3f10f0" prot="public" static="yes" mutable="no">
        <type>const __m256d</type>
        <definition>const __m256d avx::constants::DOUBLE_NO_SIGN</definition>
        <argsstring></argsstring>
        <name>DOUBLE_NO_SIGN</name>
        <initializer>= _mm256_castsi256_pd(_mm256_set1_epi64x(0x7FFF&apos;FFFF&apos;FFFF&apos;FFFF))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mask for double values with sign bit set to 0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="80" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1abc94e2b8b64ff2965d6c8f420bf7ef79" prot="public" static="yes" mutable="no">
        <type>const __m256</type>
        <definition>const __m256 avx::constants::FLOAT_NO_SIGN</definition>
        <argsstring></argsstring>
        <name>FLOAT_NO_SIGN</name>
        <initializer>= _mm256_castsi256_ps(_mm256_set1_epi32(0x7FFF&apos;FFFF))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mask for float values with sign bit set to 0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="84" column="36" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1ab5be15cec272baeb1e08edc517b8cc39" prot="public" static="yes" mutable="no">
        <type>const __m256d</type>
        <definition>const __m256d avx::constants::DOUBLE_ONE</definition>
        <argsstring></argsstring>
        <name>DOUBLE_ONE</name>
        <initializer>= _mm256_set1_pd(1.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector with double values set to 1.0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="88" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1a9b1cca554d88045b5239d244040db840" prot="public" static="yes" mutable="no">
        <type>const __m256</type>
        <definition>const __m256 avx::constants::FLOAT_ONE</definition>
        <argsstring></argsstring>
        <name>FLOAT_ONE</name>
        <initializer>= _mm256_set1_ps(1.0f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector with float values set to 1 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="92" column="36" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1acb88b7523b809f737d9153e4e2f3af18" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::FLOAT_LIMIT</definition>
        <argsstring></argsstring>
        <name>FLOAT_LIMIT</name>
        <initializer>= _mm256_set1_epi32(0x0100&apos;0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector with value limiting float reliable casting aka 2^24 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="96" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1aea7d44ff29404b78e595a332d1930c7a" prot="public" static="yes" mutable="no">
        <type>const __m256i</type>
        <definition>const __m256i avx::constants::EPI32_SLOWEST</definition>
        <argsstring></argsstring>
        <name>EPI32_SLOWEST</name>
        <initializer>= _mm256_set1_epi32(0x8000&apos;0001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="98" column="37" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceavx_1_1constants_1a3bdf66ca76d2eb83bfd5d8498e020cd4" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int avx::constants::INT2FLOAT_LIMIT</definition>
        <argsstring></argsstring>
        <name>INT2FLOAT_LIMIT</name>
        <initializer>= 0x0100&apos;0000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>2^24 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="103" column="30" bodyfile="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Namespace containing constants shared across all types. </para>
    </detaileddescription>
    <location file="/home/jakub/Publiczny/AVX-CPP/src/types/constants.hpp" line="11" column="5"/>
  </compounddef>
</doxygen>
